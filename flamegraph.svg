<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="14115094"><g><title>hai606i_sudoku`core::ptr::drop_in_place&lt;(hai606i_sudoku::simple_sudoku::Sudoku,alloc::vec::Vec&lt;bool&gt;)&gt; (2,489 samples, 0.02%)</title><rect x="0.0028%" y="693" width="0.0176%" height="15" fill="rgb(227,0,7)" fg:x="391" fg:w="2489"/><text x="0.2528%" y="703.50"></text></g><g><title>hai606i_sudoku`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,119 samples, 0.02%)</title><rect x="0.0009%" y="709" width="0.0221%" height="15" fill="rgb(217,0,24)" fg:x="130" fg:w="3119"/><text x="0.2509%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (1,842 samples, 0.01%)</title><rect x="0.0483%" y="37" width="0.0130%" height="15" fill="rgb(221,193,54)" fg:x="6820" fg:w="1842"/><text x="0.2983%" y="47.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (2,633 samples, 0.02%)</title><rect x="0.0482%" y="53" width="0.0187%" height="15" fill="rgb(248,212,6)" fg:x="6810" fg:w="2633"/><text x="0.2982%" y="63.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (3,750 samples, 0.03%)</title><rect x="0.0482%" y="69" width="0.0266%" height="15" fill="rgb(208,68,35)" fg:x="6797" fg:w="3750"/><text x="0.2982%" y="79.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (5,045 samples, 0.04%)</title><rect x="0.0480%" y="85" width="0.0357%" height="15" fill="rgb(232,128,0)" fg:x="6778" fg:w="5045"/><text x="0.2980%" y="95.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (6,435 samples, 0.05%)</title><rect x="0.0479%" y="101" width="0.0456%" height="15" fill="rgb(207,160,47)" fg:x="6759" fg:w="6435"/><text x="0.2979%" y="111.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (7,910 samples, 0.06%)</title><rect x="0.0477%" y="117" width="0.0560%" height="15" fill="rgb(228,23,34)" fg:x="6738" fg:w="7910"/><text x="0.2977%" y="127.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (9,481 samples, 0.07%)</title><rect x="0.0476%" y="133" width="0.0672%" height="15" fill="rgb(218,30,26)" fg:x="6715" fg:w="9481"/><text x="0.2976%" y="143.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (10,922 samples, 0.08%)</title><rect x="0.0473%" y="149" width="0.0774%" height="15" fill="rgb(220,122,19)" fg:x="6680" fg:w="10922"/><text x="0.2973%" y="159.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (12,592 samples, 0.09%)</title><rect x="0.0471%" y="165" width="0.0892%" height="15" fill="rgb(250,228,42)" fg:x="6655" fg:w="12592"/><text x="0.2971%" y="175.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (14,728 samples, 0.10%)</title><rect x="0.0469%" y="181" width="0.1043%" height="15" fill="rgb(240,193,28)" fg:x="6615" fg:w="14728"/><text x="0.2969%" y="191.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (1,868 samples, 0.01%)</title><rect x="0.1512%" y="181" width="0.0132%" height="15" fill="rgb(216,20,37)" fg:x="21347" fg:w="1868"/><text x="0.4012%" y="191.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (17,654 samples, 0.13%)</title><rect x="0.0465%" y="197" width="0.1251%" height="15" fill="rgb(206,188,39)" fg:x="6561" fg:w="17654"/><text x="0.2965%" y="207.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (3,272 samples, 0.02%)</title><rect x="0.1716%" y="197" width="0.0232%" height="15" fill="rgb(217,207,13)" fg:x="24228" fg:w="3272"/><text x="0.4216%" y="207.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (22,717 samples, 0.16%)</title><rect x="0.0457%" y="213" width="0.1609%" height="15" fill="rgb(231,73,38)" fg:x="6457" fg:w="22717"/><text x="0.2957%" y="223.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (1,910 samples, 0.01%)</title><rect x="0.2179%" y="197" width="0.0135%" height="15" fill="rgb(225,20,46)" fg:x="30763" fg:w="1910"/><text x="0.4679%" y="207.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (4,994 samples, 0.04%)</title><rect x="0.2068%" y="213" width="0.0354%" height="15" fill="rgb(210,31,41)" fg:x="29194" fg:w="4994"/><text x="0.4568%" y="223.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (30,296 samples, 0.21%)</title><rect x="0.0448%" y="229" width="0.2146%" height="15" fill="rgb(221,200,47)" fg:x="6317" fg:w="30296"/><text x="0.2948%" y="239.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (2,762 samples, 0.02%)</title><rect x="0.2761%" y="213" width="0.0196%" height="15" fill="rgb(226,26,5)" fg:x="38976" fg:w="2762"/><text x="0.5261%" y="223.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (7,299 samples, 0.05%)</title><rect x="0.2596%" y="229" width="0.0517%" height="15" fill="rgb(249,33,26)" fg:x="36640" fg:w="7299"/><text x="0.5096%" y="239.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (1,718 samples, 0.01%)</title><rect x="0.3113%" y="229" width="0.0122%" height="15" fill="rgb(235,183,28)" fg:x="43939" fg:w="1718"/><text x="0.5613%" y="239.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (41,297 samples, 0.29%)</title><rect x="0.0433%" y="245" width="0.2926%" height="15" fill="rgb(221,5,38)" fg:x="6107" fg:w="41297"/><text x="0.2933%" y="255.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (3,601 samples, 0.03%)</title><rect x="0.3549%" y="229" width="0.0255%" height="15" fill="rgb(247,18,42)" fg:x="50091" fg:w="3601"/><text x="0.6049%" y="239.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (9,023 samples, 0.06%)</title><rect x="0.3360%" y="245" width="0.0639%" height="15" fill="rgb(241,131,45)" fg:x="47429" fg:w="9023"/><text x="0.5860%" y="255.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,067 samples, 0.01%)</title><rect x="0.3999%" y="245" width="0.0146%" height="15" fill="rgb(249,31,29)" fg:x="56452" fg:w="2067"/><text x="0.6499%" y="255.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,485 samples, 0.01%)</title><rect x="0.4148%" y="245" width="0.0105%" height="15" fill="rgb(225,111,53)" fg:x="58554" fg:w="1485"/><text x="0.6648%" y="255.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (54,774 samples, 0.39%)</title><rect x="0.0417%" y="261" width="0.3881%" height="15" fill="rgb(238,160,17)" fg:x="5886" fg:w="54774"/><text x="0.2917%" y="271.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,415 samples, 0.03%)</title><rect x="0.4530%" y="245" width="0.0313%" height="15" fill="rgb(214,148,48)" fg:x="63943" fg:w="4415"/><text x="0.7030%" y="255.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (10,855 samples, 0.08%)</title><rect x="0.4301%" y="261" width="0.0769%" height="15" fill="rgb(232,36,49)" fg:x="60710" fg:w="10855"/><text x="0.6801%" y="271.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,377 samples, 0.02%)</title><rect x="0.5070%" y="261" width="0.0168%" height="15" fill="rgb(209,103,24)" fg:x="71565" fg:w="2377"/><text x="0.7570%" y="271.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,596 samples, 0.01%)</title><rect x="0.5241%" y="261" width="0.0113%" height="15" fill="rgb(229,88,8)" fg:x="73984" fg:w="1596"/><text x="0.7741%" y="271.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (70,584 samples, 0.50%)</title><rect x="0.0401%" y="277" width="0.5001%" height="15" fill="rgb(213,181,19)" fg:x="5654" fg:w="70584"/><text x="0.2901%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,525 samples, 0.01%)</title><rect x="0.5883%" y="245" width="0.0108%" height="15" fill="rgb(254,191,54)" fg:x="83042" fg:w="1525"/><text x="0.8383%" y="255.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,809 samples, 0.03%)</title><rect x="0.5653%" y="261" width="0.0341%" height="15" fill="rgb(241,83,37)" fg:x="79787" fg:w="4809"/><text x="0.8153%" y="271.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (11,985 samples, 0.08%)</title><rect x="0.5403%" y="277" width="0.0849%" height="15" fill="rgb(233,36,39)" fg:x="76270" fg:w="11985"/><text x="0.7903%" y="287.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,600 samples, 0.02%)</title><rect x="0.6253%" y="277" width="0.0184%" height="15" fill="rgb(226,3,54)" fg:x="88255" fg:w="2600"/><text x="0.8753%" y="287.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,734 samples, 0.01%)</title><rect x="0.6440%" y="277" width="0.0123%" height="15" fill="rgb(245,192,40)" fg:x="90901" fg:w="1734"/><text x="0.8940%" y="287.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (87,910 samples, 0.62%)</title><rect x="0.0383%" y="293" width="0.6228%" height="15" fill="rgb(238,167,29)" fg:x="5407" fg:w="87910"/><text x="0.2883%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,462 samples, 0.01%)</title><rect x="0.7090%" y="261" width="0.0104%" height="15" fill="rgb(232,182,51)" fg:x="100078" fg:w="1462"/><text x="0.9590%" y="271.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,833 samples, 0.03%)</title><rect x="0.6854%" y="277" width="0.0342%" height="15" fill="rgb(231,60,39)" fg:x="96740" fg:w="4833"/><text x="0.9354%" y="287.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (11,812 samples, 0.08%)</title><rect x="0.6614%" y="293" width="0.0837%" height="15" fill="rgb(208,69,12)" fg:x="93358" fg:w="11812"/><text x="0.9114%" y="303.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,406 samples, 0.02%)</title><rect x="0.7451%" y="293" width="0.0170%" height="15" fill="rgb(235,93,37)" fg:x="105170" fg:w="2406"/><text x="0.9951%" y="303.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,765 samples, 0.01%)</title><rect x="0.7625%" y="293" width="0.0125%" height="15" fill="rgb(213,116,39)" fg:x="107633" fg:w="1765"/><text x="1.0125%" y="303.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (104,933 samples, 0.74%)</title><rect x="0.0365%" y="309" width="0.7434%" height="15" fill="rgb(222,207,29)" fg:x="5156" fg:w="104933"/><text x="0.2865%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,511 samples, 0.01%)</title><rect x="0.8304%" y="277" width="0.0107%" height="15" fill="rgb(206,96,30)" fg:x="117205" fg:w="1511"/><text x="1.0804%" y="287.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,977 samples, 0.04%)</title><rect x="0.8061%" y="293" width="0.0353%" height="15" fill="rgb(218,138,4)" fg:x="113780" fg:w="4977"/><text x="1.0561%" y="303.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (12,350 samples, 0.09%)</title><rect x="0.7803%" y="309" width="0.0875%" height="15" fill="rgb(250,191,14)" fg:x="110138" fg:w="12350"/><text x="1.0303%" y="319.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,521 samples, 0.02%)</title><rect x="0.8678%" y="309" width="0.0179%" height="15" fill="rgb(239,60,40)" fg:x="122488" fg:w="2521"/><text x="1.1178%" y="319.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,773 samples, 0.01%)</title><rect x="0.8859%" y="309" width="0.0126%" height="15" fill="rgb(206,27,48)" fg:x="125046" fg:w="1773"/><text x="1.1359%" y="319.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (122,610 samples, 0.87%)</title><rect x="0.0347%" y="325" width="0.8686%" height="15" fill="rgb(225,35,8)" fg:x="4904" fg:w="122610"/><text x="0.2847%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,602 samples, 0.01%)</title><rect x="0.9552%" y="293" width="0.0113%" height="15" fill="rgb(250,213,24)" fg:x="134830" fg:w="1602"/><text x="1.2052%" y="303.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (5,273 samples, 0.04%)</title><rect x="0.9295%" y="309" width="0.0374%" height="15" fill="rgb(247,123,22)" fg:x="131201" fg:w="5273"/><text x="1.1795%" y="319.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (12,594 samples, 0.09%)</title><rect x="0.9038%" y="325" width="0.0892%" height="15" fill="rgb(231,138,38)" fg:x="127572" fg:w="12594"/><text x="1.1538%" y="335.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,489 samples, 0.02%)</title><rect x="0.9930%" y="325" width="0.0176%" height="15" fill="rgb(231,145,46)" fg:x="140166" fg:w="2489"/><text x="1.2430%" y="335.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,851 samples, 0.01%)</title><rect x="1.0110%" y="325" width="0.0131%" height="15" fill="rgb(251,118,11)" fg:x="142708" fg:w="1851"/><text x="1.2610%" y="335.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (140,608 samples, 1.00%)</title><rect x="0.0329%" y="341" width="0.9962%" height="15" fill="rgb(217,147,25)" fg:x="4648" fg:w="140608"/><text x="0.2829%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,624 samples, 0.01%)</title><rect x="1.0835%" y="309" width="0.0115%" height="15" fill="rgb(247,81,37)" fg:x="152933" fg:w="1624"/><text x="1.3335%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,432 samples, 0.01%)</title><rect x="1.0848%" y="293" width="0.0101%" height="15" fill="rgb(209,12,38)" fg:x="153125" fg:w="1432"/><text x="1.3348%" y="303.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (5,516 samples, 0.04%)</title><rect x="1.0561%" y="325" width="0.0391%" height="15" fill="rgb(227,1,9)" fg:x="149073" fg:w="5516"/><text x="1.3061%" y="335.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (13,086 samples, 0.09%)</title><rect x="1.0294%" y="341" width="0.0927%" height="15" fill="rgb(248,47,43)" fg:x="145303" fg:w="13086"/><text x="1.2794%" y="351.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,510 samples, 0.02%)</title><rect x="1.1221%" y="341" width="0.0178%" height="15" fill="rgb(221,10,30)" fg:x="158389" fg:w="2510"/><text x="1.3721%" y="351.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,721 samples, 0.01%)</title><rect x="1.1403%" y="341" width="0.0122%" height="15" fill="rgb(210,229,1)" fg:x="160950" fg:w="1721"/><text x="1.3903%" y="351.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (158,977 samples, 1.13%)</title><rect x="0.0312%" y="357" width="1.1263%" height="15" fill="rgb(222,148,37)" fg:x="4398" fg:w="158977"/><text x="0.2812%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,506 samples, 0.01%)</title><rect x="1.2072%" y="325" width="0.0107%" height="15" fill="rgb(234,67,33)" fg:x="170400" fg:w="1506"/><text x="1.4572%" y="335.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (5,173 samples, 0.04%)</title><rect x="1.1815%" y="341" width="0.0366%" height="15" fill="rgb(247,98,35)" fg:x="166766" fg:w="5173"/><text x="1.4315%" y="351.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (12,143 samples, 0.09%)</title><rect x="1.1578%" y="357" width="0.0860%" height="15" fill="rgb(247,138,52)" fg:x="163427" fg:w="12143"/><text x="1.4078%" y="367.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (2,203 samples, 0.02%)</title><rect x="1.2438%" y="357" width="0.0156%" height="15" fill="rgb(213,79,30)" fg:x="175570" fg:w="2203"/><text x="1.4938%" y="367.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,605 samples, 0.01%)</title><rect x="1.2598%" y="357" width="0.0114%" height="15" fill="rgb(246,177,23)" fg:x="177823" fg:w="1605"/><text x="1.5098%" y="367.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (175,860 samples, 1.25%)</title><rect x="0.0296%" y="373" width="1.2459%" height="15" fill="rgb(230,62,27)" fg:x="4184" fg:w="175860"/><text x="0.2796%" y="383.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,222 samples, 0.03%)</title><rect x="1.2943%" y="357" width="0.0299%" height="15" fill="rgb(216,154,8)" fg:x="182695" fg:w="4222"/><text x="1.5443%" y="367.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (9,604 samples, 0.07%)</title><rect x="1.2758%" y="373" width="0.0680%" height="15" fill="rgb(244,35,45)" fg:x="180077" fg:w="9604"/><text x="1.5258%" y="383.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (1,640 samples, 0.01%)</title><rect x="1.3438%" y="373" width="0.0116%" height="15" fill="rgb(251,115,12)" fg:x="189681" fg:w="1640"/><text x="1.5938%" y="383.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (189,074 samples, 1.34%)</title><rect x="0.0284%" y="389" width="1.3395%" height="15" fill="rgb(240,54,50)" fg:x="4015" fg:w="189074"/><text x="0.2784%" y="399.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (2,974 samples, 0.02%)</title><rect x="1.3811%" y="373" width="0.0211%" height="15" fill="rgb(233,84,52)" fg:x="194945" fg:w="2974"/><text x="1.6311%" y="383.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (6,766 samples, 0.05%)</title><rect x="1.3681%" y="389" width="0.0479%" height="15" fill="rgb(207,117,47)" fg:x="193110" fg:w="6766"/><text x="1.6181%" y="399.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (198,347 samples, 1.41%)</title><rect x="0.0276%" y="405" width="1.4052%" height="15" fill="rgb(249,43,39)" fg:x="3896" fg:w="198347"/><text x="0.2776%" y="415.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (1,779 samples, 0.01%)</title><rect x="1.4408%" y="389" width="0.0126%" height="15" fill="rgb(209,38,44)" fg:x="203364" fg:w="1779"/><text x="1.6908%" y="399.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (4,106 samples, 0.03%)</title><rect x="1.4329%" y="405" width="0.0291%" height="15" fill="rgb(236,212,23)" fg:x="202255" fg:w="4106"/><text x="1.6829%" y="415.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (204,148 samples, 1.45%)</title><rect x="0.0271%" y="421" width="1.4463%" height="15" fill="rgb(242,79,21)" fg:x="3824" fg:w="204148"/><text x="0.2771%" y="431.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (2,748 samples, 0.02%)</title><rect x="1.4735%" y="421" width="0.0195%" height="15" fill="rgb(211,96,35)" fg:x="207990" fg:w="2748"/><text x="1.7235%" y="431.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (208,094 samples, 1.47%)</title><rect x="0.0267%" y="437" width="1.4743%" height="15" fill="rgb(253,215,40)" fg:x="3764" fg:w="208094"/><text x="0.2767%" y="447.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (2,005 samples, 0.01%)</title><rect x="1.5010%" y="437" width="0.0142%" height="15" fill="rgb(211,81,21)" fg:x="211869" fg:w="2005"/><text x="1.7510%" y="447.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (211,091 samples, 1.50%)</title><rect x="0.0264%" y="453" width="1.4955%" height="15" fill="rgb(208,190,38)" fg:x="3721" fg:w="211091"/><text x="0.2764%" y="463.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (1,924 samples, 0.01%)</title><rect x="1.5219%" y="453" width="0.0136%" height="15" fill="rgb(235,213,38)" fg:x="214818" fg:w="1924"/><text x="1.7719%" y="463.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (213,874 samples, 1.52%)</title><rect x="0.0261%" y="469" width="1.5152%" height="15" fill="rgb(237,122,38)" fg:x="3685" fg:w="213874"/><text x="0.2761%" y="479.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (1,833 samples, 0.01%)</title><rect x="1.5414%" y="469" width="0.0130%" height="15" fill="rgb(244,218,35)" fg:x="217564" fg:w="1833"/><text x="1.7914%" y="479.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (216,505 samples, 1.53%)</title><rect x="0.0258%" y="485" width="1.5339%" height="15" fill="rgb(240,68,47)" fg:x="3647" fg:w="216505"/><text x="0.2758%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (1,968 samples, 0.01%)</title><rect x="1.5597%" y="485" width="0.0139%" height="15" fill="rgb(210,16,53)" fg:x="220160" fg:w="1968"/><text x="1.8097%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (219,354 samples, 1.55%)</title><rect x="0.0256%" y="501" width="1.5540%" height="15" fill="rgb(235,124,12)" fg:x="3607" fg:w="219354"/><text x="0.2756%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (2,397 samples, 0.02%)</title><rect x="1.5796%" y="501" width="0.0170%" height="15" fill="rgb(224,169,11)" fg:x="222967" fg:w="2397"/><text x="1.8296%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (222,809 samples, 1.58%)</title><rect x="0.0252%" y="517" width="1.5785%" height="15" fill="rgb(250,166,2)" fg:x="3555" fg:w="222809"/><text x="0.2752%" y="527.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (2,959 samples, 0.02%)</title><rect x="1.6038%" y="517" width="0.0210%" height="15" fill="rgb(242,216,29)" fg:x="226371" fg:w="2959"/><text x="1.8538%" y="527.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (227,060 samples, 1.61%)</title><rect x="0.0248%" y="533" width="1.6086%" height="15" fill="rgb(230,116,27)" fg:x="3499" fg:w="227060"/><text x="0.2748%" y="543.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (3,165 samples, 0.02%)</title><rect x="1.6335%" y="533" width="0.0224%" height="15" fill="rgb(228,99,48)" fg:x="230574" fg:w="3165"/><text x="1.8835%" y="543.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (231,468 samples, 1.64%)</title><rect x="0.0243%" y="549" width="1.6399%" height="15" fill="rgb(253,11,6)" fg:x="3424" fg:w="231468"/><text x="0.2743%" y="559.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (2,855 samples, 0.02%)</title><rect x="1.6642%" y="549" width="0.0202%" height="15" fill="rgb(247,143,39)" fg:x="234904" fg:w="2855"/><text x="1.9142%" y="559.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (235,489 samples, 1.67%)</title><rect x="0.0239%" y="565" width="1.6683%" height="15" fill="rgb(236,97,10)" fg:x="3376" fg:w="235489"/><text x="0.2739%" y="575.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (2,073 samples, 0.01%)</title><rect x="1.6923%" y="565" width="0.0147%" height="15" fill="rgb(233,208,19)" fg:x="238870" fg:w="2073"/><text x="1.9423%" y="575.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (238,300 samples, 1.69%)</title><rect x="0.0237%" y="581" width="1.6883%" height="15" fill="rgb(216,164,2)" fg:x="3343" fg:w="238300"/><text x="0.2737%" y="591.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (240,180 samples, 1.70%)</title><rect x="0.0235%" y="597" width="1.7016%" height="15" fill="rgb(220,129,5)" fg:x="3313" fg:w="240180"/><text x="0.2735%" y="607.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (241,526 samples, 1.71%)</title><rect x="0.0234%" y="613" width="1.7111%" height="15" fill="rgb(242,17,10)" fg:x="3301" fg:w="241526"/><text x="0.2734%" y="623.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (242,713 samples, 1.72%)</title><rect x="0.0233%" y="629" width="1.7195%" height="15" fill="rgb(242,107,0)" fg:x="3292" fg:w="242713"/><text x="0.2733%" y="639.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (243,725 samples, 1.73%)</title><rect x="0.0233%" y="645" width="1.7267%" height="15" fill="rgb(251,28,31)" fg:x="3283" fg:w="243725"/><text x="0.2733%" y="655.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (244,471 samples, 1.73%)</title><rect x="0.0232%" y="661" width="1.7320%" height="15" fill="rgb(233,223,10)" fg:x="3275" fg:w="244471"/><text x="0.2732%" y="671.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (244,951 samples, 1.74%)</title><rect x="0.0232%" y="677" width="1.7354%" height="15" fill="rgb(215,21,27)" fg:x="3268" fg:w="244951"/><text x="0.2732%" y="687.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (245,161 samples, 1.74%)</title><rect x="0.0231%" y="693" width="1.7369%" height="15" fill="rgb(232,23,21)" fg:x="3267" fg:w="245161"/><text x="0.2731%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::_is_unique (245,238 samples, 1.74%)</title><rect x="0.0231%" y="709" width="1.7374%" height="15" fill="rgb(244,5,23)" fg:x="3266" fg:w="245238"/><text x="0.2731%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (2,476 samples, 0.02%)</title><rect x="1.7606%" y="469" width="0.0175%" height="15" fill="rgb(226,81,46)" fg:x="248515" fg:w="2476"/><text x="2.0106%" y="479.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,380 samples, 0.02%)</title><rect x="1.7606%" y="485" width="0.0239%" height="15" fill="rgb(247,70,30)" fg:x="248505" fg:w="3380"/><text x="2.0106%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,627 samples, 0.03%)</title><rect x="1.7606%" y="501" width="0.0257%" height="15" fill="rgb(212,68,19)" fg:x="248505" fg:w="3627"/><text x="2.0106%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,681 samples, 0.03%)</title><rect x="1.7606%" y="533" width="0.0261%" height="15" fill="rgb(240,187,13)" fg:x="248505" fg:w="3681"/><text x="2.0106%" y="543.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,681 samples, 0.03%)</title><rect x="1.7606%" y="517" width="0.0261%" height="15" fill="rgb(223,113,26)" fg:x="248505" fg:w="3681"/><text x="2.0106%" y="527.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,682 samples, 0.03%)</title><rect x="1.7606%" y="549" width="0.0261%" height="15" fill="rgb(206,192,2)" fg:x="248505" fg:w="3682"/><text x="2.0106%" y="559.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,688 samples, 0.03%)</title><rect x="1.7606%" y="565" width="0.0261%" height="15" fill="rgb(241,108,4)" fg:x="248505" fg:w="3688"/><text x="2.0106%" y="575.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,691 samples, 0.03%)</title><rect x="1.7606%" y="581" width="0.0261%" height="15" fill="rgb(247,173,49)" fg:x="248505" fg:w="3691"/><text x="2.0106%" y="591.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,696 samples, 0.03%)</title><rect x="1.7606%" y="597" width="0.0262%" height="15" fill="rgb(224,114,35)" fg:x="248505" fg:w="3696"/><text x="2.0106%" y="607.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,699 samples, 0.03%)</title><rect x="1.7606%" y="613" width="0.0262%" height="15" fill="rgb(245,159,27)" fg:x="248505" fg:w="3699"/><text x="2.0106%" y="623.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,703 samples, 0.03%)</title><rect x="1.7606%" y="629" width="0.0262%" height="15" fill="rgb(245,172,44)" fg:x="248505" fg:w="3703"/><text x="2.0106%" y="639.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,706 samples, 0.03%)</title><rect x="1.7606%" y="645" width="0.0263%" height="15" fill="rgb(236,23,11)" fg:x="248505" fg:w="3706"/><text x="2.0106%" y="655.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,711 samples, 0.03%)</title><rect x="1.7606%" y="661" width="0.0263%" height="15" fill="rgb(205,117,38)" fg:x="248505" fg:w="3711"/><text x="2.0106%" y="671.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,718 samples, 0.03%)</title><rect x="1.7606%" y="677" width="0.0263%" height="15" fill="rgb(237,72,25)" fg:x="248505" fg:w="3718"/><text x="2.0106%" y="687.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,720 samples, 0.03%)</title><rect x="1.7606%" y="693" width="0.0264%" height="15" fill="rgb(244,70,9)" fg:x="248505" fg:w="3720"/><text x="2.0106%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::backtrack_solve (3,724 samples, 0.03%)</title><rect x="1.7606%" y="709" width="0.0264%" height="15" fill="rgb(217,125,39)" fg:x="248504" fg:w="3724"/><text x="2.0106%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::generate (252,881 samples, 1.79%)</title><rect x="0.0001%" y="725" width="1.7916%" height="15" fill="rgb(235,36,10)" fg:x="13" fg:w="252881"/><text x="0.2501%" y="735.50">h..</text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::rule_solve (5,474 samples, 0.04%)</title><rect x="1.7917%" y="725" width="0.0388%" height="15" fill="rgb(251,123,47)" fg:x="252894" fg:w="5474"/><text x="2.0417%" y="735.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::main (258,890 samples, 1.83%)</title><rect x="0.0000%" y="741" width="1.8341%" height="15" fill="rgb(221,13,13)" fg:x="0" fg:w="258890"/><text x="0.2500%" y="751.50">h..</text></g><g><title>dyld`start (258,897 samples, 1.83%)</title><rect x="0.0000%" y="821" width="1.8342%" height="15" fill="rgb(238,131,9)" fg:x="0" fg:w="258897"/><text x="0.2500%" y="831.50">d..</text></g><g><title>hai606i_sudoku`main (258,897 samples, 1.83%)</title><rect x="0.0000%" y="805" width="1.8342%" height="15" fill="rgb(211,50,8)" fg:x="0" fg:w="258897"/><text x="0.2500%" y="815.50">h..</text></g><g><title>hai606i_sudoku`std::rt::lang_start_internal (258,897 samples, 1.83%)</title><rect x="0.0000%" y="789" width="1.8342%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="258897"/><text x="0.2500%" y="799.50">h..</text></g><g><title>hai606i_sudoku`std::rt::lang_start::_{{closure}} (258,897 samples, 1.83%)</title><rect x="0.0000%" y="773" width="1.8342%" height="15" fill="rgb(242,14,37)" fg:x="0" fg:w="258897"/><text x="0.2500%" y="783.50">h..</text></g><g><title>hai606i_sudoku`std::sys::backtrace::__rust_begin_short_backtrace (258,897 samples, 1.83%)</title><rect x="0.0000%" y="757" width="1.8342%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="258897"/><text x="0.2500%" y="767.50">h..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (27,015 samples, 0.19%)</title><rect x="2.8558%" y="693" width="0.1914%" height="15" fill="rgb(213,55,15)" fg:x="403105" fg:w="27015"/><text x="3.1058%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (22,127 samples, 0.16%)</title><rect x="2.8905%" y="677" width="0.1568%" height="15" fill="rgb(209,9,3)" fg:x="407993" fg:w="22127"/><text x="3.1405%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,440 samples, 0.01%)</title><rect x="3.0370%" y="661" width="0.0102%" height="15" fill="rgb(230,59,30)" fg:x="428680" fg:w="1440"/><text x="3.2870%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (59,352 samples, 0.42%)</title><rect x="2.6274%" y="709" width="0.4205%" height="15" fill="rgb(209,121,21)" fg:x="370859" fg:w="59352"/><text x="2.8774%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1,838 samples, 0.01%)</title><rect x="3.0808%" y="677" width="0.0130%" height="15" fill="rgb(220,109,13)" fg:x="434863" fg:w="1838"/><text x="3.3308%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6,985 samples, 0.05%)</title><rect x="3.0940%" y="677" width="0.0495%" height="15" fill="rgb(232,18,1)" fg:x="436716" fg:w="6985"/><text x="3.3440%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11,732 samples, 0.08%)</title><rect x="3.0606%" y="693" width="0.0831%" height="15" fill="rgb(215,41,42)" fg:x="432011" fg:w="11732"/><text x="3.3106%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13,549 samples, 0.10%)</title><rect x="3.0479%" y="709" width="0.0960%" height="15" fill="rgb(224,123,36)" fg:x="430211" fg:w="13549"/><text x="3.2979%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (88,075 samples, 0.62%)</title><rect x="2.5222%" y="725" width="0.6240%" height="15" fill="rgb(240,125,3)" fg:x="356011" fg:w="88075"/><text x="2.7722%" y="735.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (3,219 samples, 0.02%)</title><rect x="3.1520%" y="725" width="0.0228%" height="15" fill="rgb(205,98,50)" fg:x="444911" fg:w="3219"/><text x="3.4020%" y="735.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (3,522 samples, 0.02%)</title><rect x="3.1748%" y="725" width="0.0250%" height="15" fill="rgb(205,185,37)" fg:x="448130" fg:w="3522"/><text x="3.4248%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9,708 samples, 0.07%)</title><rect x="3.2010%" y="725" width="0.0688%" height="15" fill="rgb(238,207,15)" fg:x="451831" fg:w="9708"/><text x="3.4510%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1,416 samples, 0.01%)</title><rect x="3.2698%" y="725" width="0.0100%" height="15" fill="rgb(213,199,42)" fg:x="461539" fg:w="1416"/><text x="3.5198%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11,502 samples, 0.08%)</title><rect x="3.2799%" y="725" width="0.0815%" height="15" fill="rgb(235,201,11)" fg:x="462960" fg:w="11502"/><text x="3.5299%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (138,227 samples, 0.98%)</title><rect x="2.4928%" y="741" width="0.9793%" height="15" fill="rgb(207,46,11)" fg:x="351857" fg:w="138227"/><text x="2.7428%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15,350 samples, 0.11%)</title><rect x="3.3633%" y="725" width="0.1087%" height="15" fill="rgb(241,35,35)" fg:x="474734" fg:w="15350"/><text x="3.6133%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,816 samples, 0.01%)</title><rect x="3.4859%" y="741" width="0.0129%" height="15" fill="rgb(243,32,47)" fg:x="492045" fg:w="1816"/><text x="3.7359%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`write (72,723 samples, 0.52%)</title><rect x="3.5048%" y="709" width="0.5152%" height="15" fill="rgb(247,202,23)" fg:x="494706" fg:w="72723"/><text x="3.7548%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1,916 samples, 0.01%)</title><rect x="4.0201%" y="693" width="0.0136%" height="15" fill="rgb(219,102,11)" fg:x="567440" fg:w="1916"/><text x="4.2701%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1,932 samples, 0.01%)</title><rect x="4.0200%" y="709" width="0.0137%" height="15" fill="rgb(243,110,44)" fg:x="567429" fg:w="1932"/><text x="4.2700%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (75,563 samples, 0.54%)</title><rect x="3.4990%" y="725" width="0.5353%" height="15" fill="rgb(222,74,54)" fg:x="493886" fg:w="75563"/><text x="3.7490%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (75,677 samples, 0.54%)</title><rect x="3.4988%" y="741" width="0.5361%" height="15" fill="rgb(216,99,12)" fg:x="493861" fg:w="75677"/><text x="3.7488%" y="751.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$free (2,914 samples, 0.02%)</title><rect x="4.0350%" y="741" width="0.0206%" height="15" fill="rgb(226,22,26)" fg:x="569543" fg:w="2914"/><text x="4.2850%" y="751.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (59,022 samples, 0.42%)</title><rect x="4.0693%" y="741" width="0.4181%" height="15" fill="rgb(217,163,10)" fg:x="574379" fg:w="59022"/><text x="4.3193%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2,075 samples, 0.01%)</title><rect x="4.5373%" y="725" width="0.0147%" height="15" fill="rgb(213,25,53)" fg:x="640438" fg:w="2075"/><text x="4.7873%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (4,212 samples, 0.03%)</title><rect x="4.5520%" y="725" width="0.0298%" height="15" fill="rgb(252,105,26)" fg:x="642513" fg:w="4212"/><text x="4.8020%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (32,567 samples, 0.23%)</title><rect x="4.5826%" y="725" width="0.2307%" height="15" fill="rgb(220,39,43)" fg:x="646842" fg:w="32567"/><text x="4.8326%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (3,987 samples, 0.03%)</title><rect x="4.8540%" y="709" width="0.0282%" height="15" fill="rgb(229,68,48)" fg:x="685146" fg:w="3987"/><text x="5.1040%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2,582 samples, 0.02%)</title><rect x="4.9195%" y="693" width="0.0183%" height="15" fill="rgb(252,8,32)" fg:x="694391" fg:w="2582"/><text x="5.1695%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9,445 samples, 0.07%)</title><rect x="4.8887%" y="709" width="0.0669%" height="15" fill="rgb(223,20,43)" fg:x="690045" fg:w="9445"/><text x="5.1387%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2,517 samples, 0.02%)</title><rect x="4.9378%" y="693" width="0.0178%" height="15" fill="rgb(229,81,49)" fg:x="696973" fg:w="2517"/><text x="5.1878%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19,867 samples, 0.14%)</title><rect x="4.8189%" y="725" width="0.1408%" height="15" fill="rgb(236,28,36)" fg:x="680199" fg:w="19867"/><text x="5.0689%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3,367 samples, 0.02%)</title><rect x="4.9606%" y="693" width="0.0239%" height="15" fill="rgb(249,185,26)" fg:x="700193" fg:w="3367"/><text x="5.2106%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (3,416 samples, 0.02%)</title><rect x="4.9604%" y="709" width="0.0242%" height="15" fill="rgb(249,174,33)" fg:x="700171" fg:w="3416"/><text x="5.2104%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (3,539 samples, 0.03%)</title><rect x="4.9597%" y="725" width="0.0251%" height="15" fill="rgb(233,201,37)" fg:x="700066" fg:w="3539"/><text x="5.2097%" y="735.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1,442 samples, 0.01%)</title><rect x="4.9866%" y="725" width="0.0102%" height="15" fill="rgb(221,78,26)" fg:x="703863" fg:w="1442"/><text x="5.2366%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5,775 samples, 0.04%)</title><rect x="4.9969%" y="725" width="0.0409%" height="15" fill="rgb(250,127,30)" fg:x="705324" fg:w="5775"/><text x="5.2469%" y="735.50"></text></g><g><title>hai606i_sudoku`core::ptr::drop_in_place&lt;hai606i_sudoku::simple_sudoku::Sudoku&gt; (77,908 samples, 0.55%)</title><rect x="4.4874%" y="741" width="0.5519%" height="15" fill="rgb(230,49,44)" fg:x="633401" fg:w="77908"/><text x="4.7374%" y="751.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,156 samples, 0.02%)</title><rect x="5.2861%" y="725" width="0.0153%" height="15" fill="rgb(229,67,23)" fg:x="746143" fg:w="2156"/><text x="5.5361%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5,109 samples, 0.04%)</title><rect x="5.5343%" y="709" width="0.0362%" height="15" fill="rgb(249,83,47)" fg:x="781170" fg:w="5109"/><text x="5.7843%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (5,371 samples, 0.04%)</title><rect x="5.5705%" y="709" width="0.0381%" height="15" fill="rgb(215,43,3)" fg:x="786279" fg:w="5371"/><text x="5.8205%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2,833 samples, 0.02%)</title><rect x="5.6412%" y="677" width="0.0201%" height="15" fill="rgb(238,154,13)" fg:x="796260" fg:w="2833"/><text x="5.8912%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9,124 samples, 0.06%)</title><rect x="5.6613%" y="677" width="0.0646%" height="15" fill="rgb(219,56,2)" fg:x="799094" fg:w="9124"/><text x="5.9113%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14,554 samples, 0.10%)</title><rect x="5.6230%" y="693" width="0.1031%" height="15" fill="rgb(233,0,4)" fg:x="793696" fg:w="14554"/><text x="5.8730%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16,387 samples, 0.12%)</title><rect x="5.6102%" y="709" width="0.1161%" height="15" fill="rgb(235,30,7)" fg:x="791880" fg:w="16387"/><text x="5.8602%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (60,289 samples, 0.43%)</title><rect x="5.3014%" y="725" width="0.4271%" height="15" fill="rgb(250,79,13)" fg:x="748299" fg:w="60289"/><text x="5.5514%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,548 samples, 0.01%)</title><rect x="5.7675%" y="709" width="0.0110%" height="15" fill="rgb(211,146,34)" fg:x="814082" fg:w="1548"/><text x="6.0175%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9,245 samples, 0.07%)</title><rect x="5.7285%" y="725" width="0.0655%" height="15" fill="rgb(228,22,38)" fg:x="808588" fg:w="9245"/><text x="5.9785%" y="735.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,203 samples, 0.02%)</title><rect x="5.7784%" y="709" width="0.0156%" height="15" fill="rgb(235,168,5)" fg:x="815630" fg:w="2203"/><text x="6.0284%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,463 samples, 0.01%)</title><rect x="5.8059%" y="725" width="0.0104%" height="15" fill="rgb(221,155,16)" fg:x="819515" fg:w="1463"/><text x="6.0559%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6,746 samples, 0.05%)</title><rect x="5.8647%" y="709" width="0.0478%" height="15" fill="rgb(215,215,53)" fg:x="827812" fg:w="6746"/><text x="6.1147%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11,609 samples, 0.08%)</title><rect x="5.8305%" y="725" width="0.0822%" height="15" fill="rgb(223,4,10)" fg:x="822976" fg:w="11609"/><text x="6.0805%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8,393 samples, 0.06%)</title><rect x="5.9205%" y="725" width="0.0595%" height="15" fill="rgb(234,103,6)" fg:x="835680" fg:w="8393"/><text x="6.1705%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,837 samples, 0.02%)</title><rect x="5.9799%" y="725" width="0.0201%" height="15" fill="rgb(227,97,0)" fg:x="844073" fg:w="2837"/><text x="6.2299%" y="735.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (132,940 samples, 0.94%)</title><rect x="5.0583%" y="741" width="0.9418%" height="15" fill="rgb(234,150,53)" fg:x="713980" fg:w="132940"/><text x="5.3083%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5,774 samples, 0.04%)</title><rect x="6.5109%" y="645" width="0.0409%" height="15" fill="rgb(228,201,54)" fg:x="919021" fg:w="5774"/><text x="6.7609%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10,192 samples, 0.07%)</title><rect x="6.5639%" y="629" width="0.0722%" height="15" fill="rgb(222,22,37)" fg:x="926494" fg:w="10192"/><text x="6.8139%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9,182 samples, 0.07%)</title><rect x="6.6361%" y="629" width="0.0651%" height="15" fill="rgb(237,53,32)" fg:x="936686" fg:w="9182"/><text x="6.8861%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (24,578 samples, 0.17%)</title><rect x="6.5518%" y="645" width="0.1741%" height="15" fill="rgb(233,25,53)" fg:x="924795" fg:w="24578"/><text x="6.8018%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,407 samples, 0.02%)</title><rect x="6.7018%" y="629" width="0.0241%" height="15" fill="rgb(210,40,34)" fg:x="945966" fg:w="3407"/><text x="6.9518%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (38,090 samples, 0.27%)</title><rect x="6.4785%" y="661" width="0.2699%" height="15" fill="rgb(241,220,44)" fg:x="914443" fg:w="38090"/><text x="6.7285%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3,160 samples, 0.02%)</title><rect x="6.7259%" y="645" width="0.0224%" height="15" fill="rgb(235,28,35)" fg:x="949373" fg:w="3160"/><text x="6.9759%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (42,884 samples, 0.30%)</title><rect x="6.4571%" y="677" width="0.3038%" height="15" fill="rgb(210,56,17)" fg:x="911428" fg:w="42884"/><text x="6.7071%" y="687.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (51,925 samples, 0.37%)</title><rect x="6.4397%" y="693" width="0.3679%" height="15" fill="rgb(224,130,29)" fg:x="908966" fg:w="51925"/><text x="6.6897%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6,579 samples, 0.05%)</title><rect x="6.7609%" y="677" width="0.0466%" height="15" fill="rgb(235,212,8)" fg:x="954312" fg:w="6579"/><text x="7.0109%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1,569 samples, 0.01%)</title><rect x="6.8075%" y="693" width="0.0111%" height="15" fill="rgb(223,33,50)" fg:x="960891" fg:w="1569"/><text x="7.0575%" y="703.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (62,195 samples, 0.44%)</title><rect x="6.3808%" y="709" width="0.4406%" height="15" fill="rgb(219,149,13)" fg:x="900653" fg:w="62195"/><text x="6.6308%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (117,319 samples, 0.83%)</title><rect x="6.0240%" y="725" width="0.8312%" height="15" fill="rgb(250,156,29)" fg:x="850292" fg:w="117319"/><text x="6.2740%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,431 samples, 0.03%)</title><rect x="6.8238%" y="709" width="0.0314%" height="15" fill="rgb(216,193,19)" fg:x="963180" fg:w="4431"/><text x="7.0738%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4,322 samples, 0.03%)</title><rect x="6.8643%" y="725" width="0.0306%" height="15" fill="rgb(216,135,14)" fg:x="968897" fg:w="4322"/><text x="7.1143%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27,399 samples, 0.19%)</title><rect x="6.8949%" y="725" width="0.1941%" height="15" fill="rgb(241,47,5)" fg:x="973219" fg:w="27399"/><text x="7.1449%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (43,128 samples, 0.31%)</title><rect x="7.0985%" y="725" width="0.3055%" height="15" fill="rgb(233,42,35)" fg:x="1001964" fg:w="43128"/><text x="7.3485%" y="735.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$free (30,836 samples, 0.22%)</title><rect x="7.4041%" y="725" width="0.2185%" height="15" fill="rgb(231,13,6)" fg:x="1045092" fg:w="30836"/><text x="7.6541%" y="735.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$malloc (2,326 samples, 0.02%)</title><rect x="7.6225%" y="725" width="0.0165%" height="15" fill="rgb(207,181,40)" fg:x="1075928" fg:w="2326"/><text x="7.8725%" y="735.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (1,738 samples, 0.01%)</title><rect x="7.6390%" y="725" width="0.0123%" height="15" fill="rgb(254,173,49)" fg:x="1078254" fg:w="1738"/><text x="7.8890%" y="735.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (3,804 samples, 0.03%)</title><rect x="7.6513%" y="725" width="0.0269%" height="15" fill="rgb(221,1,38)" fg:x="1079992" fg:w="3804"/><text x="7.9013%" y="735.50"></text></g><g><title>hai606i_sudoku`__rdl_dealloc (4,378 samples, 0.03%)</title><rect x="7.6783%" y="725" width="0.0310%" height="15" fill="rgb(206,124,46)" fg:x="1083796" fg:w="4378"/><text x="7.9283%" y="735.50"></text></g><g><title>hai606i_sudoku`__rust_dealloc (1,432 samples, 0.01%)</title><rect x="7.7141%" y="725" width="0.0101%" height="15" fill="rgb(249,21,11)" fg:x="1088847" fg:w="1432"/><text x="7.9641%" y="735.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,990 samples, 0.02%)</title><rect x="7.7242%" y="725" width="0.0212%" height="15" fill="rgb(222,201,40)" fg:x="1090279" fg:w="2990"/><text x="7.9742%" y="735.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,153 samples, 0.06%)</title><rect x="7.7534%" y="725" width="0.0578%" height="15" fill="rgb(235,61,29)" fg:x="1094395" fg:w="8153"/><text x="8.0034%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13,080 samples, 0.09%)</title><rect x="9.2296%" y="677" width="0.0927%" height="15" fill="rgb(219,207,3)" fg:x="1302772" fg:w="13080"/><text x="9.4796%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (178,848 samples, 1.27%)</title><rect x="8.1753%" y="693" width="1.2671%" height="15" fill="rgb(222,56,46)" fg:x="1153945" fg:w="178848"/><text x="8.4253%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (16,941 samples, 0.12%)</title><rect x="9.3223%" y="677" width="0.1200%" height="15" fill="rgb(239,76,54)" fg:x="1315852" fg:w="16941"/><text x="9.5723%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (212,691 samples, 1.51%)</title><rect x="7.9561%" y="709" width="1.5068%" height="15" fill="rgb(231,124,27)" fg:x="1123015" fg:w="212691"/><text x="8.2061%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,913 samples, 0.02%)</title><rect x="9.4423%" y="693" width="0.0206%" height="15" fill="rgb(249,195,6)" fg:x="1332793" fg:w="2913"/><text x="9.6923%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,533 samples, 0.02%)</title><rect x="9.4630%" y="709" width="0.0179%" height="15" fill="rgb(237,174,47)" fg:x="1335706" fg:w="2533"/><text x="9.7130%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,891 samples, 0.03%)</title><rect x="9.4868%" y="709" width="0.0347%" height="15" fill="rgb(206,201,31)" fg:x="1339072" fg:w="4891"/><text x="9.7368%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,956 samples, 0.04%)</title><rect x="9.5215%" y="709" width="0.0351%" height="15" fill="rgb(231,57,52)" fg:x="1343963" fg:w="4956"/><text x="9.7715%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,960 samples, 0.01%)</title><rect x="9.6448%" y="693" width="0.0139%" height="15" fill="rgb(248,177,22)" fg:x="1361376" fg:w="1960"/><text x="9.8948%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,507 samples, 0.02%)</title><rect x="9.6587%" y="693" width="0.0178%" height="15" fill="rgb(215,211,37)" fg:x="1363336" fg:w="2507"/><text x="9.9087%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5,034 samples, 0.04%)</title><rect x="9.6945%" y="661" width="0.0357%" height="15" fill="rgb(241,128,51)" fg:x="1368388" fg:w="5034"/><text x="9.9445%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6,736 samples, 0.05%)</title><rect x="9.6825%" y="677" width="0.0477%" height="15" fill="rgb(227,165,31)" fg:x="1366695" fg:w="6736"/><text x="9.9325%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7,505 samples, 0.05%)</title><rect x="9.6771%" y="693" width="0.0532%" height="15" fill="rgb(228,167,24)" fg:x="1365931" fg:w="7505"/><text x="9.9271%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (24,627 samples, 0.17%)</title><rect x="9.5566%" y="709" width="0.1745%" height="15" fill="rgb(228,143,12)" fg:x="1348919" fg:w="24627"/><text x="9.8066%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3,008 samples, 0.02%)</title><rect x="9.7797%" y="645" width="0.0213%" height="15" fill="rgb(249,149,8)" fg:x="1380416" fg:w="3008"/><text x="10.0297%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5,328 samples, 0.04%)</title><rect x="9.7633%" y="661" width="0.0377%" height="15" fill="rgb(243,35,44)" fg:x="1378101" fg:w="5328"/><text x="10.0133%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6,607 samples, 0.05%)</title><rect x="9.7543%" y="677" width="0.0468%" height="15" fill="rgb(246,89,9)" fg:x="1376825" fg:w="6607"/><text x="10.0043%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,704 samples, 0.06%)</title><rect x="9.7413%" y="693" width="0.0617%" height="15" fill="rgb(233,213,13)" fg:x="1374998" fg:w="8704"/><text x="9.9913%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (13,919 samples, 0.10%)</title><rect x="9.7310%" y="709" width="0.0986%" height="15" fill="rgb(233,141,41)" fg:x="1373546" fg:w="13919"/><text x="9.9810%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,446 samples, 0.01%)</title><rect x="9.8194%" y="693" width="0.0102%" height="15" fill="rgb(239,167,4)" fg:x="1386019" fg:w="1446"/><text x="10.0694%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,745 samples, 0.01%)</title><rect x="9.8319%" y="709" width="0.0124%" height="15" fill="rgb(209,217,16)" fg:x="1387784" fg:w="1745"/><text x="10.0819%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3,667 samples, 0.03%)</title><rect x="9.8443%" y="709" width="0.0260%" height="15" fill="rgb(219,88,35)" fg:x="1389529" fg:w="3667"/><text x="10.0943%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,712 samples, 0.01%)</title><rect x="9.9441%" y="677" width="0.0121%" height="15" fill="rgb(220,193,23)" fg:x="1403619" fg:w="1712"/><text x="10.1941%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8,915 samples, 0.06%)</title><rect x="9.9062%" y="693" width="0.0632%" height="15" fill="rgb(230,90,52)" fg:x="1398272" fg:w="8915"/><text x="10.1562%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1,856 samples, 0.01%)</title><rect x="9.9562%" y="677" width="0.0131%" height="15" fill="rgb(252,106,19)" fg:x="1405331" fg:w="1856"/><text x="10.2062%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13,240 samples, 0.09%)</title><rect x="9.8758%" y="709" width="0.0938%" height="15" fill="rgb(206,74,20)" fg:x="1393981" fg:w="13240"/><text x="10.1258%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,477 samples, 0.02%)</title><rect x="9.9827%" y="709" width="0.0175%" height="15" fill="rgb(230,138,44)" fg:x="1409070" fg:w="2477"/><text x="10.2327%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::box_reduction (306,299 samples, 2.17%)</title><rect x="7.8303%" y="725" width="2.1700%" height="15" fill="rgb(235,182,43)" fg:x="1105255" fg:w="306299"/><text x="8.0803%" y="735.50">h..</text></g><g><title>hai606i_sudoku`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,897 samples, 0.08%)</title><rect x="10.4855%" y="709" width="0.0843%" height="15" fill="rgb(242,16,51)" fg:x="1480043" fg:w="11897"/><text x="10.7355%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,386 samples, 0.02%)</title><rect x="10.6563%" y="677" width="0.0169%" height="15" fill="rgb(248,9,4)" fg:x="1504146" fg:w="2386"/><text x="10.9063%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,733 samples, 0.02%)</title><rect x="10.6732%" y="677" width="0.0194%" height="15" fill="rgb(210,31,22)" fg:x="1506533" fg:w="2733"/><text x="10.9232%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15,648 samples, 0.11%)</title><rect x="10.5828%" y="693" width="0.1109%" height="15" fill="rgb(239,54,39)" fg:x="1493771" fg:w="15648"/><text x="10.8328%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,554 samples, 0.01%)</title><rect x="10.7484%" y="677" width="0.0110%" height="15" fill="rgb(230,99,41)" fg:x="1517152" fg:w="1554"/><text x="10.9984%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (12,259 samples, 0.09%)</title><rect x="10.6937%" y="693" width="0.0869%" height="15" fill="rgb(253,106,12)" fg:x="1509419" fg:w="12259"/><text x="10.9437%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,972 samples, 0.02%)</title><rect x="10.7594%" y="677" width="0.0211%" height="15" fill="rgb(213,46,41)" fg:x="1518706" fg:w="2972"/><text x="11.0094%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,739 samples, 0.21%)</title><rect x="10.5698%" y="709" width="0.2107%" height="15" fill="rgb(215,133,35)" fg:x="1491940" fg:w="29739"/><text x="10.8198%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (66,622 samples, 0.47%)</title><rect x="13.7941%" y="693" width="0.4720%" height="15" fill="rgb(213,28,5)" fg:x="1947054" fg:w="66622"/><text x="14.0441%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (91,820 samples, 0.65%)</title><rect x="14.2661%" y="693" width="0.6505%" height="15" fill="rgb(215,77,49)" fg:x="2013676" fg:w="91820"/><text x="14.5161%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20,160 samples, 0.14%)</title><rect x="15.2561%" y="677" width="0.1428%" height="15" fill="rgb(248,100,22)" fg:x="2153410" fg:w="20160"/><text x="15.5061%" y="687.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (1,872 samples, 0.01%)</title><rect x="15.4111%" y="677" width="0.0133%" height="15" fill="rgb(208,67,9)" fg:x="2175295" fg:w="1872"/><text x="15.6611%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (24,409 samples, 0.17%)</title><rect x="15.4249%" y="677" width="0.1729%" height="15" fill="rgb(219,133,21)" fg:x="2177236" fg:w="24409"/><text x="15.6749%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,194 samples, 0.02%)</title><rect x="15.7642%" y="661" width="0.0155%" height="15" fill="rgb(246,46,29)" fg:x="2225127" fg:w="2194"/><text x="16.0142%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,656 samples, 0.03%)</title><rect x="15.7799%" y="661" width="0.0259%" height="15" fill="rgb(246,185,52)" fg:x="2227349" fg:w="3656"/><text x="16.0299%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2,482 samples, 0.02%)</title><rect x="15.8064%" y="661" width="0.0176%" height="15" fill="rgb(252,136,11)" fg:x="2231085" fg:w="2482"/><text x="16.0564%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (19,737 samples, 0.14%)</title><rect x="15.8240%" y="661" width="0.1398%" height="15" fill="rgb(219,138,53)" fg:x="2233567" fg:w="19737"/><text x="16.0740%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (52,273 samples, 0.37%)</title><rect x="15.5978%" y="677" width="0.3703%" height="15" fill="rgb(211,51,23)" fg:x="2201645" fg:w="52273"/><text x="15.8478%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7,615 samples, 0.05%)</title><rect x="15.9736%" y="677" width="0.0539%" height="15" fill="rgb(247,221,28)" fg:x="2254689" fg:w="7615"/><text x="16.2236%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (163,345 samples, 1.16%)</title><rect x="14.9166%" y="693" width="1.1572%" height="15" fill="rgb(251,222,45)" fg:x="2105496" fg:w="163345"/><text x="15.1666%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5,783 samples, 0.04%)</title><rect x="16.0329%" y="677" width="0.0410%" height="15" fill="rgb(217,162,53)" fg:x="2263058" fg:w="5783"/><text x="16.2829%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (749,634 samples, 5.31%)</title><rect x="10.7805%" y="709" width="5.3109%" height="15" fill="rgb(229,93,14)" fg:x="1521679" fg:w="749634"/><text x="11.0305%" y="719.50">hai606i..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,472 samples, 0.02%)</title><rect x="16.0739%" y="693" width="0.0175%" height="15" fill="rgb(209,67,49)" fg:x="2268841" fg:w="2472"/><text x="16.3239%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (5,260 samples, 0.04%)</title><rect x="16.1013%" y="709" width="0.0373%" height="15" fill="rgb(213,87,29)" fg:x="2272710" fg:w="5260"/><text x="16.3513%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,576 samples, 0.04%)</title><rect x="16.1385%" y="709" width="0.0395%" height="15" fill="rgb(205,151,52)" fg:x="2277970" fg:w="5576"/><text x="16.3885%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,817 samples, 0.01%)</title><rect x="16.1788%" y="709" width="0.0129%" height="15" fill="rgb(253,215,39)" fg:x="2283653" fg:w="1817"/><text x="16.4288%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26,130 samples, 0.19%)</title><rect x="16.1995%" y="709" width="0.1851%" height="15" fill="rgb(221,220,41)" fg:x="2286570" fg:w="26130"/><text x="16.4495%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::finned_swordfish (909,986 samples, 6.45%)</title><rect x="10.0003%" y="725" width="6.4469%" height="15" fill="rgb(218,133,21)" fg:x="1411554" fg:w="909986"/><text x="10.2503%" y="735.50">hai606i_..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6,251 samples, 0.04%)</title><rect x="16.4029%" y="709" width="0.0443%" height="15" fill="rgb(221,193,43)" fg:x="2315289" fg:w="6251"/><text x="16.6529%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,661 samples, 0.01%)</title><rect x="16.7157%" y="709" width="0.0118%" height="15" fill="rgb(240,128,52)" fg:x="2359430" fg:w="1661"/><text x="16.9657%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28,443 samples, 0.20%)</title><rect x="18.2038%" y="693" width="0.2015%" height="15" fill="rgb(253,114,12)" fg:x="2569485" fg:w="28443"/><text x="18.4538%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (37,236 samples, 0.26%)</title><rect x="18.4053%" y="693" width="0.2638%" height="15" fill="rgb(215,223,47)" fg:x="2597928" fg:w="37236"/><text x="18.6553%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7,798 samples, 0.06%)</title><rect x="18.8270%" y="677" width="0.0552%" height="15" fill="rgb(248,225,23)" fg:x="2657453" fg:w="7798"/><text x="19.0770%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,380 samples, 0.07%)</title><rect x="18.8909%" y="677" width="0.0735%" height="15" fill="rgb(250,108,0)" fg:x="2666474" fg:w="10380"/><text x="19.1409%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,520 samples, 0.01%)</title><rect x="19.0502%" y="661" width="0.0108%" height="15" fill="rgb(228,208,7)" fg:x="2688955" fg:w="1520"/><text x="19.3002%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9,091 samples, 0.06%)</title><rect x="19.0695%" y="661" width="0.0644%" height="15" fill="rgb(244,45,10)" fg:x="2691678" fg:w="9091"/><text x="19.3195%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24,165 samples, 0.17%)</title><rect x="18.9645%" y="677" width="0.1712%" height="15" fill="rgb(207,125,25)" fg:x="2676854" fg:w="24165"/><text x="19.2145%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,976 samples, 0.02%)</title><rect x="19.1379%" y="677" width="0.0211%" height="15" fill="rgb(210,195,18)" fg:x="2701335" fg:w="2976"/><text x="19.3879%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (72,150 samples, 0.51%)</title><rect x="18.6691%" y="693" width="0.5112%" height="15" fill="rgb(249,80,12)" fg:x="2635164" fg:w="72150"/><text x="18.9191%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,590 samples, 0.02%)</title><rect x="19.1619%" y="677" width="0.0183%" height="15" fill="rgb(221,65,9)" fg:x="2704724" fg:w="2590"/><text x="19.4119%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (347,369 samples, 2.46%)</title><rect x="16.7274%" y="709" width="2.4610%" height="15" fill="rgb(235,49,36)" fg:x="2361091" fg:w="347369"/><text x="16.9774%" y="719.50">ha..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,328 samples, 0.02%)</title><rect x="19.1937%" y="709" width="0.0165%" height="15" fill="rgb(225,32,20)" fg:x="2709212" fg:w="2328"/><text x="19.4437%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (1,750 samples, 0.01%)</title><rect x="19.2102%" y="709" width="0.0124%" height="15" fill="rgb(215,141,46)" fg:x="2711540" fg:w="1750"/><text x="19.4602%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,681 samples, 0.01%)</title><rect x="19.2226%" y="709" width="0.0119%" height="15" fill="rgb(250,160,47)" fg:x="2713290" fg:w="1681"/><text x="19.4726%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10,103 samples, 0.07%)</title><rect x="19.2371%" y="709" width="0.0716%" height="15" fill="rgb(216,222,40)" fg:x="2715329" fg:w="10103"/><text x="19.4871%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::finned_x_wing (406,756 samples, 2.88%)</title><rect x="16.4472%" y="725" width="2.8817%" height="15" fill="rgb(234,217,39)" fg:x="2321540" fg:w="406756"/><text x="16.6972%" y="735.50">ha..</text></g><g><title>libsystem_platform.dylib`_platform_memset (2,159 samples, 0.02%)</title><rect x="19.3136%" y="709" width="0.0153%" height="15" fill="rgb(207,178,40)" fg:x="2726137" fg:w="2159"/><text x="19.5636%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,248 samples, 0.03%)</title><rect x="19.9359%" y="677" width="0.0301%" height="15" fill="rgb(221,136,13)" fg:x="2813975" fg:w="4248"/><text x="20.1859%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (57,350 samples, 0.41%)</title><rect x="19.5941%" y="693" width="0.4063%" height="15" fill="rgb(249,199,10)" fg:x="2765731" fg:w="57350"/><text x="19.8441%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,858 samples, 0.03%)</title><rect x="19.9660%" y="677" width="0.0344%" height="15" fill="rgb(249,222,13)" fg:x="2818223" fg:w="4858"/><text x="20.2160%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71,419 samples, 0.51%)</title><rect x="19.5009%" y="709" width="0.5060%" height="15" fill="rgb(244,185,38)" fg:x="2752570" fg:w="71419"/><text x="19.7509%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7,475 samples, 0.05%)</title><rect x="20.0069%" y="709" width="0.0530%" height="15" fill="rgb(236,202,9)" fg:x="2823989" fg:w="7475"/><text x="20.2569%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (17,146 samples, 0.12%)</title><rect x="20.0721%" y="709" width="0.1215%" height="15" fill="rgb(250,229,37)" fg:x="2833192" fg:w="17146"/><text x="20.3221%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,648 samples, 0.01%)</title><rect x="20.1935%" y="709" width="0.0117%" height="15" fill="rgb(206,174,23)" fg:x="2850338" fg:w="1648"/><text x="20.4435%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6,641 samples, 0.05%)</title><rect x="20.4428%" y="693" width="0.0470%" height="15" fill="rgb(211,33,43)" fg:x="2885526" fg:w="6641"/><text x="20.6928%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (6,080 samples, 0.04%)</title><rect x="20.4899%" y="693" width="0.0431%" height="15" fill="rgb(245,58,50)" fg:x="2892167" fg:w="6080"/><text x="20.7399%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3,173 samples, 0.02%)</title><rect x="20.5698%" y="661" width="0.0225%" height="15" fill="rgb(244,68,36)" fg:x="2903453" fg:w="3173"/><text x="20.8198%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17,224 samples, 0.12%)</title><rect x="20.5924%" y="661" width="0.1220%" height="15" fill="rgb(232,229,15)" fg:x="2906637" fg:w="17224"/><text x="20.8424%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,883 samples, 0.01%)</title><rect x="20.7011%" y="645" width="0.0133%" height="15" fill="rgb(254,30,23)" fg:x="2921978" fg:w="1883"/><text x="20.9511%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23,421 samples, 0.17%)</title><rect x="20.5486%" y="677" width="0.1659%" height="15" fill="rgb(235,160,14)" fg:x="2900452" fg:w="23421"/><text x="20.7986%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25,417 samples, 0.18%)</title><rect x="20.5345%" y="693" width="0.1801%" height="15" fill="rgb(212,155,44)" fg:x="2898463" fg:w="25417"/><text x="20.7845%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (72,292 samples, 0.51%)</title><rect x="20.2052%" y="709" width="0.5122%" height="15" fill="rgb(226,2,50)" fg:x="2851986" fg:w="72292"/><text x="20.4552%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1,815 samples, 0.01%)</title><rect x="20.8006%" y="661" width="0.0129%" height="15" fill="rgb(234,177,6)" fg:x="2936022" fg:w="1815"/><text x="21.0506%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4,393 samples, 0.03%)</title><rect x="20.8641%" y="645" width="0.0311%" height="15" fill="rgb(217,24,9)" fg:x="2944989" fg:w="4393"/><text x="21.1141%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1,486 samples, 0.01%)</title><rect x="20.9831%" y="629" width="0.0105%" height="15" fill="rgb(220,13,46)" fg:x="2961778" fg:w="1486"/><text x="21.2331%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15,245 samples, 0.11%)</title><rect x="20.8954%" y="645" width="0.1080%" height="15" fill="rgb(239,221,27)" fg:x="2949399" fg:w="15245"/><text x="21.1454%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25,812 samples, 0.18%)</title><rect x="20.8206%" y="661" width="0.1829%" height="15" fill="rgb(222,198,25)" fg:x="2938845" fg:w="25812"/><text x="21.0706%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30,811 samples, 0.22%)</title><rect x="20.7852%" y="677" width="0.2183%" height="15" fill="rgb(211,99,13)" fg:x="2933856" fg:w="30811"/><text x="21.0352%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,849 samples, 0.26%)</title><rect x="20.7482%" y="693" width="0.2611%" height="15" fill="rgb(232,111,31)" fg:x="2928629" fg:w="36849"/><text x="20.9982%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,145 samples, 0.02%)</title><rect x="21.0239%" y="693" width="0.0152%" height="15" fill="rgb(245,82,37)" fg:x="2967538" fg:w="2145"/><text x="21.2739%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,803 samples, 0.02%)</title><rect x="21.0391%" y="693" width="0.0199%" height="15" fill="rgb(227,149,46)" fg:x="2969683" fg:w="2803"/><text x="21.2891%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (56,683 samples, 0.40%)</title><rect x="20.7174%" y="709" width="0.4016%" height="15" fill="rgb(218,36,50)" fg:x="2924278" fg:w="56683"/><text x="20.9674%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7,074 samples, 0.05%)</title><rect x="21.0688%" y="693" width="0.0501%" height="15" fill="rgb(226,80,48)" fg:x="2973887" fg:w="7074"/><text x="21.3188%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24,667 samples, 0.17%)</title><rect x="21.7167%" y="693" width="0.1748%" height="15" fill="rgb(238,224,15)" fg:x="3065339" fg:w="24667"/><text x="21.9667%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (124,600 samples, 0.88%)</title><rect x="21.1190%" y="709" width="0.8827%" height="15" fill="rgb(241,136,10)" fg:x="2980961" fg:w="124600"/><text x="21.3690%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (15,555 samples, 0.11%)</title><rect x="21.8915%" y="693" width="0.1102%" height="15" fill="rgb(208,32,45)" fg:x="3090006" fg:w="15555"/><text x="22.1415%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14,303 samples, 0.10%)</title><rect x="22.2173%" y="693" width="0.1013%" height="15" fill="rgb(207,135,9)" fg:x="3135998" fg:w="14303"/><text x="22.4673%" y="703.50"></text></g><g><title>hai606i_sudoku`std::collections::hash::set::HashSet&lt;T,S&gt;::is_disjoint (52,699 samples, 0.37%)</title><rect x="22.0017%" y="709" width="0.3734%" height="15" fill="rgb(206,86,44)" fg:x="3105561" fg:w="52699"/><text x="22.2517%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (7,959 samples, 0.06%)</title><rect x="22.3187%" y="693" width="0.0564%" height="15" fill="rgb(245,177,15)" fg:x="3150301" fg:w="7959"/><text x="22.5687%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,876 samples, 0.01%)</title><rect x="22.3833%" y="709" width="0.0133%" height="15" fill="rgb(206,64,50)" fg:x="3159425" fg:w="1876"/><text x="22.6333%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2,417 samples, 0.02%)</title><rect x="22.3966%" y="709" width="0.0171%" height="15" fill="rgb(234,36,40)" fg:x="3161301" fg:w="2417"/><text x="22.6466%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4,194 samples, 0.03%)</title><rect x="22.4137%" y="709" width="0.0297%" height="15" fill="rgb(213,64,8)" fg:x="3163718" fg:w="4194"/><text x="22.6637%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (4,507 samples, 0.03%)</title><rect x="22.5613%" y="693" width="0.0319%" height="15" fill="rgb(210,75,36)" fg:x="3184545" fg:w="4507"/><text x="22.8113%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10,726 samples, 0.08%)</title><rect x="22.8075%" y="677" width="0.0760%" height="15" fill="rgb(229,88,21)" fg:x="3219296" fg:w="10726"/><text x="23.0575%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (51,752 samples, 0.37%)</title><rect x="22.5980%" y="693" width="0.3666%" height="15" fill="rgb(252,204,47)" fg:x="3189732" fg:w="51752"/><text x="22.8480%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11,462 samples, 0.08%)</title><rect x="22.8835%" y="677" width="0.0812%" height="15" fill="rgb(208,77,27)" fg:x="3230022" fg:w="11462"/><text x="23.1335%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (73,647 samples, 0.52%)</title><rect x="22.4434%" y="709" width="0.5218%" height="15" fill="rgb(221,76,26)" fg:x="3167912" fg:w="73647"/><text x="22.6934%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2,190 samples, 0.02%)</title><rect x="23.0204%" y="677" width="0.0155%" height="15" fill="rgb(225,139,18)" fg:x="3249345" fg:w="2190"/><text x="23.2704%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9,041 samples, 0.06%)</title><rect x="23.0359%" y="677" width="0.0641%" height="15" fill="rgb(230,137,11)" fg:x="3251545" fg:w="9041"/><text x="23.2859%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18,295 samples, 0.13%)</title><rect x="22.9704%" y="709" width="0.1296%" height="15" fill="rgb(212,28,1)" fg:x="3242299" fg:w="18295"/><text x="23.2204%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15,828 samples, 0.11%)</title><rect x="22.9879%" y="693" width="0.1121%" height="15" fill="rgb(248,164,17)" fg:x="3244766" fg:w="15828"/><text x="23.2379%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,888 samples, 0.01%)</title><rect x="23.1001%" y="709" width="0.0134%" height="15" fill="rgb(222,171,42)" fg:x="3260598" fg:w="1888"/><text x="23.3501%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3,928 samples, 0.03%)</title><rect x="23.1165%" y="709" width="0.0278%" height="15" fill="rgb(243,84,45)" fg:x="3262914" fg:w="3928"/><text x="23.3665%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9,479 samples, 0.07%)</title><rect x="23.1443%" y="709" width="0.0672%" height="15" fill="rgb(252,49,23)" fg:x="3266842" fg:w="9479"/><text x="23.3943%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::franken_x_wing (548,037 samples, 3.88%)</title><rect x="19.3289%" y="725" width="3.8826%" height="15" fill="rgb(215,19,7)" fg:x="2728296" fg:w="548037"/><text x="19.5789%" y="735.50">hai6..</text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,543 samples, 0.02%)</title><rect x="23.5521%" y="709" width="0.0180%" height="15" fill="rgb(238,81,41)" fg:x="3324398" fg:w="2543"/><text x="23.8021%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,071 samples, 0.02%)</title><rect x="23.5703%" y="709" width="0.0218%" height="15" fill="rgb(210,199,37)" fg:x="3326976" fg:w="3071"/><text x="23.8203%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3,570 samples, 0.03%)</title><rect x="23.6366%" y="645" width="0.0253%" height="15" fill="rgb(244,192,49)" fg:x="3336322" fg:w="3570"/><text x="23.8866%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6,187 samples, 0.04%)</title><rect x="23.6181%" y="661" width="0.0438%" height="15" fill="rgb(226,211,11)" fg:x="3333712" fg:w="6187"/><text x="23.8681%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7,812 samples, 0.06%)</title><rect x="23.6066%" y="677" width="0.0553%" height="15" fill="rgb(236,162,54)" fg:x="3332088" fg:w="7812"/><text x="23.8566%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,446 samples, 0.07%)</title><rect x="23.5970%" y="693" width="0.0669%" height="15" fill="rgb(220,229,9)" fg:x="3330743" fg:w="9446"/><text x="23.8470%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (14,161 samples, 0.10%)</title><rect x="23.5921%" y="709" width="0.1003%" height="15" fill="rgb(250,87,22)" fg:x="3330047" fg:w="14161"/><text x="23.8421%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,000 samples, 0.01%)</title><rect x="23.6783%" y="693" width="0.0142%" height="15" fill="rgb(239,43,17)" fg:x="3342208" fg:w="2000"/><text x="23.9283%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (33,258 samples, 0.24%)</title><rect x="25.9879%" y="693" width="0.2356%" height="15" fill="rgb(231,177,25)" fg:x="3668210" fg:w="33258"/><text x="26.2379%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (46,995 samples, 0.33%)</title><rect x="26.2235%" y="693" width="0.3329%" height="15" fill="rgb(219,179,1)" fg:x="3701468" fg:w="46995"/><text x="26.4735%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15,207 samples, 0.11%)</title><rect x="26.7533%" y="677" width="0.1077%" height="15" fill="rgb(238,219,53)" fg:x="3776247" fg:w="15207"/><text x="27.0033%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (11,314 samples, 0.08%)</title><rect x="26.8685%" y="677" width="0.0802%" height="15" fill="rgb(232,167,36)" fg:x="3792521" fg:w="11314"/><text x="27.1185%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,556 samples, 0.02%)</title><rect x="27.0307%" y="661" width="0.0181%" height="15" fill="rgb(244,19,51)" fg:x="3815402" fg:w="2556"/><text x="27.2807%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9,561 samples, 0.07%)</title><rect x="27.0666%" y="661" width="0.0677%" height="15" fill="rgb(224,6,22)" fg:x="3820483" fg:w="9561"/><text x="27.3166%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26,528 samples, 0.19%)</title><rect x="26.9487%" y="677" width="0.1879%" height="15" fill="rgb(224,145,5)" fg:x="3803835" fg:w="26528"/><text x="27.1987%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,511 samples, 0.02%)</title><rect x="27.1384%" y="677" width="0.0178%" height="15" fill="rgb(234,130,49)" fg:x="3830615" fg:w="2511"/><text x="27.3884%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88,204 samples, 0.62%)</title><rect x="26.5564%" y="693" width="0.6249%" height="15" fill="rgb(254,6,2)" fg:x="3748463" fg:w="88204"/><text x="26.8064%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,013 samples, 0.02%)</title><rect x="27.1600%" y="677" width="0.0213%" height="15" fill="rgb(208,96,46)" fg:x="3833654" fg:w="3013"/><text x="27.4100%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (493,652 samples, 3.50%)</title><rect x="23.7013%" y="709" width="3.4973%" height="15" fill="rgb(239,3,39)" fg:x="3345456" fg:w="493652"/><text x="23.9513%" y="719.50">hai..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,441 samples, 0.02%)</title><rect x="27.1813%" y="693" width="0.0173%" height="15" fill="rgb(233,210,1)" fg:x="3836667" fg:w="2441"/><text x="27.4313%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10,068 samples, 0.07%)</title><rect x="27.2031%" y="709" width="0.0713%" height="15" fill="rgb(244,137,37)" fg:x="3839749" fg:w="10068"/><text x="27.4531%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,572 samples, 0.01%)</title><rect x="27.3370%" y="677" width="0.0111%" height="15" fill="rgb(240,136,2)" fg:x="3858650" fg:w="1572"/><text x="27.5870%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7,163 samples, 0.05%)</title><rect x="27.3125%" y="693" width="0.0507%" height="15" fill="rgb(239,18,37)" fg:x="3855192" fg:w="7163"/><text x="27.5625%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2,133 samples, 0.02%)</title><rect x="27.3482%" y="677" width="0.0151%" height="15" fill="rgb(218,185,22)" fg:x="3860222" fg:w="2133"/><text x="27.5982%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11,594 samples, 0.08%)</title><rect x="27.2817%" y="709" width="0.0821%" height="15" fill="rgb(225,218,4)" fg:x="3850835" fg:w="11594"/><text x="27.5317%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,603 samples, 0.03%)</title><rect x="27.3687%" y="709" width="0.0255%" height="15" fill="rgb(230,182,32)" fg:x="3863111" fg:w="3603"/><text x="27.6187%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_pairs (590,400 samples, 4.18%)</title><rect x="23.2116%" y="725" width="4.1828%" height="15" fill="rgb(242,56,43)" fg:x="3276333" fg:w="590400"/><text x="23.4616%" y="735.50">hai60..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,969 samples, 0.03%)</title><rect x="27.6002%" y="677" width="0.0281%" height="15" fill="rgb(233,99,24)" fg:x="3895796" fg:w="3969"/><text x="27.8502%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10,311 samples, 0.07%)</title><rect x="27.7610%" y="661" width="0.0730%" height="15" fill="rgb(234,209,42)" fg:x="3918495" fg:w="10311"/><text x="28.0110%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,429 samples, 0.03%)</title><rect x="27.8341%" y="661" width="0.0314%" height="15" fill="rgb(227,7,12)" fg:x="3928813" fg:w="4429"/><text x="28.0841%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34,233 samples, 0.24%)</title><rect x="27.6283%" y="677" width="0.2425%" height="15" fill="rgb(245,203,43)" fg:x="3899765" fg:w="34233"/><text x="27.8783%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6,669 samples, 0.05%)</title><rect x="27.9986%" y="661" width="0.0472%" height="15" fill="rgb(238,205,33)" fg:x="3952025" fg:w="6669"/><text x="28.2486%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,468 samples, 0.02%)</title><rect x="28.0458%" y="661" width="0.0246%" height="15" fill="rgb(231,56,7)" fg:x="3958694" fg:w="3468"/><text x="28.2958%" y="671.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,367 samples, 0.02%)</title><rect x="28.1154%" y="645" width="0.0168%" height="15" fill="rgb(244,186,29)" fg:x="3968509" fg:w="2367"/><text x="28.3654%" y="655.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,833 samples, 0.01%)</title><rect x="28.1323%" y="645" width="0.0130%" height="15" fill="rgb(234,111,31)" fg:x="3970897" fg:w="1833"/><text x="28.3823%" y="655.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11,861 samples, 0.08%)</title><rect x="28.0704%" y="661" width="0.0840%" height="15" fill="rgb(241,149,10)" fg:x="3962162" fg:w="11861"/><text x="28.3204%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (40,036 samples, 0.28%)</title><rect x="27.8709%" y="677" width="0.2836%" height="15" fill="rgb(249,206,44)" fg:x="3933998" fg:w="40036"/><text x="28.1209%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80,942 samples, 0.57%)</title><rect x="27.5811%" y="693" width="0.5734%" height="15" fill="rgb(251,153,30)" fg:x="3893093" fg:w="80942"/><text x="27.8311%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,447 samples, 0.01%)</title><rect x="28.1705%" y="677" width="0.0103%" height="15" fill="rgb(239,152,38)" fg:x="3976291" fg:w="1447"/><text x="28.4205%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,653 samples, 0.02%)</title><rect x="28.1620%" y="693" width="0.0188%" height="15" fill="rgb(249,139,47)" fg:x="3975095" fg:w="2653"/><text x="28.4120%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (86,916 samples, 0.62%)</title><rect x="27.5706%" y="709" width="0.6158%" height="15" fill="rgb(244,64,35)" fg:x="3891619" fg:w="86916"/><text x="27.8206%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,487 samples, 0.01%)</title><rect x="28.1872%" y="709" width="0.0105%" height="15" fill="rgb(216,46,15)" fg:x="3978652" fg:w="1487"/><text x="28.4372%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,552 samples, 0.02%)</title><rect x="28.2077%" y="661" width="0.0181%" height="15" fill="rgb(250,74,19)" fg:x="3981541" fg:w="2552"/><text x="28.4577%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1,461 samples, 0.01%)</title><rect x="28.2154%" y="645" width="0.0104%" height="15" fill="rgb(249,42,33)" fg:x="3982632" fg:w="1461"/><text x="28.4654%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3,184 samples, 0.02%)</title><rect x="28.2032%" y="677" width="0.0226%" height="15" fill="rgb(242,149,17)" fg:x="3980910" fg:w="3184"/><text x="28.4532%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,792 samples, 0.03%)</title><rect x="28.1996%" y="693" width="0.0269%" height="15" fill="rgb(244,29,21)" fg:x="3980402" fg:w="3792"/><text x="28.4496%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (5,721 samples, 0.04%)</title><rect x="28.1978%" y="709" width="0.0405%" height="15" fill="rgb(220,130,37)" fg:x="3980139" fg:w="5721"/><text x="28.4478%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (32,272 samples, 0.23%)</title><rect x="29.9653%" y="693" width="0.2286%" height="15" fill="rgb(211,67,2)" fg:x="4229628" fg:w="32272"/><text x="30.2153%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (47,836 samples, 0.34%)</title><rect x="30.1939%" y="693" width="0.3389%" height="15" fill="rgb(235,68,52)" fg:x="4261900" fg:w="47836"/><text x="30.4439%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14,962 samples, 0.11%)</title><rect x="30.7168%" y="677" width="0.1060%" height="15" fill="rgb(246,142,3)" fg:x="4335710" fg:w="14962"/><text x="30.9668%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,980 samples, 0.08%)</title><rect x="30.8312%" y="677" width="0.0778%" height="15" fill="rgb(241,25,7)" fg:x="4351854" fg:w="10980"/><text x="31.0812%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,133 samples, 0.02%)</title><rect x="30.9985%" y="661" width="0.0222%" height="15" fill="rgb(242,119,39)" fg:x="4375468" fg:w="3133"/><text x="31.2485%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,648 samples, 0.01%)</title><rect x="31.0207%" y="661" width="0.0117%" height="15" fill="rgb(241,98,45)" fg:x="4378601" fg:w="1648"/><text x="31.2707%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,565 samples, 0.01%)</title><rect x="31.0329%" y="661" width="0.0111%" height="15" fill="rgb(254,28,30)" fg:x="4380327" fg:w="1565"/><text x="31.2829%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8,237 samples, 0.06%)</title><rect x="31.0440%" y="661" width="0.0584%" height="15" fill="rgb(241,142,54)" fg:x="4381892" fg:w="8237"/><text x="31.2940%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27,779 samples, 0.20%)</title><rect x="30.9090%" y="677" width="0.1968%" height="15" fill="rgb(222,85,15)" fg:x="4362834" fg:w="27779"/><text x="31.1590%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,362 samples, 0.02%)</title><rect x="31.1081%" y="677" width="0.0167%" height="15" fill="rgb(210,85,47)" fg:x="4390941" fg:w="2362"/><text x="31.3581%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (86,512 samples, 0.61%)</title><rect x="30.5328%" y="693" width="0.6129%" height="15" fill="rgb(224,206,25)" fg:x="4309736" fg:w="86512"/><text x="30.7828%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,497 samples, 0.02%)</title><rect x="31.1280%" y="677" width="0.0177%" height="15" fill="rgb(243,201,19)" fg:x="4393751" fg:w="2497"/><text x="31.3780%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (410,962 samples, 2.91%)</title><rect x="28.2466%" y="709" width="2.9115%" height="15" fill="rgb(236,59,4)" fg:x="3987036" fg:w="410962"/><text x="28.4966%" y="719.50">ha..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,750 samples, 0.01%)</title><rect x="31.1457%" y="693" width="0.0124%" height="15" fill="rgb(254,179,45)" fg:x="4396248" fg:w="1750"/><text x="31.3957%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10,305 samples, 0.07%)</title><rect x="31.1641%" y="709" width="0.0730%" height="15" fill="rgb(226,14,10)" fg:x="4398843" fg:w="10305"/><text x="31.4141%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,935 samples, 0.02%)</title><rect x="31.2542%" y="693" width="0.0208%" height="15" fill="rgb(244,27,41)" fg:x="4411561" fg:w="2935"/><text x="31.5042%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4,924 samples, 0.03%)</title><rect x="31.2403%" y="709" width="0.0349%" height="15" fill="rgb(235,35,32)" fg:x="4409600" fg:w="4924"/><text x="31.4903%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,021 samples, 0.02%)</title><rect x="31.2812%" y="709" width="0.0214%" height="15" fill="rgb(218,68,31)" fg:x="4415364" fg:w="3021"/><text x="31.5312%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_quads (551,672 samples, 3.91%)</title><rect x="27.3943%" y="725" width="3.9084%" height="15" fill="rgb(207,120,37)" fg:x="3866733" fg:w="551672"/><text x="27.6443%" y="735.50">hai6..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2,198 samples, 0.02%)</title><rect x="32.3588%" y="613" width="0.0156%" height="15" fill="rgb(227,98,0)" fg:x="4567470" fg:w="2198"/><text x="32.6088%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,465 samples, 0.01%)</title><rect x="32.3743%" y="613" width="0.0104%" height="15" fill="rgb(207,7,3)" fg:x="4569668" fg:w="1465"/><text x="32.6243%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4,516 samples, 0.03%)</title><rect x="32.3553%" y="629" width="0.0320%" height="15" fill="rgb(206,98,19)" fg:x="4566987" fg:w="4516"/><text x="32.6053%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7,386 samples, 0.05%)</title><rect x="32.3382%" y="645" width="0.0523%" height="15" fill="rgb(217,5,26)" fg:x="4564570" fg:w="7386"/><text x="32.5882%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8,658 samples, 0.06%)</title><rect x="32.3341%" y="661" width="0.0613%" height="15" fill="rgb(235,190,38)" fg:x="4563983" fg:w="8658"/><text x="32.5841%" y="671.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (10,199 samples, 0.07%)</title><rect x="32.3314%" y="677" width="0.0723%" height="15" fill="rgb(247,86,24)" fg:x="4563614" fg:w="10199"/><text x="32.5814%" y="687.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (11,624 samples, 0.08%)</title><rect x="32.3245%" y="693" width="0.0824%" height="15" fill="rgb(205,101,16)" fg:x="4562627" fg:w="11624"/><text x="32.5745%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,440 samples, 0.03%)</title><rect x="32.4073%" y="693" width="0.0315%" height="15" fill="rgb(246,168,33)" fg:x="4574321" fg:w="4440"/><text x="32.6573%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (80,838 samples, 0.57%)</title><rect x="37.6888%" y="677" width="0.5727%" height="15" fill="rgb(231,114,1)" fg:x="5319813" fg:w="80838"/><text x="37.9388%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (935,793 samples, 6.63%)</title><rect x="32.4388%" y="693" width="6.6297%" height="15" fill="rgb(207,184,53)" fg:x="4578761" fg:w="935793"/><text x="32.6888%" y="703.50">hai606i_s..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (113,903 samples, 0.81%)</title><rect x="38.2615%" y="677" width="0.8070%" height="15" fill="rgb(224,95,51)" fg:x="5400651" fg:w="113903"/><text x="38.5115%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,092,307 samples, 7.74%)</title><rect x="31.4534%" y="709" width="7.7386%" height="15" fill="rgb(212,188,45)" fg:x="4439674" fg:w="1092307"/><text x="31.7034%" y="719.50">hai606i_sud..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (17,427 samples, 0.12%)</title><rect x="39.0685%" y="693" width="0.1235%" height="15" fill="rgb(223,154,38)" fg:x="5514554" fg:w="17427"/><text x="39.3185%" y="703.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (1,436 samples, 0.01%)</title><rect x="39.1976%" y="709" width="0.0102%" height="15" fill="rgb(251,22,52)" fg:x="5532774" fg:w="1436"/><text x="39.4476%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22,913 samples, 0.16%)</title><rect x="39.2145%" y="709" width="0.1623%" height="15" fill="rgb(229,209,22)" fg:x="5535169" fg:w="22913"/><text x="39.4645%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (4,422 samples, 0.03%)</title><rect x="39.5515%" y="661" width="0.0313%" height="15" fill="rgb(234,138,34)" fg:x="5582727" fg:w="4422"/><text x="39.8015%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2,517 samples, 0.02%)</title><rect x="39.5892%" y="661" width="0.0178%" height="15" fill="rgb(212,95,11)" fg:x="5588054" fg:w="2517"/><text x="39.8392%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8,559 samples, 0.06%)</title><rect x="39.7213%" y="645" width="0.0606%" height="15" fill="rgb(240,179,47)" fg:x="5606703" fg:w="8559"/><text x="39.9713%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (3,635 samples, 0.03%)</title><rect x="39.9760%" y="629" width="0.0258%" height="15" fill="rgb(240,163,11)" fg:x="5642645" fg:w="3635"/><text x="40.2260%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32,970 samples, 0.23%)</title><rect x="39.7822%" y="645" width="0.2336%" height="15" fill="rgb(236,37,12)" fg:x="5615299" fg:w="32970"/><text x="40.0322%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,989 samples, 0.01%)</title><rect x="40.0017%" y="629" width="0.0141%" height="15" fill="rgb(232,164,16)" fg:x="5646280" fg:w="1989"/><text x="40.2517%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57,763 samples, 0.41%)</title><rect x="39.6070%" y="661" width="0.4092%" height="15" fill="rgb(244,205,15)" fg:x="5590571" fg:w="57763"/><text x="39.8570%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (70,855 samples, 0.50%)</title><rect x="39.5144%" y="677" width="0.5020%" height="15" fill="rgb(223,117,47)" fg:x="5577499" fg:w="70855"/><text x="39.7644%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (85,828 samples, 0.61%)</title><rect x="39.4251%" y="693" width="0.6081%" height="15" fill="rgb(244,107,35)" fg:x="5564890" fg:w="85828"/><text x="39.6751%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,364 samples, 0.02%)</title><rect x="40.0164%" y="677" width="0.0167%" height="15" fill="rgb(205,140,8)" fg:x="5648354" fg:w="2364"/><text x="40.2664%" y="687.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (1,938 samples, 0.01%)</title><rect x="40.0396%" y="693" width="0.0137%" height="15" fill="rgb(228,84,46)" fg:x="5651625" fg:w="1938"/><text x="40.2896%" y="703.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (1,638 samples, 0.01%)</title><rect x="40.0533%" y="693" width="0.0116%" height="15" fill="rgb(254,188,9)" fg:x="5653563" fg:w="1638"/><text x="40.3033%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,950 samples, 0.02%)</title><rect x="40.0650%" y="693" width="0.0209%" height="15" fill="rgb(206,112,54)" fg:x="5655212" fg:w="2950"/><text x="40.3150%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7,140 samples, 0.05%)</title><rect x="40.0859%" y="693" width="0.0506%" height="15" fill="rgb(216,84,49)" fg:x="5658162" fg:w="7140"/><text x="40.3359%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,706 samples, 0.01%)</title><rect x="40.1390%" y="693" width="0.0121%" height="15" fill="rgb(214,194,35)" fg:x="5665659" fg:w="1706"/><text x="40.3890%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (128,858 samples, 0.91%)</title><rect x="39.3775%" y="709" width="0.9129%" height="15" fill="rgb(249,28,3)" fg:x="5558178" fg:w="128858"/><text x="39.6275%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17,875 samples, 0.13%)</title><rect x="40.1638%" y="693" width="0.1266%" height="15" fill="rgb(222,56,52)" fg:x="5669161" fg:w="17875"/><text x="40.4138%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,147 samples, 0.03%)</title><rect x="40.4160%" y="693" width="0.0294%" height="15" fill="rgb(245,217,50)" fg:x="5704751" fg:w="4147"/><text x="40.6660%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,230 samples, 0.06%)</title><rect x="40.4470%" y="693" width="0.0583%" height="15" fill="rgb(213,201,24)" fg:x="5709132" fg:w="8230"/><text x="40.6970%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,768 samples, 0.01%)</title><rect x="40.5646%" y="677" width="0.0125%" height="15" fill="rgb(248,116,28)" fg:x="5725728" fg:w="1768"/><text x="40.8146%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3,364 samples, 0.02%)</title><rect x="40.5893%" y="645" width="0.0238%" height="15" fill="rgb(219,72,43)" fg:x="5729215" fg:w="3364"/><text x="40.8393%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4,614 samples, 0.03%)</title><rect x="40.5805%" y="661" width="0.0327%" height="15" fill="rgb(209,138,14)" fg:x="5727971" fg:w="4614"/><text x="40.8305%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5,059 samples, 0.04%)</title><rect x="40.5773%" y="677" width="0.0358%" height="15" fill="rgb(222,18,33)" fg:x="5727528" fg:w="5059"/><text x="40.8273%" y="687.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (15,305 samples, 0.11%)</title><rect x="40.5053%" y="693" width="0.1084%" height="15" fill="rgb(213,199,7)" fg:x="5717362" fg:w="15305"/><text x="40.7553%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,778 samples, 0.01%)</title><rect x="40.6243%" y="677" width="0.0126%" height="15" fill="rgb(250,110,10)" fg:x="5734158" fg:w="1778"/><text x="40.8743%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,716 samples, 0.02%)</title><rect x="40.6177%" y="693" width="0.0192%" height="15" fill="rgb(248,123,6)" fg:x="5733225" fg:w="2716"/><text x="40.8677%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,457 samples, 0.01%)</title><rect x="40.6382%" y="693" width="0.0103%" height="15" fill="rgb(206,91,31)" fg:x="5736123" fg:w="1457"/><text x="40.8882%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (51,289 samples, 0.36%)</title><rect x="40.2905%" y="709" width="0.3634%" height="15" fill="rgb(211,154,13)" fg:x="5687036" fg:w="51289"/><text x="40.5405%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (15,039 samples, 0.11%)</title><rect x="40.6538%" y="709" width="0.1065%" height="15" fill="rgb(225,148,7)" fg:x="5738325" fg:w="15039"/><text x="40.9038%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7,836 samples, 0.06%)</title><rect x="40.7800%" y="709" width="0.0555%" height="15" fill="rgb(220,160,43)" fg:x="5756135" fg:w="7836"/><text x="41.0300%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22,859 samples, 0.16%)</title><rect x="40.8355%" y="709" width="0.1619%" height="15" fill="rgb(213,52,39)" fg:x="5763971" fg:w="22859"/><text x="41.0855%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6,439 samples, 0.05%)</title><rect x="40.9975%" y="709" width="0.0456%" height="15" fill="rgb(243,137,7)" fg:x="5786830" fg:w="6439"/><text x="41.2475%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (2,451 samples, 0.02%)</title><rect x="41.1978%" y="693" width="0.0174%" height="15" fill="rgb(230,79,13)" fg:x="5815106" fg:w="2451"/><text x="41.4478%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5,535 samples, 0.04%)</title><rect x="41.2151%" y="693" width="0.0392%" height="15" fill="rgb(247,105,23)" fg:x="5817557" fg:w="5535"/><text x="41.4651%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13,658 samples, 0.10%)</title><rect x="41.4622%" y="677" width="0.0968%" height="15" fill="rgb(223,179,41)" fg:x="5852425" fg:w="13658"/><text x="41.7122%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57,420 samples, 0.41%)</title><rect x="41.2654%" y="693" width="0.4068%" height="15" fill="rgb(218,9,34)" fg:x="5824651" fg:w="57420"/><text x="41.5154%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15,988 samples, 0.11%)</title><rect x="41.5589%" y="677" width="0.1133%" height="15" fill="rgb(222,106,8)" fg:x="5866083" fg:w="15988"/><text x="41.8089%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (88,060 samples, 0.62%)</title><rect x="41.0496%" y="709" width="0.6239%" height="15" fill="rgb(211,220,0)" fg:x="5794191" fg:w="88060"/><text x="41.2996%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,247 samples, 0.02%)</title><rect x="41.6775%" y="709" width="0.0159%" height="15" fill="rgb(229,52,16)" fg:x="5882821" fg:w="2247"/><text x="41.9275%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13,328 samples, 0.09%)</title><rect x="41.6963%" y="709" width="0.0944%" height="15" fill="rgb(212,155,18)" fg:x="5885472" fg:w="13328"/><text x="41.9463%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_singles (1,480,457 samples, 10.49%)</title><rect x="31.3027%" y="725" width="10.4885%" height="15" fill="rgb(242,21,14)" fg:x="4418405" fg:w="1480457"/><text x="31.5527%" y="735.50">hai606i_sudoku`..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (6,403 samples, 0.05%)</title><rect x="42.0653%" y="677" width="0.0454%" height="15" fill="rgb(222,19,48)" fg:x="5937552" fg:w="6403"/><text x="42.3153%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18,902 samples, 0.13%)</title><rect x="42.3475%" y="661" width="0.1339%" height="15" fill="rgb(232,45,27)" fg:x="5977387" fg:w="18902"/><text x="42.5975%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,132 samples, 0.06%)</title><rect x="42.4815%" y="661" width="0.0576%" height="15" fill="rgb(249,103,42)" fg:x="5996306" fg:w="8132"/><text x="42.7315%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (61,892 samples, 0.44%)</title><rect x="42.1106%" y="677" width="0.4385%" height="15" fill="rgb(246,81,33)" fg:x="5943955" fg:w="61892"/><text x="42.3606%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7,270 samples, 0.05%)</title><rect x="42.6789%" y="661" width="0.0515%" height="15" fill="rgb(252,33,42)" fg:x="6024167" fg:w="7270"/><text x="42.9289%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,192 samples, 0.02%)</title><rect x="42.7304%" y="661" width="0.0226%" height="15" fill="rgb(209,212,41)" fg:x="6031437" fg:w="3192"/><text x="42.9804%" y="671.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,316 samples, 0.02%)</title><rect x="42.7821%" y="645" width="0.0164%" height="15" fill="rgb(207,154,6)" fg:x="6038732" fg:w="2316"/><text x="43.0321%" y="655.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,758 samples, 0.01%)</title><rect x="42.7985%" y="645" width="0.0125%" height="15" fill="rgb(223,64,47)" fg:x="6041048" fg:w="1758"/><text x="43.0485%" y="655.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8,198 samples, 0.06%)</title><rect x="42.7530%" y="661" width="0.0581%" height="15" fill="rgb(211,161,38)" fg:x="6034629" fg:w="8198"/><text x="43.0030%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (36,981 samples, 0.26%)</title><rect x="42.5491%" y="677" width="0.2620%" height="15" fill="rgb(219,138,40)" fg:x="6005847" fg:w="36981"/><text x="42.7991%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (110,118 samples, 0.78%)</title><rect x="42.0310%" y="693" width="0.7801%" height="15" fill="rgb(241,228,46)" fg:x="5932721" fg:w="110118"/><text x="42.2810%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,671 samples, 0.02%)</title><rect x="42.8405%" y="677" width="0.0189%" height="15" fill="rgb(223,209,38)" fg:x="6046976" fg:w="2671"/><text x="43.0905%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5,088 samples, 0.04%)</title><rect x="42.8234%" y="693" width="0.0360%" height="15" fill="rgb(236,164,45)" fg:x="6044565" fg:w="5088"/><text x="43.0734%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (121,966 samples, 0.86%)</title><rect x="42.0067%" y="709" width="0.8641%" height="15" fill="rgb(231,15,5)" fg:x="5929286" fg:w="121966"/><text x="42.2567%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,626 samples, 0.01%)</title><rect x="42.8715%" y="709" width="0.0115%" height="15" fill="rgb(252,35,15)" fg:x="6051353" fg:w="1626"/><text x="43.1215%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1,804 samples, 0.01%)</title><rect x="42.9057%" y="645" width="0.0128%" height="15" fill="rgb(248,181,18)" fg:x="6056174" fg:w="1804"/><text x="43.1557%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3,108 samples, 0.02%)</title><rect x="42.8964%" y="661" width="0.0220%" height="15" fill="rgb(233,39,42)" fg:x="6054872" fg:w="3108"/><text x="43.1464%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3,956 samples, 0.03%)</title><rect x="42.8904%" y="677" width="0.0280%" height="15" fill="rgb(238,110,33)" fg:x="6054026" fg:w="3956"/><text x="43.1404%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,776 samples, 0.03%)</title><rect x="42.8856%" y="693" width="0.0338%" height="15" fill="rgb(233,195,10)" fg:x="6053343" fg:w="4776"/><text x="43.1356%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (7,227 samples, 0.05%)</title><rect x="42.8830%" y="709" width="0.0512%" height="15" fill="rgb(254,105,3)" fg:x="6052979" fg:w="7227"/><text x="43.1330%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (34,929 samples, 0.25%)</title><rect x="44.9020%" y="693" width="0.2475%" height="15" fill="rgb(221,225,9)" fg:x="6337953" fg:w="34929"/><text x="45.1520%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (50,981 samples, 0.36%)</title><rect x="45.1494%" y="693" width="0.3612%" height="15" fill="rgb(224,227,45)" fg:x="6372882" fg:w="50981"/><text x="45.3994%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16,544 samples, 0.12%)</title><rect x="45.7070%" y="677" width="0.1172%" height="15" fill="rgb(229,198,43)" fg:x="6451587" fg:w="16544"/><text x="45.9570%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (11,831 samples, 0.08%)</title><rect x="45.8333%" y="677" width="0.0838%" height="15" fill="rgb(206,209,35)" fg:x="6469410" fg:w="11831"/><text x="46.0833%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,203 samples, 0.02%)</title><rect x="46.0091%" y="661" width="0.0227%" height="15" fill="rgb(245,195,53)" fg:x="6494231" fg:w="3203"/><text x="46.2591%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,669 samples, 0.01%)</title><rect x="46.0318%" y="661" width="0.0118%" height="15" fill="rgb(240,92,26)" fg:x="6497434" fg:w="1669"/><text x="46.2818%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,569 samples, 0.01%)</title><rect x="46.0444%" y="661" width="0.0111%" height="15" fill="rgb(207,40,23)" fg:x="6499205" fg:w="1569"/><text x="46.2944%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9,072 samples, 0.06%)</title><rect x="46.0555%" y="661" width="0.0643%" height="15" fill="rgb(223,111,35)" fg:x="6500774" fg:w="9072"/><text x="46.3055%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29,135 samples, 0.21%)</title><rect x="45.9171%" y="677" width="0.2064%" height="15" fill="rgb(229,147,28)" fg:x="6481241" fg:w="29135"/><text x="46.1671%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,652 samples, 0.02%)</title><rect x="46.1261%" y="677" width="0.0188%" height="15" fill="rgb(211,29,28)" fg:x="6510743" fg:w="2652"/><text x="46.3761%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (92,823 samples, 0.66%)</title><rect x="45.5106%" y="693" width="0.6576%" height="15" fill="rgb(228,72,33)" fg:x="6423863" fg:w="92823"/><text x="45.7606%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,799 samples, 0.02%)</title><rect x="46.1484%" y="677" width="0.0198%" height="15" fill="rgb(205,214,31)" fg:x="6513887" fg:w="2799"/><text x="46.3984%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (457,232 samples, 3.24%)</title><rect x="42.9442%" y="709" width="3.2393%" height="15" fill="rgb(224,111,15)" fg:x="6061610" fg:w="457232"/><text x="43.1942%" y="719.50">hai..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,156 samples, 0.02%)</title><rect x="46.1682%" y="693" width="0.0153%" height="15" fill="rgb(253,21,26)" fg:x="6516686" fg:w="2156"/><text x="46.4182%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12,760 samples, 0.09%)</title><rect x="46.1918%" y="709" width="0.0904%" height="15" fill="rgb(245,139,43)" fg:x="6520016" fg:w="12760"/><text x="46.4418%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3,846 samples, 0.03%)</title><rect x="46.3043%" y="693" width="0.0272%" height="15" fill="rgb(252,170,7)" fg:x="6535890" fg:w="3846"/><text x="46.5543%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6,366 samples, 0.05%)</title><rect x="46.2867%" y="709" width="0.0451%" height="15" fill="rgb(231,118,14)" fg:x="6533413" fg:w="6366"/><text x="46.5367%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,711 samples, 0.03%)</title><rect x="46.3392%" y="709" width="0.0263%" height="15" fill="rgb(238,83,0)" fg:x="6540816" fg:w="3711"/><text x="46.5892%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_triples (645,676 samples, 4.57%)</title><rect x="41.7912%" y="725" width="4.5744%" height="15" fill="rgb(221,39,39)" fg:x="5898862" fg:w="645676"/><text x="42.0412%" y="735.50">hai60..</text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21,914 samples, 0.16%)</title><rect x="46.6656%" y="709" width="0.1553%" height="15" fill="rgb(222,119,46)" fg:x="6586890" fg:w="21914"/><text x="46.9156%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,548 samples, 0.01%)</title><rect x="46.8099%" y="693" width="0.0110%" height="15" fill="rgb(222,165,49)" fg:x="6607256" fg:w="1548"/><text x="47.0599%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4,616 samples, 0.03%)</title><rect x="46.8812%" y="645" width="0.0327%" height="15" fill="rgb(219,113,52)" fg:x="6617328" fg:w="4616"/><text x="47.1312%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7,904 samples, 0.06%)</title><rect x="46.8580%" y="661" width="0.0560%" height="15" fill="rgb(214,7,15)" fg:x="6614054" fg:w="7904"/><text x="47.1080%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9,943 samples, 0.07%)</title><rect x="46.8436%" y="677" width="0.0704%" height="15" fill="rgb(235,32,4)" fg:x="6612018" fg:w="9943"/><text x="47.0936%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,047 samples, 0.09%)</title><rect x="46.8312%" y="693" width="0.0853%" height="15" fill="rgb(238,90,54)" fg:x="6610262" fg:w="12047"/><text x="47.0812%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (18,313 samples, 0.13%)</title><rect x="46.8246%" y="709" width="0.1297%" height="15" fill="rgb(213,208,19)" fg:x="6609338" fg:w="18313"/><text x="47.0746%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,688 samples, 0.02%)</title><rect x="46.9353%" y="693" width="0.0190%" height="15" fill="rgb(233,156,4)" fg:x="6624963" fg:w="2688"/><text x="47.1853%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6,802 samples, 0.05%)</title><rect x="46.9619%" y="709" width="0.0482%" height="15" fill="rgb(207,194,5)" fg:x="6628719" fg:w="6802"/><text x="47.2119%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,929 samples, 0.01%)</title><rect x="47.0760%" y="677" width="0.0137%" height="15" fill="rgb(206,111,30)" fg:x="6644816" fg:w="1929"/><text x="47.3260%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8,680 samples, 0.06%)</title><rect x="47.0466%" y="693" width="0.0615%" height="15" fill="rgb(243,70,54)" fg:x="6640670" fg:w="8680"/><text x="47.2966%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2,605 samples, 0.02%)</title><rect x="47.0896%" y="677" width="0.0185%" height="15" fill="rgb(242,28,8)" fg:x="6646745" fg:w="2605"/><text x="47.3396%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12,759 samples, 0.09%)</title><rect x="47.0179%" y="709" width="0.0904%" height="15" fill="rgb(219,106,18)" fg:x="6636618" fg:w="12759"/><text x="47.2679%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,881 samples, 0.03%)</title><rect x="47.1091%" y="709" width="0.0346%" height="15" fill="rgb(244,222,10)" fg:x="6649497" fg:w="4881"/><text x="47.3591%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,607 samples, 0.02%)</title><rect x="47.1484%" y="709" width="0.0185%" height="15" fill="rgb(236,179,52)" fg:x="6655042" fg:w="2607"/><text x="47.3984%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_pairs (113,119 samples, 0.80%)</title><rect x="46.3655%" y="725" width="0.8014%" height="15" fill="rgb(213,23,39)" fg:x="6544538" fg:w="113119"/><text x="46.6155%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,178 samples, 0.06%)</title><rect x="47.2200%" y="709" width="0.0579%" height="15" fill="rgb(238,48,10)" fg:x="6665142" fg:w="8178"/><text x="47.4700%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,838 samples, 0.02%)</title><rect x="47.3866%" y="677" width="0.0201%" height="15" fill="rgb(251,196,23)" fg:x="6688657" fg:w="2838"/><text x="47.6366%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,816 samples, 0.03%)</title><rect x="47.4067%" y="677" width="0.0270%" height="15" fill="rgb(250,152,24)" fg:x="6691501" fg:w="3816"/><text x="47.6567%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19,745 samples, 0.14%)</title><rect x="47.2989%" y="693" width="0.1399%" height="15" fill="rgb(209,150,17)" fg:x="6676282" fg:w="19745"/><text x="47.5489%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,282 samples, 0.02%)</title><rect x="47.5392%" y="677" width="0.0162%" height="15" fill="rgb(234,202,34)" fg:x="6710199" fg:w="2282"/><text x="47.7892%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,917 samples, 0.02%)</title><rect x="47.5553%" y="677" width="0.0207%" height="15" fill="rgb(253,148,53)" fg:x="6712481" fg:w="2917"/><text x="47.8053%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8,456 samples, 0.06%)</title><rect x="47.5760%" y="677" width="0.0599%" height="15" fill="rgb(218,129,16)" fg:x="6715398" fg:w="8456"/><text x="47.8260%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (27,838 samples, 0.20%)</title><rect x="47.4388%" y="693" width="0.1972%" height="15" fill="rgb(216,85,19)" fg:x="6696027" fg:w="27838"/><text x="47.6888%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50,550 samples, 0.36%)</title><rect x="47.2779%" y="709" width="0.3581%" height="15" fill="rgb(235,228,7)" fg:x="6673320" fg:w="50550"/><text x="47.5279%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1,518 samples, 0.01%)</title><rect x="47.6559%" y="645" width="0.0108%" height="15" fill="rgb(245,175,0)" fg:x="6726676" fg:w="1518"/><text x="47.9059%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,612 samples, 0.02%)</title><rect x="47.6482%" y="661" width="0.0185%" height="15" fill="rgb(208,168,36)" fg:x="6725586" fg:w="2612"/><text x="47.8982%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3,260 samples, 0.02%)</title><rect x="47.6436%" y="677" width="0.0231%" height="15" fill="rgb(246,171,24)" fg:x="6724939" fg:w="3260"/><text x="47.8936%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,899 samples, 0.03%)</title><rect x="47.6398%" y="693" width="0.0276%" height="15" fill="rgb(215,142,24)" fg:x="6724403" fg:w="3899"/><text x="47.8898%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (5,773 samples, 0.04%)</title><rect x="47.6380%" y="709" width="0.0409%" height="15" fill="rgb(250,187,7)" fg:x="6724144" fg:w="5773"/><text x="47.8880%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,831 samples, 0.01%)</title><rect x="47.6855%" y="709" width="0.0130%" height="15" fill="rgb(228,66,33)" fg:x="6730849" fg:w="1831"/><text x="47.9355%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,821 samples, 0.01%)</title><rect x="47.7025%" y="709" width="0.0129%" height="15" fill="rgb(234,215,21)" fg:x="6733248" fg:w="1821"/><text x="47.9525%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,522 samples, 0.02%)</title><rect x="47.7265%" y="693" width="0.0179%" height="15" fill="rgb(222,191,20)" fg:x="6736645" fg:w="2522"/><text x="47.9765%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3,714 samples, 0.03%)</title><rect x="47.7181%" y="709" width="0.0263%" height="15" fill="rgb(245,79,54)" fg:x="6735456" fg:w="3714"/><text x="47.9681%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_quads (83,056 samples, 0.59%)</title><rect x="47.1669%" y="725" width="0.5884%" height="15" fill="rgb(240,10,37)" fg:x="6657657" fg:w="83056"/><text x="47.4169%" y="735.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,801 samples, 0.01%)</title><rect x="47.9517%" y="709" width="0.0128%" height="15" fill="rgb(214,192,32)" fg:x="6768423" fg:w="1801"/><text x="48.2017%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25,935 samples, 0.18%)</title><rect x="48.5423%" y="693" width="0.1837%" height="15" fill="rgb(209,36,54)" fg:x="6851793" fg:w="25935"/><text x="48.7923%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (46,532 samples, 0.33%)</title><rect x="48.7353%" y="693" width="0.3297%" height="15" fill="rgb(220,10,11)" fg:x="6879032" fg:w="46532"/><text x="48.9853%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5,976 samples, 0.04%)</title><rect x="49.3322%" y="677" width="0.0423%" height="15" fill="rgb(221,106,17)" fg:x="6963289" fg:w="5976"/><text x="49.5822%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,266 samples, 0.06%)</title><rect x="49.3746%" y="677" width="0.0586%" height="15" fill="rgb(251,142,44)" fg:x="6969265" fg:w="8266"/><text x="49.6246%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3,568 samples, 0.03%)</title><rect x="49.4804%" y="645" width="0.0253%" height="15" fill="rgb(238,13,15)" fg:x="6984201" fg:w="3568"/><text x="49.7304%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14,011 samples, 0.10%)</title><rect x="49.5057%" y="645" width="0.0993%" height="15" fill="rgb(208,107,27)" fg:x="6987776" fg:w="14011"/><text x="49.7557%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21,216 samples, 0.15%)</title><rect x="49.4549%" y="661" width="0.1503%" height="15" fill="rgb(205,136,37)" fg:x="6980604" fg:w="21216"/><text x="49.7049%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24,062 samples, 0.17%)</title><rect x="49.4350%" y="677" width="0.1705%" height="15" fill="rgb(250,205,27)" fg:x="6977790" fg:w="24062"/><text x="49.6850%" y="687.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (76,678 samples, 0.54%)</title><rect x="49.0650%" y="693" width="0.5432%" height="15" fill="rgb(210,80,43)" fg:x="6925564" fg:w="76678"/><text x="49.3150%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,551 samples, 0.01%)</title><rect x="49.6104%" y="693" width="0.0110%" height="15" fill="rgb(247,160,36)" fg:x="7002549" fg:w="1551"/><text x="49.8604%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8,538 samples, 0.06%)</title><rect x="49.6742%" y="677" width="0.0605%" height="15" fill="rgb(234,13,49)" fg:x="7011567" fg:w="8538"/><text x="49.9242%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14,678 samples, 0.10%)</title><rect x="49.6311%" y="693" width="0.1040%" height="15" fill="rgb(234,122,0)" fg:x="7005477" fg:w="14678"/><text x="49.8811%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8,093 samples, 0.06%)</title><rect x="49.7426%" y="693" width="0.0573%" height="15" fill="rgb(207,146,38)" fg:x="7021212" fg:w="8093"/><text x="49.9926%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,680 samples, 0.02%)</title><rect x="49.7999%" y="693" width="0.0190%" height="15" fill="rgb(207,177,25)" fg:x="7029305" fg:w="2680"/><text x="50.0499%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (261,312 samples, 1.85%)</title><rect x="47.9678%" y="709" width="1.8513%" height="15" fill="rgb(211,178,42)" fg:x="6770704" fg:w="261312"/><text x="48.2178%" y="719.50">h..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (98,329 samples, 0.70%)</title><rect x="49.8191%" y="709" width="0.6966%" height="15" fill="rgb(230,69,54)" fg:x="7032016" fg:w="98329"/><text x="50.0691%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_free (1,450 samples, 0.01%)</title><rect x="50.5157%" y="709" width="0.0103%" height="15" fill="rgb(214,135,41)" fg:x="7130345" fg:w="1450"/><text x="50.7657%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_singles (393,480 samples, 2.79%)</title><rect x="47.7554%" y="725" width="2.7877%" height="15" fill="rgb(237,67,25)" fg:x="6740713" fg:w="393480"/><text x="48.0054%" y="735.50">ha..</text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,552 samples, 0.01%)</title><rect x="50.8744%" y="693" width="0.0110%" height="15" fill="rgb(222,189,50)" fg:x="7180966" fg:w="1552"/><text x="51.1244%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24,148 samples, 0.17%)</title><rect x="50.7241%" y="709" width="0.1711%" height="15" fill="rgb(245,148,34)" fg:x="7159756" fg:w="24148"/><text x="50.9741%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10,012 samples, 0.07%)</title><rect x="51.2785%" y="677" width="0.0709%" height="15" fill="rgb(222,29,6)" fg:x="7238004" fg:w="10012"/><text x="51.5285%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (12,647 samples, 0.09%)</title><rect x="51.3494%" y="677" width="0.0896%" height="15" fill="rgb(221,189,43)" fg:x="7248021" fg:w="12647"/><text x="51.5994%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (66,331 samples, 0.47%)</title><rect x="50.9723%" y="693" width="0.4699%" height="15" fill="rgb(207,36,27)" fg:x="7194788" fg:w="66331"/><text x="51.2223%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5,203 samples, 0.04%)</title><rect x="51.6558%" y="677" width="0.0369%" height="15" fill="rgb(217,90,24)" fg:x="7291270" fg:w="5203"/><text x="51.9058%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (5,993 samples, 0.04%)</title><rect x="51.6927%" y="677" width="0.0425%" height="15" fill="rgb(224,66,35)" fg:x="7296473" fg:w="5993"/><text x="51.9427%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,222 samples, 0.02%)</title><rect x="51.7842%" y="661" width="0.0157%" height="15" fill="rgb(221,13,50)" fg:x="7309389" fg:w="2222"/><text x="52.0342%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (53,046 samples, 0.38%)</title><rect x="51.4422%" y="693" width="0.3758%" height="15" fill="rgb(236,68,49)" fg:x="7261119" fg:w="53046"/><text x="51.6922%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11,699 samples, 0.08%)</title><rect x="51.7352%" y="677" width="0.0829%" height="15" fill="rgb(229,146,28)" fg:x="7302466" fg:w="11699"/><text x="51.9852%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,553 samples, 0.02%)</title><rect x="51.8000%" y="661" width="0.0181%" height="15" fill="rgb(225,31,38)" fg:x="7311612" fg:w="2553"/><text x="52.0500%" y="671.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (130,266 samples, 0.92%)</title><rect x="50.8952%" y="709" width="0.9229%" height="15" fill="rgb(250,208,3)" fg:x="7183904" fg:w="130266"/><text x="51.1452%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3,948 samples, 0.03%)</title><rect x="51.8742%" y="645" width="0.0280%" height="15" fill="rgb(246,54,23)" fg:x="7322091" fg:w="3948"/><text x="52.1242%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6,918 samples, 0.05%)</title><rect x="51.8532%" y="661" width="0.0490%" height="15" fill="rgb(243,76,11)" fg:x="7319130" fg:w="6918"/><text x="52.1032%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8,592 samples, 0.06%)</title><rect x="51.8414%" y="677" width="0.0609%" height="15" fill="rgb(245,21,50)" fg:x="7317457" fg:w="8592"/><text x="52.0914%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,380 samples, 0.07%)</title><rect x="51.8307%" y="693" width="0.0735%" height="15" fill="rgb(228,9,43)" fg:x="7315957" fg:w="10380"/><text x="52.0807%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (15,647 samples, 0.11%)</title><rect x="51.8251%" y="709" width="0.1109%" height="15" fill="rgb(208,100,47)" fg:x="7315158" fg:w="15647"/><text x="52.0751%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,114 samples, 0.01%)</title><rect x="51.9210%" y="693" width="0.0150%" height="15" fill="rgb(232,26,8)" fg:x="7328691" fg:w="2114"/><text x="52.1710%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,481 samples, 0.02%)</title><rect x="51.9359%" y="709" width="0.0176%" height="15" fill="rgb(216,166,38)" fg:x="7330805" fg:w="2481"/><text x="52.1859%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6,245 samples, 0.04%)</title><rect x="51.9563%" y="709" width="0.0442%" height="15" fill="rgb(251,202,51)" fg:x="7333683" fg:w="6245"/><text x="52.2063%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,032 samples, 0.03%)</title><rect x="51.9720%" y="693" width="0.0286%" height="15" fill="rgb(254,216,34)" fg:x="7335896" fg:w="4032"/><text x="52.2220%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,814 samples, 0.01%)</title><rect x="52.0033%" y="709" width="0.0129%" height="15" fill="rgb(251,32,27)" fg:x="7340313" fg:w="1814"/><text x="52.2533%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7,222 samples, 0.05%)</title><rect x="52.0161%" y="709" width="0.0512%" height="15" fill="rgb(208,127,28)" fg:x="7342127" fg:w="7222"/><text x="52.2661%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,686 samples, 0.01%)</title><rect x="52.1262%" y="677" width="0.0119%" height="15" fill="rgb(224,137,22)" fg:x="7357662" fg:w="1686"/><text x="52.3762%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7,446 samples, 0.05%)</title><rect x="52.1010%" y="693" width="0.0528%" height="15" fill="rgb(254,70,32)" fg:x="7354106" fg:w="7446"/><text x="52.3510%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2,204 samples, 0.02%)</title><rect x="52.1381%" y="677" width="0.0156%" height="15" fill="rgb(229,75,37)" fg:x="7359348" fg:w="2204"/><text x="52.3881%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11,320 samples, 0.08%)</title><rect x="52.0738%" y="709" width="0.0802%" height="15" fill="rgb(252,64,23)" fg:x="7350261" fg:w="11320"/><text x="52.3238%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,841 samples, 0.03%)</title><rect x="52.1606%" y="709" width="0.0272%" height="15" fill="rgb(232,162,48)" fg:x="7362523" fg:w="3841"/><text x="52.4106%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_triples (232,182 samples, 1.64%)</title><rect x="50.5430%" y="725" width="1.6449%" height="15" fill="rgb(246,160,12)" fg:x="7134193" fg:w="232182"/><text x="50.7930%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11,585 samples, 0.08%)</title><rect x="53.2935%" y="677" width="0.0821%" height="15" fill="rgb(247,166,0)" fg:x="7522422" fg:w="11585"/><text x="53.5435%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (145,366 samples, 1.03%)</title><rect x="52.4580%" y="693" width="1.0299%" height="15" fill="rgb(249,219,21)" fg:x="7404495" fg:w="145366"/><text x="52.7080%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (15,854 samples, 0.11%)</title><rect x="53.3755%" y="677" width="0.1123%" height="15" fill="rgb(205,209,3)" fg:x="7534007" fg:w="15854"/><text x="53.6255%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (172,314 samples, 1.22%)</title><rect x="52.2853%" y="709" width="1.2208%" height="15" fill="rgb(243,44,1)" fg:x="7380114" fg:w="172314"/><text x="52.5353%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,567 samples, 0.02%)</title><rect x="53.4879%" y="693" width="0.0182%" height="15" fill="rgb(206,159,16)" fg:x="7549861" fg:w="2567"/><text x="53.7379%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,758 samples, 0.03%)</title><rect x="53.5060%" y="709" width="0.0266%" height="15" fill="rgb(244,77,30)" fg:x="7552428" fg:w="3758"/><text x="53.7560%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (5,798 samples, 0.04%)</title><rect x="53.5356%" y="709" width="0.0411%" height="15" fill="rgb(218,69,12)" fg:x="7556605" fg:w="5798"/><text x="53.7856%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,797 samples, 0.03%)</title><rect x="53.5767%" y="709" width="0.0269%" height="15" fill="rgb(212,87,7)" fg:x="7562403" fg:w="3797"/><text x="53.8267%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2,666 samples, 0.02%)</title><rect x="53.6404%" y="645" width="0.0189%" height="15" fill="rgb(245,114,25)" fg:x="7571395" fg:w="2666"/><text x="53.8904%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4,612 samples, 0.03%)</title><rect x="53.6266%" y="661" width="0.0327%" height="15" fill="rgb(210,61,42)" fg:x="7569452" fg:w="4612"/><text x="53.8766%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5,594 samples, 0.04%)</title><rect x="53.6197%" y="677" width="0.0396%" height="15" fill="rgb(211,52,33)" fg:x="7568472" fg:w="5594"/><text x="53.8697%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,853 samples, 0.05%)</title><rect x="53.6120%" y="693" width="0.0486%" height="15" fill="rgb(234,58,33)" fg:x="7567378" fg:w="6853"/><text x="53.8620%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (11,191 samples, 0.08%)</title><rect x="53.6036%" y="709" width="0.0793%" height="15" fill="rgb(220,115,36)" fg:x="7566200" fg:w="11191"/><text x="53.8536%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3,238 samples, 0.02%)</title><rect x="53.6919%" y="709" width="0.0229%" height="15" fill="rgb(243,153,54)" fg:x="7578661" fg:w="3238"/><text x="53.9419%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4,534 samples, 0.03%)</title><rect x="53.7328%" y="693" width="0.0321%" height="15" fill="rgb(251,47,18)" fg:x="7584430" fg:w="4534"/><text x="53.9828%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6,677 samples, 0.05%)</title><rect x="53.7177%" y="709" width="0.0473%" height="15" fill="rgb(242,102,42)" fg:x="7582305" fg:w="6677"/><text x="53.9677%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,852 samples, 0.01%)</title><rect x="53.7670%" y="709" width="0.0131%" height="15" fill="rgb(234,31,38)" fg:x="7589257" fg:w="1852"/><text x="54.0170%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::pointing_pair (224,740 samples, 1.59%)</title><rect x="52.1879%" y="725" width="1.5922%" height="15" fill="rgb(221,117,51)" fg:x="7366375" fg:w="224740"/><text x="52.4379%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6,449 samples, 0.05%)</title><rect x="54.4441%" y="677" width="0.0457%" height="15" fill="rgb(212,20,18)" fg:x="7684838" fg:w="6449"/><text x="54.6941%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (89,549 samples, 0.63%)</title><rect x="53.9158%" y="693" width="0.6344%" height="15" fill="rgb(245,133,36)" fg:x="7610265" fg:w="89549"/><text x="54.1658%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,527 samples, 0.06%)</title><rect x="54.4898%" y="677" width="0.0604%" height="15" fill="rgb(212,6,19)" fg:x="7691287" fg:w="8527"/><text x="54.7398%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106,951 samples, 0.76%)</title><rect x="53.8031%" y="709" width="0.7577%" height="15" fill="rgb(218,1,36)" fg:x="7594356" fg:w="106951"/><text x="54.0531%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,493 samples, 0.01%)</title><rect x="54.5502%" y="693" width="0.0106%" height="15" fill="rgb(246,84,54)" fg:x="7699814" fg:w="1493"/><text x="54.8002%" y="703.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,371 samples, 0.02%)</title><rect x="54.5658%" y="709" width="0.0168%" height="15" fill="rgb(242,110,6)" fg:x="7702021" fg:w="2371"/><text x="54.8158%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1,576 samples, 0.01%)</title><rect x="54.6057%" y="645" width="0.0112%" height="15" fill="rgb(214,47,5)" fg:x="7707649" fg:w="1576"/><text x="54.8557%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3,493 samples, 0.02%)</title><rect x="54.5922%" y="677" width="0.0247%" height="15" fill="rgb(218,159,25)" fg:x="7705736" fg:w="3493"/><text x="54.8422%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,760 samples, 0.02%)</title><rect x="54.5974%" y="661" width="0.0196%" height="15" fill="rgb(215,211,28)" fg:x="7706469" fg:w="2760"/><text x="54.8474%" y="671.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,146 samples, 0.03%)</title><rect x="54.5880%" y="693" width="0.0294%" height="15" fill="rgb(238,59,32)" fg:x="7705150" fg:w="4146"/><text x="54.8380%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (6,880 samples, 0.05%)</title><rect x="54.5826%" y="709" width="0.0487%" height="15" fill="rgb(226,82,3)" fg:x="7704392" fg:w="6880"/><text x="54.8326%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,819 samples, 0.01%)</title><rect x="54.6365%" y="709" width="0.0129%" height="15" fill="rgb(240,164,32)" fg:x="7712000" fg:w="1819"/><text x="54.8865%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,956 samples, 0.02%)</title><rect x="54.6616%" y="693" width="0.0209%" height="15" fill="rgb(232,46,7)" fg:x="7715531" fg:w="2956"/><text x="54.9116%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4,400 samples, 0.03%)</title><rect x="54.6514%" y="709" width="0.0312%" height="15" fill="rgb(229,129,53)" fg:x="7714097" fg:w="4400"/><text x="54.9014%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::pointing_triple (128,675 samples, 0.91%)</title><rect x="53.7801%" y="725" width="0.9116%" height="15" fill="rgb(234,188,29)" fg:x="7591115" fg:w="128675"/><text x="54.0301%" y="735.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9,515 samples, 0.07%)</title><rect x="56.5525%" y="677" width="0.0674%" height="15" fill="rgb(246,141,4)" fg:x="7982436" fg:w="9515"/><text x="56.8025%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (132,533 samples, 0.94%)</title><rect x="55.7536%" y="693" width="0.9389%" height="15" fill="rgb(229,23,39)" fg:x="7869667" fg:w="132533"/><text x="56.0036%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,249 samples, 0.07%)</title><rect x="56.6199%" y="677" width="0.0726%" height="15" fill="rgb(206,12,3)" fg:x="7991951" fg:w="10249"/><text x="56.8699%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163,289 samples, 1.16%)</title><rect x="55.5522%" y="709" width="1.1568%" height="15" fill="rgb(252,226,20)" fg:x="7841248" fg:w="163289"/><text x="55.8022%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,337 samples, 0.02%)</title><rect x="56.6925%" y="693" width="0.0166%" height="15" fill="rgb(216,123,35)" fg:x="8002200" fg:w="2337"/><text x="56.9425%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,264 samples, 0.02%)</title><rect x="56.7696%" y="613" width="0.0160%" height="15" fill="rgb(212,68,40)" fg:x="8013087" fg:w="2264"/><text x="57.0196%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5,528 samples, 0.04%)</title><rect x="56.7646%" y="629" width="0.0392%" height="15" fill="rgb(254,125,32)" fg:x="8012370" fg:w="5528"/><text x="57.0146%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7,891 samples, 0.06%)</title><rect x="56.7522%" y="645" width="0.0559%" height="15" fill="rgb(253,97,22)" fg:x="8010620" fg:w="7891"/><text x="57.0022%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8,929 samples, 0.06%)</title><rect x="56.7505%" y="661" width="0.0633%" height="15" fill="rgb(241,101,14)" fg:x="8010393" fg:w="8929"/><text x="57.0005%" y="671.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (9,587 samples, 0.07%)</title><rect x="56.7488%" y="677" width="0.0679%" height="15" fill="rgb(238,103,29)" fg:x="8010150" fg:w="9587"/><text x="56.9988%" y="687.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10,064 samples, 0.07%)</title><rect x="56.7465%" y="693" width="0.0713%" height="15" fill="rgb(233,195,47)" fg:x="8009821" fg:w="10064"/><text x="56.9965%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (148,615 samples, 1.05%)</title><rect x="56.8523%" y="629" width="1.0529%" height="15" fill="rgb(246,218,30)" fg:x="8024750" fg:w="148615"/><text x="57.1023%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (3,662 samples, 0.03%)</title><rect x="57.9182%" y="613" width="0.0259%" height="15" fill="rgb(219,145,47)" fg:x="8175210" fg:w="3662"/><text x="58.1682%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (7,231 samples, 0.05%)</title><rect x="57.9447%" y="597" width="0.0512%" height="15" fill="rgb(243,12,26)" fg:x="8178951" fg:w="7231"/><text x="58.1947%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (7,343 samples, 0.05%)</title><rect x="57.9442%" y="613" width="0.0520%" height="15" fill="rgb(214,87,16)" fg:x="8178872" fg:w="7343"/><text x="58.1942%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (13,579 samples, 0.10%)</title><rect x="57.9053%" y="629" width="0.0962%" height="15" fill="rgb(208,99,42)" fg:x="8173387" fg:w="13579"/><text x="58.1553%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::latch::LockLatch::wait_and_reset (164,102 samples, 1.16%)</title><rect x="56.8408%" y="645" width="1.1626%" height="15" fill="rgb(253,99,2)" fg:x="8023139" fg:w="164102"/><text x="57.0908%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::inject (1,619 samples, 0.01%)</title><rect x="58.0034%" y="645" width="0.0115%" height="15" fill="rgb(220,168,23)" fg:x="8187241" fg:w="1619"/><text x="58.2534%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (1,441 samples, 0.01%)</title><rect x="58.0150%" y="629" width="0.0102%" height="15" fill="rgb(242,38,24)" fg:x="8188869" fg:w="1441"/><text x="58.2650%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (1,456 samples, 0.01%)</title><rect x="58.0149%" y="645" width="0.0103%" height="15" fill="rgb(225,182,9)" fg:x="8188860" fg:w="1456"/><text x="58.2649%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::in_worker_cold (169,160 samples, 1.20%)</title><rect x="56.8312%" y="661" width="1.1984%" height="15" fill="rgb(243,178,37)" fg:x="8021784" fg:w="169160"/><text x="57.0812%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (171,354 samples, 1.21%)</title><rect x="56.8228%" y="677" width="1.2140%" height="15" fill="rgb(232,139,19)" fg:x="8020586" fg:w="171354"/><text x="57.0728%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,008 samples, 0.01%)</title><rect x="58.0553%" y="661" width="0.0142%" height="15" fill="rgb(225,201,24)" fg:x="8194555" fg:w="2008"/><text x="58.3053%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,234 samples, 0.02%)</title><rect x="58.0537%" y="677" width="0.0158%" height="15" fill="rgb(221,47,46)" fg:x="8194333" fg:w="2234"/><text x="58.3037%" y="687.50"></text></g><g><title>hai606i_sudoku`graph_builder::input::edgelist::Edges::degrees (176,530 samples, 1.25%)</title><rect x="56.8191%" y="693" width="1.2506%" height="15" fill="rgb(249,23,13)" fg:x="8020069" fg:w="176530"/><text x="57.0691%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (229,334 samples, 1.62%)</title><rect x="58.1159%" y="645" width="1.6247%" height="15" fill="rgb(219,9,5)" fg:x="8203114" fg:w="229334"/><text x="58.3659%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (5,536 samples, 0.04%)</title><rect x="59.7596%" y="629" width="0.0392%" height="15" fill="rgb(254,171,16)" fg:x="8435119" fg:w="5536"/><text x="60.0096%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11,251 samples, 0.08%)</title><rect x="59.7995%" y="613" width="0.0797%" height="15" fill="rgb(230,171,20)" fg:x="8440754" fg:w="11251"/><text x="60.0495%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (11,431 samples, 0.08%)</title><rect x="59.7988%" y="629" width="0.0810%" height="15" fill="rgb(210,71,41)" fg:x="8440655" fg:w="11431"/><text x="60.0488%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (20,756 samples, 0.15%)</title><rect x="59.7409%" y="645" width="0.1470%" height="15" fill="rgb(206,173,20)" fg:x="8432488" fg:w="20756"/><text x="59.9909%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon_core::latch::LockLatch::wait_and_reset (253,206 samples, 1.79%)</title><rect x="58.0971%" y="661" width="1.7939%" height="15" fill="rgb(233,88,34)" fg:x="8200459" fg:w="253206"/><text x="58.3471%" y="671.50">h..</text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::inject (2,355 samples, 0.02%)</title><rect x="59.8910%" y="661" width="0.0167%" height="15" fill="rgb(223,209,46)" fg:x="8453665" fg:w="2355"/><text x="60.1410%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (2,005 samples, 0.01%)</title><rect x="59.9077%" y="645" width="0.0142%" height="15" fill="rgb(250,43,18)" fg:x="8456033" fg:w="2005"/><text x="60.1577%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (2,027 samples, 0.01%)</title><rect x="59.9076%" y="661" width="0.0144%" height="15" fill="rgb(208,13,10)" fg:x="8456020" fg:w="2027"/><text x="60.1576%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::in_worker_cold (260,775 samples, 1.85%)</title><rect x="58.0818%" y="677" width="1.8475%" height="15" fill="rgb(212,200,36)" fg:x="8198297" fg:w="260775"/><text x="58.3318%" y="687.50">h..</text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (263,610 samples, 1.87%)</title><rect x="58.0697%" y="693" width="1.8676%" height="15" fill="rgb(225,90,30)" fg:x="8196599" fg:w="263610"/><text x="58.3197%" y="703.50">h..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6,771 samples, 0.05%)</title><rect x="59.9628%" y="661" width="0.0480%" height="15" fill="rgb(236,182,39)" fg:x="8463807" fg:w="6771"/><text x="60.2128%" y="671.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (9,565 samples, 0.07%)</title><rect x="59.9447%" y="677" width="0.0678%" height="15" fill="rgb(212,144,35)" fg:x="8461254" fg:w="9565"/><text x="60.1947%" y="687.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::time::Timespec::now (10,136 samples, 0.07%)</title><rect x="59.9417%" y="693" width="0.0718%" height="15" fill="rgb(228,63,44)" fg:x="8460825" fg:w="10136"/><text x="60.1917%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,528 samples, 0.01%)</title><rect x="60.0523%" y="629" width="0.0108%" height="15" fill="rgb(228,109,6)" fg:x="8476435" fg:w="1528"/><text x="60.3023%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,709 samples, 0.01%)</title><rect x="60.0510%" y="645" width="0.0121%" height="15" fill="rgb(238,117,24)" fg:x="8476259" fg:w="1709"/><text x="60.3010%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3,256 samples, 0.02%)</title><rect x="60.0417%" y="661" width="0.0231%" height="15" fill="rgb(242,26,26)" fg:x="8474939" fg:w="3256"/><text x="60.2917%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4,838 samples, 0.03%)</title><rect x="60.0338%" y="677" width="0.0343%" height="15" fill="rgb(221,92,48)" fg:x="8473830" fg:w="4838"/><text x="60.2838%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6,254 samples, 0.04%)</title><rect x="60.0319%" y="693" width="0.0443%" height="15" fill="rgb(209,209,32)" fg:x="8473556" fg:w="6254"/><text x="60.2819%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;graph_builder::graph::csr::UndirectedCsrGraph&lt;NI,(),EV&gt; as core::convert::From&lt;(E,graph_builder::graph::csr::CsrLayout)&gt;&gt;::from (479,318 samples, 3.40%)</title><rect x="56.7099%" y="709" width="3.3958%" height="15" fill="rgb(221,70,22)" fg:x="8004654" fg:w="479318"/><text x="56.9599%" y="719.50">hai..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1,988 samples, 0.01%)</title><rect x="60.1073%" y="677" width="0.0141%" height="15" fill="rgb(248,145,5)" fg:x="8484208" fg:w="1988"/><text x="60.3573%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2,269 samples, 0.02%)</title><rect x="60.1067%" y="693" width="0.0161%" height="15" fill="rgb(226,116,26)" fg:x="8484123" fg:w="2269"/><text x="60.3567%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;graph_builder::input::edgelist::EdgeList&lt;NI,()&gt; as core::convert::From&lt;graph_builder::input::edgelist::EdgeIterator&lt;NI,I&gt;&gt;&gt;::from (2,662 samples, 0.02%)</title><rect x="60.1057%" y="709" width="0.0189%" height="15" fill="rgb(244,5,17)" fg:x="8483972" fg:w="2662"/><text x="60.3557%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4,986 samples, 0.04%)</title><rect x="60.2760%" y="645" width="0.0353%" height="15" fill="rgb(252,159,33)" fg:x="8508018" fg:w="4986"/><text x="60.5260%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9,526 samples, 0.07%)</title><rect x="60.3220%" y="629" width="0.0675%" height="15" fill="rgb(206,71,0)" fg:x="8514508" fg:w="9526"/><text x="60.5720%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7,012 samples, 0.05%)</title><rect x="60.3895%" y="629" width="0.0497%" height="15" fill="rgb(233,118,54)" fg:x="8524034" fg:w="7012"/><text x="60.6395%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,039 samples, 0.01%)</title><rect x="60.4408%" y="613" width="0.0144%" height="15" fill="rgb(234,83,48)" fg:x="8531282" fg:w="2039"/><text x="60.6908%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,280 samples, 0.02%)</title><rect x="60.4392%" y="629" width="0.0162%" height="15" fill="rgb(228,3,54)" fg:x="8531046" fg:w="2280"/><text x="60.6892%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (21,927 samples, 0.16%)</title><rect x="60.3114%" y="645" width="0.1553%" height="15" fill="rgb(226,155,13)" fg:x="8513004" fg:w="21927"/><text x="60.5614%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,500 samples, 0.01%)</title><rect x="60.4561%" y="629" width="0.0106%" height="15" fill="rgb(241,28,37)" fg:x="8533431" fg:w="1500"/><text x="60.7061%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4,246 samples, 0.03%)</title><rect x="60.4682%" y="645" width="0.0301%" height="15" fill="rgb(233,93,10)" fg:x="8535144" fg:w="4246"/><text x="60.7182%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (37,529 samples, 0.27%)</title><rect x="60.2546%" y="661" width="0.2659%" height="15" fill="rgb(225,113,19)" fg:x="8504997" fg:w="37529"/><text x="60.5046%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3,079 samples, 0.02%)</title><rect x="60.4987%" y="645" width="0.0218%" height="15" fill="rgb(241,2,18)" fg:x="8539447" fg:w="3079"/><text x="60.7487%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (41,533 samples, 0.29%)</title><rect x="60.2392%" y="677" width="0.2942%" height="15" fill="rgb(228,207,21)" fg:x="8502821" fg:w="41533"/><text x="60.4892%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14,154 samples, 0.10%)</title><rect x="60.5335%" y="677" width="0.1003%" height="15" fill="rgb(213,211,35)" fg:x="8544354" fg:w="14154"/><text x="60.7835%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4,772 samples, 0.03%)</title><rect x="60.6337%" y="677" width="0.0338%" height="15" fill="rgb(209,83,10)" fg:x="8558508" fg:w="4772"/><text x="60.8837%" y="687.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (63,513 samples, 0.45%)</title><rect x="60.2184%" y="693" width="0.4500%" height="15" fill="rgb(209,164,1)" fg:x="8499889" fg:w="63513"/><text x="60.4684%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5,215 samples, 0.04%)</title><rect x="60.6684%" y="693" width="0.0369%" height="15" fill="rgb(213,184,43)" fg:x="8563402" fg:w="5215"/><text x="60.9184%" y="703.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (81,648 samples, 0.58%)</title><rect x="60.1385%" y="709" width="0.5784%" height="15" fill="rgb(231,61,34)" fg:x="8488612" fg:w="81648"/><text x="60.3885%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10,650 samples, 0.08%)</title><rect x="61.0334%" y="645" width="0.0755%" height="15" fill="rgb(235,75,3)" fg:x="8614923" fg:w="10650"/><text x="61.2834%" y="655.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (58,056 samples, 0.41%)</title><rect x="60.8045%" y="661" width="0.4113%" height="15" fill="rgb(220,106,47)" fg:x="8582613" fg:w="58056"/><text x="61.0545%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (15,096 samples, 0.11%)</title><rect x="61.1089%" y="645" width="0.1069%" height="15" fill="rgb(210,196,33)" fg:x="8625573" fg:w="15096"/><text x="61.3589%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10,866 samples, 0.08%)</title><rect x="61.2476%" y="645" width="0.0770%" height="15" fill="rgb(229,154,42)" fg:x="8645162" fg:w="10866"/><text x="61.4976%" y="655.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15,365 samples, 0.11%)</title><rect x="61.2158%" y="661" width="0.1089%" height="15" fill="rgb(228,114,26)" fg:x="8640669" fg:w="15365"/><text x="61.4658%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,171 samples, 0.02%)</title><rect x="61.3247%" y="661" width="0.0154%" height="15" fill="rgb(208,144,1)" fg:x="8656034" fg:w="2171"/><text x="61.5747%" y="671.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (83,818 samples, 0.59%)</title><rect x="60.7628%" y="677" width="0.5938%" height="15" fill="rgb(239,112,37)" fg:x="8576726" fg:w="83818"/><text x="61.0128%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,895 samples, 0.01%)</title><rect x="61.3432%" y="661" width="0.0134%" height="15" fill="rgb(210,96,50)" fg:x="8658649" fg:w="1895"/><text x="61.5932%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,013 samples, 0.02%)</title><rect x="61.3572%" y="677" width="0.0213%" height="15" fill="rgb(222,178,2)" fg:x="8660620" fg:w="3013"/><text x="61.6072%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9,532 samples, 0.07%)</title><rect x="61.3856%" y="677" width="0.0675%" height="15" fill="rgb(226,74,18)" fg:x="8664629" fg:w="9532"/><text x="61.6356%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7,722 samples, 0.05%)</title><rect x="61.4619%" y="677" width="0.0547%" height="15" fill="rgb(225,67,54)" fg:x="8675400" fg:w="7722"/><text x="61.7119%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (113,371 samples, 0.80%)</title><rect x="60.7284%" y="693" width="0.8032%" height="15" fill="rgb(251,92,32)" fg:x="8571872" fg:w="113371"/><text x="60.9784%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,910 samples, 0.01%)</title><rect x="61.5181%" y="677" width="0.0135%" height="15" fill="rgb(228,149,22)" fg:x="8683333" fg:w="1910"/><text x="61.7681%" y="687.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2,821 samples, 0.02%)</title><rect x="61.5444%" y="693" width="0.0200%" height="15" fill="rgb(243,54,13)" fg:x="8687053" fg:w="2821"/><text x="61.7944%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_free (2,197 samples, 0.02%)</title><rect x="61.5644%" y="693" width="0.0156%" height="15" fill="rgb(243,180,28)" fg:x="8689874" fg:w="2197"/><text x="61.8144%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,497 samples, 0.02%)</title><rect x="61.5800%" y="693" width="0.0177%" height="15" fill="rgb(208,167,24)" fg:x="8692071" fg:w="2497"/><text x="61.8300%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1,415 samples, 0.01%)</title><rect x="61.6060%" y="677" width="0.0100%" height="15" fill="rgb(245,73,45)" fg:x="8695740" fg:w="1415"/><text x="61.8560%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,882 samples, 0.01%)</title><rect x="61.6040%" y="693" width="0.0133%" height="15" fill="rgb(237,203,48)" fg:x="8695460" fg:w="1882"/><text x="61.8540%" y="703.50"></text></g><g><title>hai606i_sudoku`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (129,930 samples, 0.92%)</title><rect x="60.7261%" y="709" width="0.9205%" height="15" fill="rgb(211,197,16)" fg:x="8571549" fg:w="129930"/><text x="60.9761%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4,119 samples, 0.03%)</title><rect x="61.6174%" y="693" width="0.0292%" height="15" fill="rgb(243,99,51)" fg:x="8697360" fg:w="4119"/><text x="61.8674%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,071 samples, 0.01%)</title><rect x="61.6466%" y="709" width="0.0147%" height="15" fill="rgb(215,123,29)" fg:x="8701479" fg:w="2071"/><text x="61.8966%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::FnOnce::call_once (3,062 samples, 0.02%)</title><rect x="61.6613%" y="709" width="0.0217%" height="15" fill="rgb(239,186,37)" fg:x="8703550" fg:w="3062"/><text x="61.9113%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,304 samples, 0.02%)</title><rect x="61.6830%" y="709" width="0.0234%" height="15" fill="rgb(252,136,39)" fg:x="8706612" fg:w="3304"/><text x="61.9330%" y="719.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::quicksort::quicksort (1,679 samples, 0.01%)</title><rect x="61.7901%" y="661" width="0.0119%" height="15" fill="rgb(223,213,32)" fg:x="8721727" fg:w="1679"/><text x="62.0401%" y="671.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::quicksort::quicksort (11,663 samples, 0.08%)</title><rect x="61.7202%" y="677" width="0.0826%" height="15" fill="rgb(233,115,5)" fg:x="8711866" fg:w="11663"/><text x="61.9702%" y="687.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::drift::sort (13,650 samples, 0.10%)</title><rect x="61.7076%" y="693" width="0.0967%" height="15" fill="rgb(207,226,44)" fg:x="8710092" fg:w="13650"/><text x="61.9576%" y="703.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::driftsort_main (14,096 samples, 0.10%)</title><rect x="61.7069%" y="709" width="0.0999%" height="15" fill="rgb(208,126,0)" fg:x="8709984" fg:w="14096"/><text x="61.9569%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,037 samples, 0.01%)</title><rect x="61.8383%" y="677" width="0.0144%" height="15" fill="rgb(244,66,21)" fg:x="8728529" fg:w="2037"/><text x="62.0883%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,233 samples, 0.02%)</title><rect x="61.8369%" y="693" width="0.0158%" height="15" fill="rgb(222,97,12)" fg:x="8728336" fg:w="2233"/><text x="62.0869%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (6,486 samples, 0.05%)</title><rect x="61.8071%" y="709" width="0.0460%" height="15" fill="rgb(219,213,19)" fg:x="8724127" fg:w="6486"/><text x="62.0571%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2,285 samples, 0.02%)</title><rect x="61.9461%" y="661" width="0.0162%" height="15" fill="rgb(252,169,30)" fg:x="8743748" fg:w="2285"/><text x="62.1961%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4,916 samples, 0.03%)</title><rect x="62.0387%" y="645" width="0.0348%" height="15" fill="rgb(206,32,51)" fg:x="8756819" fg:w="4916"/><text x="62.2887%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1,987 samples, 0.01%)</title><rect x="62.1759%" y="629" width="0.0141%" height="15" fill="rgb(250,172,42)" fg:x="8776186" fg:w="1987"/><text x="62.4259%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17,938 samples, 0.13%)</title><rect x="62.0737%" y="645" width="0.1271%" height="15" fill="rgb(209,34,43)" fg:x="8761761" fg:w="17938"/><text x="62.3237%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,526 samples, 0.01%)</title><rect x="62.1900%" y="629" width="0.0108%" height="15" fill="rgb(223,11,35)" fg:x="8778173" fg:w="1526"/><text x="62.4400%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30,984 samples, 0.22%)</title><rect x="61.9815%" y="661" width="0.2195%" height="15" fill="rgb(251,219,26)" fg:x="8748740" fg:w="30984"/><text x="62.2315%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38,922 samples, 0.28%)</title><rect x="61.9253%" y="677" width="0.2757%" height="15" fill="rgb(231,119,3)" fg:x="8740815" fg:w="38922"/><text x="62.1753%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46,655 samples, 0.33%)</title><rect x="61.8793%" y="693" width="0.3305%" height="15" fill="rgb(216,97,11)" fg:x="8734318" fg:w="46655"/><text x="62.1293%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,777 samples, 0.01%)</title><rect x="62.2290%" y="693" width="0.0126%" height="15" fill="rgb(223,59,9)" fg:x="8783679" fg:w="1777"/><text x="62.4790%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,586 samples, 0.03%)</title><rect x="62.2416%" y="693" width="0.0254%" height="15" fill="rgb(233,93,31)" fg:x="8785456" fg:w="3586"/><text x="62.4916%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (70,809 samples, 0.50%)</title><rect x="61.8530%" y="709" width="0.5017%" height="15" fill="rgb(239,81,33)" fg:x="8730613" fg:w="70809"/><text x="62.1030%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10,226 samples, 0.07%)</title><rect x="62.2822%" y="693" width="0.0724%" height="15" fill="rgb(213,120,34)" fg:x="8791196" fg:w="10226"/><text x="62.5322%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10,946 samples, 0.08%)</title><rect x="62.4882%" y="693" width="0.0775%" height="15" fill="rgb(243,49,53)" fg:x="8820269" fg:w="10946"/><text x="62.7382%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,161 samples, 0.06%)</title><rect x="62.5763%" y="693" width="0.0578%" height="15" fill="rgb(247,216,33)" fg:x="8832709" fg:w="8161"/><text x="62.8263%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,645 samples, 0.01%)</title><rect x="62.7430%" y="677" width="0.0117%" height="15" fill="rgb(226,26,14)" fg:x="8856233" fg:w="1645"/><text x="62.9930%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14,077 samples, 0.10%)</title><rect x="62.7616%" y="677" width="0.0997%" height="15" fill="rgb(215,49,53)" fg:x="8858852" fg:w="14077"/><text x="63.0116%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (32,353 samples, 0.23%)</title><rect x="62.6342%" y="693" width="0.2292%" height="15" fill="rgb(245,162,40)" fg:x="8840870" fg:w="32353"/><text x="62.8842%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,584 samples, 0.03%)</title><rect x="62.8655%" y="693" width="0.0254%" height="15" fill="rgb(229,68,17)" fg:x="8873519" fg:w="3584"/><text x="63.1155%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (79,687 samples, 0.56%)</title><rect x="62.3547%" y="709" width="0.5646%" height="15" fill="rgb(213,182,10)" fg:x="8801422" fg:w="79687"/><text x="62.6047%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3,476 samples, 0.02%)</title><rect x="62.8946%" y="693" width="0.0246%" height="15" fill="rgb(245,125,30)" fg:x="8877633" fg:w="3476"/><text x="63.1446%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,475 samples, 0.02%)</title><rect x="62.9833%" y="693" width="0.0175%" height="15" fill="rgb(232,202,2)" fg:x="8890146" fg:w="2475"/><text x="63.2333%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,553 samples, 0.01%)</title><rect x="63.0008%" y="693" width="0.0110%" height="15" fill="rgb(237,140,51)" fg:x="8892621" fg:w="1553"/><text x="63.2508%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,894 samples, 0.01%)</title><rect x="63.0575%" y="661" width="0.0134%" height="15" fill="rgb(236,157,25)" fg:x="8900629" fg:w="1894"/><text x="63.3075%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6,514 samples, 0.05%)</title><rect x="63.0409%" y="677" width="0.0461%" height="15" fill="rgb(219,209,0)" fg:x="8898276" fg:w="6514"/><text x="63.2909%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11,102 samples, 0.08%)</title><rect x="63.0118%" y="693" width="0.0787%" height="15" fill="rgb(240,116,54)" fg:x="8894174" fg:w="11102"/><text x="63.2618%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (24,273 samples, 0.17%)</title><rect x="62.9192%" y="709" width="0.1720%" height="15" fill="rgb(216,10,36)" fg:x="8881109" fg:w="24273"/><text x="63.1692%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,185 samples, 0.02%)</title><rect x="63.0912%" y="709" width="0.0155%" height="15" fill="rgb(222,72,44)" fg:x="8905382" fg:w="2185"/><text x="63.3412%" y="719.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3,522 samples, 0.02%)</title><rect x="63.1115%" y="709" width="0.0250%" height="15" fill="rgb(232,159,9)" fg:x="8908250" fg:w="3522"/><text x="63.3615%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1,726 samples, 0.01%)</title><rect x="63.1393%" y="709" width="0.0122%" height="15" fill="rgb(210,39,32)" fg:x="8912166" fg:w="1726"/><text x="63.3893%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (74,372 samples, 0.53%)</title><rect x="63.1644%" y="709" width="0.5269%" height="15" fill="rgb(216,194,45)" fg:x="8915713" fg:w="74372"/><text x="63.4144%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3,733 samples, 0.03%)</title><rect x="63.6922%" y="709" width="0.0264%" height="15" fill="rgb(218,18,35)" fg:x="8990218" fg:w="3733"/><text x="63.9422%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1,980 samples, 0.01%)</title><rect x="63.7189%" y="709" width="0.0140%" height="15" fill="rgb(207,83,51)" fg:x="8993976" fg:w="1980"/><text x="63.9689%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2,945 samples, 0.02%)</title><rect x="63.8192%" y="693" width="0.0209%" height="15" fill="rgb(225,63,43)" fg:x="9008146" fg:w="2945"/><text x="64.0692%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7,222 samples, 0.05%)</title><rect x="63.9655%" y="677" width="0.0512%" height="15" fill="rgb(207,57,36)" fg:x="9028791" fg:w="7222"/><text x="64.2155%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32,972 samples, 0.23%)</title><rect x="63.8448%" y="693" width="0.2336%" height="15" fill="rgb(216,99,33)" fg:x="9011750" fg:w="32972"/><text x="64.0948%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8,709 samples, 0.06%)</title><rect x="64.0167%" y="677" width="0.0617%" height="15" fill="rgb(225,42,16)" fg:x="9036013" fg:w="8709"/><text x="64.2667%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48,867 samples, 0.35%)</title><rect x="63.7329%" y="709" width="0.3462%" height="15" fill="rgb(220,201,45)" fg:x="8995956" fg:w="48867"/><text x="63.9829%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (29,388 samples, 0.21%)</title><rect x="64.0795%" y="709" width="0.2082%" height="15" fill="rgb(225,33,4)" fg:x="9044881" fg:w="29388"/><text x="64.3295%" y="719.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1,683 samples, 0.01%)</title><rect x="64.2990%" y="709" width="0.0119%" height="15" fill="rgb(224,33,50)" fg:x="9075861" fg:w="1683"/><text x="64.5490%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (19,773 samples, 0.14%)</title><rect x="64.3171%" y="709" width="0.1401%" height="15" fill="rgb(246,198,51)" fg:x="9078414" fg:w="19773"/><text x="64.5671%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::simple_coloring (1,378,443 samples, 9.77%)</title><rect x="54.6917%" y="725" width="9.7657%" height="15" fill="rgb(205,22,4)" fg:x="7719790" fg:w="1378443"/><text x="54.9417%" y="735.50">hai606i_sudoku..</text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,603 samples, 0.01%)</title><rect x="64.8466%" y="693" width="0.0114%" height="15" fill="rgb(206,3,8)" fg:x="9153153" fg:w="1603"/><text x="65.0966%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28,579 samples, 0.20%)</title><rect x="66.5690%" y="677" width="0.2025%" height="15" fill="rgb(251,23,15)" fg:x="9396275" fg:w="28579"/><text x="66.8190%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (307,065 samples, 2.18%)</title><rect x="64.8654%" y="693" width="2.1754%" height="15" fill="rgb(252,88,28)" fg:x="9155810" fg:w="307065"/><text x="65.1154%" y="703.50">h..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (38,021 samples, 0.27%)</title><rect x="66.7715%" y="677" width="0.2694%" height="15" fill="rgb(212,127,14)" fg:x="9424854" fg:w="38021"/><text x="67.0215%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (352,420 samples, 2.50%)</title><rect x="64.6008%" y="709" width="2.4968%" height="15" fill="rgb(247,145,37)" fg:x="9118460" fg:w="352420"/><text x="64.8508%" y="719.50">ha..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8,005 samples, 0.06%)</title><rect x="67.0408%" y="693" width="0.0567%" height="15" fill="rgb(209,117,53)" fg:x="9462875" fg:w="8005"/><text x="67.2908%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,183 samples, 0.02%)</title><rect x="67.1129%" y="709" width="0.0155%" height="15" fill="rgb(212,90,42)" fg:x="9473051" fg:w="2183"/><text x="67.3629%" y="719.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,639 samples, 0.11%)</title><rect x="67.1284%" y="709" width="0.1108%" height="15" fill="rgb(218,164,37)" fg:x="9475234" fg:w="15639"/><text x="67.3784%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,567 samples, 0.01%)</title><rect x="67.2981%" y="693" width="0.0111%" height="15" fill="rgb(246,65,34)" fg:x="9499185" fg:w="1567"/><text x="67.5481%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,775 samples, 0.01%)</title><rect x="67.3092%" y="693" width="0.0126%" height="15" fill="rgb(231,100,33)" fg:x="9500752" fg:w="1775"/><text x="67.5592%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2,985 samples, 0.02%)</title><rect x="67.3415%" y="661" width="0.0211%" height="15" fill="rgb(228,126,14)" fg:x="9505321" fg:w="2985"/><text x="67.5915%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5,120 samples, 0.04%)</title><rect x="67.3264%" y="677" width="0.0363%" height="15" fill="rgb(215,173,21)" fg:x="9503190" fg:w="5120"/><text x="67.5764%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5,732 samples, 0.04%)</title><rect x="67.3221%" y="693" width="0.0406%" height="15" fill="rgb(210,6,40)" fg:x="9502582" fg:w="5732"/><text x="67.5721%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (17,516 samples, 0.12%)</title><rect x="67.2392%" y="709" width="0.1241%" height="15" fill="rgb(212,48,18)" fg:x="9490873" fg:w="17516"/><text x="67.4892%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7,489 samples, 0.05%)</title><rect x="67.5649%" y="693" width="0.0531%" height="15" fill="rgb(230,214,11)" fg:x="9536847" fg:w="7489"/><text x="67.8149%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,857 samples, 0.03%)</title><rect x="67.6179%" y="693" width="0.0344%" height="15" fill="rgb(254,105,39)" fg:x="9544336" fg:w="4857"/><text x="67.8679%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,599 samples, 0.02%)</title><rect x="67.6936%" y="677" width="0.0184%" height="15" fill="rgb(245,158,5)" fg:x="9555009" fg:w="2599"/><text x="67.9436%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,918 samples, 0.02%)</title><rect x="67.7135%" y="677" width="0.0207%" height="15" fill="rgb(249,208,11)" fg:x="9557819" fg:w="2918"/><text x="67.9635%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,584 samples, 0.03%)</title><rect x="67.7798%" y="661" width="0.0254%" height="15" fill="rgb(210,39,28)" fg:x="9567185" fg:w="3584"/><text x="68.0298%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,789 samples, 0.01%)</title><rect x="67.8052%" y="661" width="0.0127%" height="15" fill="rgb(211,56,53)" fg:x="9570769" fg:w="1789"/><text x="68.0552%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,563 samples, 0.01%)</title><rect x="67.8240%" y="661" width="0.0111%" height="15" fill="rgb(226,201,30)" fg:x="9573421" fg:w="1563"/><text x="68.0740%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15,010 samples, 0.11%)</title><rect x="67.7341%" y="677" width="0.1063%" height="15" fill="rgb(239,101,34)" fg:x="9560737" fg:w="15010"/><text x="67.9841%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27,826 samples, 0.20%)</title><rect x="67.6524%" y="693" width="0.1971%" height="15" fill="rgb(226,209,5)" fg:x="9549193" fg:w="27826"/><text x="67.9024%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (68,659 samples, 0.49%)</title><rect x="67.3648%" y="709" width="0.4864%" height="15" fill="rgb(250,105,47)" fg:x="9508598" fg:w="68659"/><text x="67.6148%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,722 samples, 0.02%)</title><rect x="67.8529%" y="709" width="0.0193%" height="15" fill="rgb(230,72,3)" fg:x="9577497" fg:w="2722"/><text x="68.1029%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10,757 samples, 0.08%)</title><rect x="67.8722%" y="709" width="0.0762%" height="15" fill="rgb(232,218,39)" fg:x="9580219" fg:w="10757"/><text x="68.1222%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,102 samples, 0.01%)</title><rect x="67.9620%" y="693" width="0.0149%" height="15" fill="rgb(248,166,6)" fg:x="9592899" fg:w="2102"/><text x="68.2120%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3,725 samples, 0.03%)</title><rect x="67.9505%" y="709" width="0.0264%" height="15" fill="rgb(247,89,20)" fg:x="9591282" fg:w="3725"/><text x="68.2005%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,775 samples, 0.01%)</title><rect x="67.9818%" y="709" width="0.0126%" height="15" fill="rgb(248,130,54)" fg:x="9595693" fg:w="1775"/><text x="68.2318%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,752 samples, 0.02%)</title><rect x="67.9944%" y="709" width="0.0195%" height="15" fill="rgb(234,196,4)" fg:x="9597468" fg:w="2752"/><text x="68.2444%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::skyscraper (501,988 samples, 3.56%)</title><rect x="64.4575%" y="725" width="3.5564%" height="15" fill="rgb(250,143,31)" fg:x="9098233" fg:w="501988"/><text x="64.7075%" y="735.50">hai6..</text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,716 samples, 0.01%)</title><rect x="68.4447%" y="677" width="0.0122%" height="15" fill="rgb(211,110,34)" fg:x="9661031" fg:w="1716"/><text x="68.6947%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,158 samples, 0.02%)</title><rect x="68.4568%" y="677" width="0.0153%" height="15" fill="rgb(215,124,48)" fg:x="9662748" fg:w="2158"/><text x="68.7068%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11,577 samples, 0.08%)</title><rect x="68.3909%" y="693" width="0.0820%" height="15" fill="rgb(216,46,13)" fg:x="9653440" fg:w="11577"/><text x="68.6409%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (9,267 samples, 0.07%)</title><rect x="68.4729%" y="693" width="0.0657%" height="15" fill="rgb(205,184,25)" fg:x="9665017" fg:w="9267"/><text x="68.7229%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,241 samples, 0.02%)</title><rect x="68.5227%" y="677" width="0.0159%" height="15" fill="rgb(228,1,10)" fg:x="9672043" fg:w="2241"/><text x="68.7727%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,034 samples, 0.16%)</title><rect x="68.3825%" y="709" width="0.1561%" height="15" fill="rgb(213,116,27)" fg:x="9652251" fg:w="22034"/><text x="68.6325%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (49,370 samples, 0.35%)</title><rect x="70.8064%" y="693" width="0.3498%" height="15" fill="rgb(241,95,50)" fg:x="9994396" fg:w="49370"/><text x="71.0564%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (67,506 samples, 0.48%)</title><rect x="71.1562%" y="693" width="0.4783%" height="15" fill="rgb(238,48,32)" fg:x="10043766" fg:w="67506"/><text x="71.4062%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14,274 samples, 0.10%)</title><rect x="71.8885%" y="677" width="0.1011%" height="15" fill="rgb(235,113,49)" fg:x="10147126" fg:w="14274"/><text x="72.1385%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (18,203 samples, 0.13%)</title><rect x="72.0071%" y="677" width="0.1290%" height="15" fill="rgb(205,127,43)" fg:x="10163875" fg:w="18203"/><text x="72.2571%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,501 samples, 0.01%)</title><rect x="72.2619%" y="661" width="0.0106%" height="15" fill="rgb(250,162,2)" fg:x="10199831" fg:w="1501"/><text x="72.5119%" y="671.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,595 samples, 0.02%)</title><rect x="72.2726%" y="661" width="0.0184%" height="15" fill="rgb(220,13,41)" fg:x="10201350" fg:w="2595"/><text x="72.5226%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,829 samples, 0.01%)</title><rect x="72.2914%" y="661" width="0.0130%" height="15" fill="rgb(249,221,25)" fg:x="10204006" fg:w="1829"/><text x="72.5414%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14,674 samples, 0.10%)</title><rect x="72.3044%" y="661" width="0.1040%" height="15" fill="rgb(215,208,19)" fg:x="10205835" fg:w="14674"/><text x="72.5544%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (38,826 samples, 0.28%)</title><rect x="72.1361%" y="677" width="0.2751%" height="15" fill="rgb(236,175,2)" fg:x="10182078" fg:w="38826"/><text x="72.3861%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5,454 samples, 0.04%)</title><rect x="72.4147%" y="677" width="0.0386%" height="15" fill="rgb(241,52,2)" fg:x="10221408" fg:w="5454"/><text x="72.6647%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (120,400 samples, 0.85%)</title><rect x="71.6345%" y="693" width="0.8530%" height="15" fill="rgb(248,140,14)" fg:x="10111272" fg:w="120400"/><text x="71.8845%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4,220 samples, 0.03%)</title><rect x="72.4576%" y="677" width="0.0299%" height="15" fill="rgb(253,22,42)" fg:x="10227452" fg:w="4220"/><text x="72.7076%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (559,149 samples, 3.96%)</title><rect x="68.5386%" y="709" width="3.9614%" height="15" fill="rgb(234,61,47)" fg:x="9674285" fg:w="559149"/><text x="68.7886%" y="719.50">hai6..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,762 samples, 0.01%)</title><rect x="72.4875%" y="693" width="0.0125%" height="15" fill="rgb(208,226,15)" fg:x="10231672" fg:w="1762"/><text x="72.7375%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,867 samples, 0.03%)</title><rect x="72.5069%" y="677" width="0.0274%" height="15" fill="rgb(217,221,4)" fg:x="10234417" fg:w="3867"/><text x="72.7569%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,261 samples, 0.06%)</title><rect x="72.5007%" y="693" width="0.0585%" height="15" fill="rgb(212,174,34)" fg:x="10233545" fg:w="8261"/><text x="72.7507%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,522 samples, 0.02%)</title><rect x="72.5343%" y="677" width="0.0250%" height="15" fill="rgb(253,83,4)" fg:x="10238284" fg:w="3522"/><text x="72.7843%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,564 samples, 0.01%)</title><rect x="72.5482%" y="661" width="0.0111%" height="15" fill="rgb(250,195,49)" fg:x="10240242" fg:w="1564"/><text x="72.7982%" y="671.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9,026 samples, 0.06%)</title><rect x="72.4999%" y="709" width="0.0639%" height="15" fill="rgb(241,192,25)" fg:x="10233434" fg:w="9026"/><text x="72.7499%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,639 samples, 0.03%)</title><rect x="72.5682%" y="709" width="0.0258%" height="15" fill="rgb(208,124,10)" fg:x="10243075" fg:w="3639"/><text x="72.8182%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,674 samples, 0.01%)</title><rect x="72.6139%" y="693" width="0.0119%" height="15" fill="rgb(222,33,0)" fg:x="10249523" fg:w="1674"/><text x="72.8639%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,522 samples, 0.01%)</title><rect x="72.6150%" y="677" width="0.0108%" height="15" fill="rgb(234,209,28)" fg:x="10249675" fg:w="1522"/><text x="72.8650%" y="687.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,510 samples, 0.03%)</title><rect x="72.5940%" y="709" width="0.0320%" height="15" fill="rgb(224,11,23)" fg:x="10246714" fg:w="4510"/><text x="72.8440%" y="719.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,859 samples, 0.03%)</title><rect x="72.6260%" y="709" width="0.0273%" height="15" fill="rgb(232,99,1)" fg:x="10251224" fg:w="3859"/><text x="72.8760%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18,025 samples, 0.13%)</title><rect x="72.6690%" y="709" width="0.1277%" height="15" fill="rgb(237,95,45)" fg:x="10257302" fg:w="18025"/><text x="72.9190%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::swordfish (681,669 samples, 4.83%)</title><rect x="68.0139%" y="725" width="4.8294%" height="15" fill="rgb(208,109,11)" fg:x="9600221" fg:w="681669"/><text x="68.2639%" y="735.50">hai606..</text></g><g><title>libsystem_platform.dylib`_platform_memset (3,979 samples, 0.03%)</title><rect x="72.8150%" y="709" width="0.0282%" height="15" fill="rgb(216,190,48)" fg:x="10277911" fg:w="3979"/><text x="73.0650%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,378 samples, 0.03%)</title><rect x="74.7286%" y="709" width="0.0310%" height="15" fill="rgb(251,171,36)" fg:x="10548016" fg:w="4378"/><text x="74.9786%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10,748 samples, 0.08%)</title><rect x="75.8021%" y="693" width="0.0761%" height="15" fill="rgb(230,62,22)" fg:x="10699535" fg:w="10748"/><text x="76.0521%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (17,228 samples, 0.12%)</title><rect x="75.8782%" y="693" width="0.1221%" height="15" fill="rgb(225,114,35)" fg:x="10710283" fg:w="17228"/><text x="76.1282%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9,132 samples, 0.06%)</title><rect x="76.1186%" y="677" width="0.0647%" height="15" fill="rgb(215,118,42)" fg:x="10744205" fg:w="9132"/><text x="76.3686%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (7,598 samples, 0.05%)</title><rect x="76.1901%" y="677" width="0.0538%" height="15" fill="rgb(243,119,21)" fg:x="10754302" fg:w="7598"/><text x="76.4401%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7,869 samples, 0.06%)</title><rect x="76.3259%" y="661" width="0.0557%" height="15" fill="rgb(252,177,53)" fg:x="10773468" fg:w="7869"/><text x="76.5759%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19,556 samples, 0.14%)</title><rect x="76.2439%" y="677" width="0.1385%" height="15" fill="rgb(237,209,29)" fg:x="10761900" fg:w="19556"/><text x="76.4939%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,433 samples, 0.02%)</title><rect x="76.3836%" y="677" width="0.0172%" height="15" fill="rgb(212,65,23)" fg:x="10781622" fg:w="2433"/><text x="76.6336%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (59,389 samples, 0.42%)</title><rect x="76.0003%" y="693" width="0.4207%" height="15" fill="rgb(230,222,46)" fg:x="10727511" fg:w="59389"/><text x="76.2503%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,522 samples, 0.02%)</title><rect x="76.4032%" y="677" width="0.0179%" height="15" fill="rgb(215,135,32)" fg:x="10784378" fg:w="2522"/><text x="76.6532%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (235,873 samples, 1.67%)</title><rect x="74.7596%" y="709" width="1.6711%" height="15" fill="rgb(246,101,22)" fg:x="10552394" fg:w="235873"/><text x="75.0096%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (30,253 samples, 0.21%)</title><rect x="76.4307%" y="709" width="0.2143%" height="15" fill="rgb(206,107,13)" fg:x="10788267" fg:w="30253"/><text x="76.6807%" y="719.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (3,485 samples, 0.02%)</title><rect x="76.6538%" y="709" width="0.0247%" height="15" fill="rgb(250,100,44)" fg:x="10819752" fg:w="3485"/><text x="76.9038%" y="719.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (2,094 samples, 0.01%)</title><rect x="76.6785%" y="709" width="0.0148%" height="15" fill="rgb(231,147,38)" fg:x="10823237" fg:w="2094"/><text x="76.9285%" y="719.50"></text></g><g><title>hai606i_sudoku`__rdl_dealloc (1,648 samples, 0.01%)</title><rect x="76.6933%" y="709" width="0.0117%" height="15" fill="rgb(229,8,40)" fg:x="10825331" fg:w="1648"/><text x="76.9433%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (25,000 samples, 0.18%)</title><rect x="76.7125%" y="709" width="0.1771%" height="15" fill="rgb(221,135,30)" fg:x="10828037" fg:w="25000"/><text x="76.9625%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (48,490 samples, 0.34%)</title><rect x="78.9394%" y="693" width="0.3435%" height="15" fill="rgb(249,193,18)" fg:x="11142376" fg:w="48490"/><text x="79.1894%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (44,963 samples, 0.32%)</title><rect x="79.2830%" y="693" width="0.3185%" height="15" fill="rgb(209,133,39)" fg:x="11190866" fg:w="44963"/><text x="79.5330%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,538 samples, 0.01%)</title><rect x="79.6015%" y="693" width="0.0109%" height="15" fill="rgb(232,100,14)" fg:x="11235829" fg:w="1538"/><text x="79.8515%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (7,524 samples, 0.05%)</title><rect x="79.6726%" y="677" width="0.0533%" height="15" fill="rgb(224,185,1)" fg:x="11245869" fg:w="7524"/><text x="79.9226%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3,152 samples, 0.02%)</title><rect x="79.7260%" y="677" width="0.0223%" height="15" fill="rgb(223,139,8)" fg:x="11253393" fg:w="3152"/><text x="79.9760%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2,103 samples, 0.01%)</title><rect x="79.9530%" y="661" width="0.0149%" height="15" fill="rgb(232,213,38)" fg:x="11285440" fg:w="2103"/><text x="80.2030%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (29,414 samples, 0.21%)</title><rect x="79.9679%" y="661" width="0.2084%" height="15" fill="rgb(207,94,22)" fg:x="11287543" fg:w="29414"/><text x="80.2179%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (7,017 samples, 0.05%)</title><rect x="80.6778%" y="645" width="0.0497%" height="15" fill="rgb(219,183,54)" fg:x="11387753" fg:w="7017"/><text x="80.9278%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (90,659 samples, 0.64%)</title><rect x="80.1768%" y="661" width="0.6423%" height="15" fill="rgb(216,185,54)" fg:x="11317025" fg:w="90659"/><text x="80.4268%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12,914 samples, 0.09%)</title><rect x="80.7276%" y="645" width="0.0915%" height="15" fill="rgb(254,217,39)" fg:x="11394770" fg:w="12914"/><text x="80.9776%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (151,237 samples, 1.07%)</title><rect x="79.7483%" y="677" width="1.0715%" height="15" fill="rgb(240,178,23)" fg:x="11256545" fg:w="151237"/><text x="79.9983%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (170,458 samples, 1.21%)</title><rect x="79.6124%" y="693" width="1.2076%" height="15" fill="rgb(218,11,47)" fg:x="11237367" fg:w="170458"/><text x="79.8624%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (558,017 samples, 3.95%)</title><rect x="76.8896%" y="709" width="3.9533%" height="15" fill="rgb(218,51,51)" fg:x="10853037" fg:w="558017"/><text x="77.1396%" y="719.50">hai6..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3,229 samples, 0.02%)</title><rect x="80.8200%" y="693" width="0.0229%" height="15" fill="rgb(238,126,27)" fg:x="11407825" fg:w="3229"/><text x="81.0700%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1,437 samples, 0.01%)</title><rect x="80.8576%" y="709" width="0.0102%" height="15" fill="rgb(249,202,22)" fg:x="11413132" fg:w="1437"/><text x="81.1076%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10,192 samples, 0.07%)</title><rect x="80.8698%" y="709" width="0.0722%" height="15" fill="rgb(254,195,49)" fg:x="11414847" fg:w="10192"/><text x="81.1198%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (44,300 samples, 0.31%)</title><rect x="80.9420%" y="709" width="0.3138%" height="15" fill="rgb(208,123,14)" fg:x="11425039" fg:w="44300"/><text x="81.1920%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7,312 samples, 0.05%)</title><rect x="81.2558%" y="709" width="0.0518%" height="15" fill="rgb(224,200,8)" fg:x="11469339" fg:w="7312"/><text x="81.5058%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (8,254 samples, 0.06%)</title><rect x="81.5560%" y="693" width="0.0585%" height="15" fill="rgb(217,61,36)" fg:x="11511704" fg:w="8254"/><text x="81.8060%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13,565 samples, 0.10%)</title><rect x="81.9974%" y="677" width="0.0961%" height="15" fill="rgb(206,35,45)" fg:x="11574004" fg:w="13565"/><text x="82.2474%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (79,153 samples, 0.56%)</title><rect x="81.6202%" y="693" width="0.5608%" height="15" fill="rgb(217,65,33)" fg:x="11520763" fg:w="79153"/><text x="81.8702%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12,347 samples, 0.09%)</title><rect x="82.0935%" y="677" width="0.0875%" height="15" fill="rgb(222,158,48)" fg:x="11587569" fg:w="12347"/><text x="82.3435%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (123,345 samples, 0.87%)</title><rect x="81.3077%" y="709" width="0.8739%" height="15" fill="rgb(254,2,54)" fg:x="11476662" fg:w="123345"/><text x="81.5577%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (31,721 samples, 0.22%)</title><rect x="82.1850%" y="709" width="0.2247%" height="15" fill="rgb(250,143,38)" fg:x="11600486" fg:w="31721"/><text x="82.4350%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,681 samples, 0.01%)</title><rect x="82.4097%" y="709" width="0.0119%" height="15" fill="rgb(248,25,0)" fg:x="11632207" fg:w="1681"/><text x="82.6597%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3,501 samples, 0.02%)</title><rect x="82.4219%" y="709" width="0.0248%" height="15" fill="rgb(206,152,27)" fg:x="11633932" fg:w="3501"/><text x="82.6719%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (29,733 samples, 0.21%)</title><rect x="82.4532%" y="709" width="0.2106%" height="15" fill="rgb(240,77,30)" fg:x="11638342" fg:w="29733"/><text x="82.7032%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (16,170 samples, 0.11%)</title><rect x="82.6638%" y="709" width="0.1146%" height="15" fill="rgb(231,5,3)" fg:x="11668075" fg:w="16170"/><text x="82.9138%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::w_wing (1,402,390 samples, 9.94%)</title><rect x="72.8432%" y="725" width="9.9354%" height="15" fill="rgb(207,226,32)" fg:x="10281890" fg:w="1402390"/><text x="73.0932%" y="735.50">hai606i_sudoku..</text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15,730 samples, 0.11%)</title><rect x="83.7730%" y="693" width="0.1114%" height="15" fill="rgb(222,207,47)" fg:x="11824640" fg:w="15730"/><text x="84.0230%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (19,910 samples, 0.14%)</title><rect x="83.8845%" y="693" width="0.1411%" height="15" fill="rgb(229,115,45)" fg:x="11840370" fg:w="19910"/><text x="84.1345%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,033 samples, 0.03%)</title><rect x="84.1047%" y="677" width="0.0286%" height="15" fill="rgb(224,191,6)" fg:x="11871457" fg:w="4033"/><text x="84.3547%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (5,500 samples, 0.04%)</title><rect x="84.1382%" y="677" width="0.0390%" height="15" fill="rgb(230,227,24)" fg:x="11876188" fg:w="5500"/><text x="84.3882%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,550 samples, 0.03%)</title><rect x="84.2283%" y="661" width="0.0322%" height="15" fill="rgb(228,80,19)" fg:x="11888903" fg:w="4550"/><text x="84.4783%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11,851 samples, 0.08%)</title><rect x="84.1772%" y="677" width="0.0840%" height="15" fill="rgb(247,229,0)" fg:x="11881688" fg:w="11851"/><text x="84.4272%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,638 samples, 0.01%)</title><rect x="84.2623%" y="677" width="0.0116%" height="15" fill="rgb(237,194,15)" fg:x="11893705" fg:w="1638"/><text x="84.5123%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (36,839 samples, 0.26%)</title><rect x="84.0255%" y="693" width="0.2610%" height="15" fill="rgb(219,203,20)" fg:x="11860280" fg:w="36839"/><text x="84.2755%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,587 samples, 0.01%)</title><rect x="84.2753%" y="677" width="0.0112%" height="15" fill="rgb(234,128,8)" fg:x="11895532" fg:w="1587"/><text x="84.5253%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (189,920 samples, 1.35%)</title><rect x="82.9457%" y="709" width="1.3455%" height="15" fill="rgb(248,202,8)" fg:x="11707864" fg:w="189920"/><text x="83.1957%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1,829 samples, 0.01%)</title><rect x="84.3026%" y="661" width="0.0130%" height="15" fill="rgb(206,104,37)" fg:x="11899387" fg:w="1829"/><text x="84.5526%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2,031 samples, 0.01%)</title><rect x="84.3019%" y="677" width="0.0144%" height="15" fill="rgb(223,8,27)" fg:x="11899288" fg:w="2031"/><text x="84.5519%" y="687.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (2,463 samples, 0.02%)</title><rect x="84.3012%" y="693" width="0.0174%" height="15" fill="rgb(216,217,28)" fg:x="11899190" fg:w="2463"/><text x="84.5512%" y="703.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,924 samples, 0.02%)</title><rect x="84.2991%" y="709" width="0.0207%" height="15" fill="rgb(249,199,1)" fg:x="11898892" fg:w="2924"/><text x="84.5491%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,557 samples, 0.01%)</title><rect x="84.3200%" y="709" width="0.0110%" height="15" fill="rgb(240,85,17)" fg:x="11901847" fg:w="1557"/><text x="84.5700%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,127 samples, 0.02%)</title><rect x="84.3549%" y="693" width="0.0151%" height="15" fill="rgb(206,108,45)" fg:x="11906772" fg:w="2127"/><text x="84.6049%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,899 samples, 0.01%)</title><rect x="84.3565%" y="677" width="0.0135%" height="15" fill="rgb(245,210,41)" fg:x="11907000" fg:w="1899"/><text x="84.6065%" y="687.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (5,535 samples, 0.04%)</title><rect x="84.3310%" y="709" width="0.0392%" height="15" fill="rgb(206,13,37)" fg:x="11903404" fg:w="5535"/><text x="84.5810%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5,940 samples, 0.04%)</title><rect x="84.3789%" y="709" width="0.0421%" height="15" fill="rgb(250,61,18)" fg:x="11910168" fg:w="5940"/><text x="84.6289%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,723 samples, 0.01%)</title><rect x="84.4221%" y="709" width="0.0122%" height="15" fill="rgb(235,172,48)" fg:x="11916257" fg:w="1723"/><text x="84.6721%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::x_wing (236,561 samples, 1.68%)</title><rect x="82.7786%" y="725" width="1.6759%" height="15" fill="rgb(249,201,17)" fg:x="11684280" fg:w="236561"/><text x="83.0286%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,563 samples, 0.01%)</title><rect x="84.4435%" y="709" width="0.0111%" height="15" fill="rgb(219,208,6)" fg:x="11919278" fg:w="1563"/><text x="84.6935%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,270 samples, 0.02%)</title><rect x="84.7485%" y="677" width="0.0161%" height="15" fill="rgb(248,31,23)" fg:x="11962332" fg:w="2270"/><text x="84.9985%" y="687.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27,748 samples, 0.20%)</title><rect x="84.5840%" y="693" width="0.1966%" height="15" fill="rgb(245,15,42)" fg:x="11939107" fg:w="27748"/><text x="84.8340%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,253 samples, 0.02%)</title><rect x="84.7646%" y="677" width="0.0160%" height="15" fill="rgb(222,217,39)" fg:x="11964602" fg:w="2253"/><text x="85.0146%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34,124 samples, 0.24%)</title><rect x="84.5462%" y="709" width="0.2418%" height="15" fill="rgb(210,219,27)" fg:x="11933774" fg:w="34124"/><text x="84.7962%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,078 samples, 0.01%)</title><rect x="84.9678%" y="693" width="0.0147%" height="15" fill="rgb(252,166,36)" fg:x="11993280" fg:w="2078"/><text x="85.2178%" y="703.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27,338 samples, 0.19%)</title><rect x="84.8031%" y="709" width="0.1937%" height="15" fill="rgb(245,132,34)" fg:x="11970035" fg:w="27338"/><text x="85.0531%" y="719.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,015 samples, 0.01%)</title><rect x="84.9825%" y="693" width="0.0143%" height="15" fill="rgb(236,54,3)" fg:x="11995358" fg:w="2015"/><text x="85.2325%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,815 samples, 0.01%)</title><rect x="85.0740%" y="693" width="0.0129%" height="15" fill="rgb(241,173,43)" fg:x="12008273" fg:w="1815"/><text x="85.3240%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,077 samples, 0.01%)</title><rect x="85.0868%" y="693" width="0.0147%" height="15" fill="rgb(215,190,9)" fg:x="12010088" fg:w="2077"/><text x="85.3368%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3,889 samples, 0.03%)</title><rect x="85.1212%" y="661" width="0.0276%" height="15" fill="rgb(242,101,16)" fg:x="12014937" fg:w="3889"/><text x="85.3712%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5,989 samples, 0.04%)</title><rect x="85.1064%" y="677" width="0.0424%" height="15" fill="rgb(223,190,21)" fg:x="12012842" fg:w="5989"/><text x="85.3564%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6,617 samples, 0.05%)</title><rect x="85.1019%" y="693" width="0.0469%" height="15" fill="rgb(215,228,25)" fg:x="12012217" fg:w="6617"/><text x="85.3519%" y="703.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (21,565 samples, 0.15%)</title><rect x="84.9968%" y="709" width="0.1528%" height="15" fill="rgb(225,36,22)" fg:x="11997373" fg:w="21565"/><text x="85.2468%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,739 samples, 0.03%)</title><rect x="85.2534%" y="693" width="0.0265%" height="15" fill="rgb(251,106,46)" fg:x="12033601" fg:w="3739"/><text x="85.5034%" y="703.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,467 samples, 0.02%)</title><rect x="85.2799%" y="693" width="0.0175%" height="15" fill="rgb(208,90,1)" fg:x="12037340" fg:w="2467"/><text x="85.5299%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,630 samples, 0.01%)</title><rect x="85.3231%" y="677" width="0.0115%" height="15" fill="rgb(243,10,4)" fg:x="12043441" fg:w="1630"/><text x="85.5731%" y="687.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,901 samples, 0.01%)</title><rect x="85.3356%" y="677" width="0.0135%" height="15" fill="rgb(212,137,27)" fg:x="12045195" fg:w="1901"/><text x="85.5856%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,548 samples, 0.02%)</title><rect x="85.3818%" y="661" width="0.0181%" height="15" fill="rgb(231,220,49)" fg:x="12051726" fg:w="2548"/><text x="85.6318%" y="671.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10,592 samples, 0.08%)</title><rect x="85.3490%" y="677" width="0.0750%" height="15" fill="rgb(237,96,20)" fg:x="12047096" fg:w="10592"/><text x="85.5990%" y="687.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18,726 samples, 0.13%)</title><rect x="85.2974%" y="693" width="0.1327%" height="15" fill="rgb(239,229,30)" fg:x="12039807" fg:w="18726"/><text x="85.5474%" y="703.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (39,578 samples, 0.28%)</title><rect x="85.1507%" y="709" width="0.2804%" height="15" fill="rgb(219,65,33)" fg:x="12019099" fg:w="39578"/><text x="85.4007%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,731 samples, 0.01%)</title><rect x="85.4367%" y="709" width="0.0123%" height="15" fill="rgb(243,134,7)" fg:x="12059472" fg:w="1731"/><text x="85.6867%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,548 samples, 0.02%)</title><rect x="85.4634%" y="693" width="0.0181%" height="15" fill="rgb(216,177,54)" fg:x="12063245" fg:w="2548"/><text x="85.7134%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4,254 samples, 0.03%)</title><rect x="85.4514%" y="709" width="0.0301%" height="15" fill="rgb(211,160,20)" fg:x="12061545" fg:w="4254"/><text x="85.7014%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,155 samples, 0.02%)</title><rect x="85.4847%" y="709" width="0.0153%" height="15" fill="rgb(239,85,39)" fg:x="12066249" fg:w="2155"/><text x="85.7347%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,598 samples, 0.01%)</title><rect x="85.5000%" y="709" width="0.0113%" height="15" fill="rgb(232,125,22)" fg:x="12068404" fg:w="1598"/><text x="85.7500%" y="719.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::y_wing (149,163 samples, 1.06%)</title><rect x="84.4546%" y="725" width="1.0568%" height="15" fill="rgb(244,57,34)" fg:x="11920841" fg:w="149163"/><text x="84.7046%" y="735.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (4,060 samples, 0.03%)</title><rect x="85.5113%" y="725" width="0.0288%" height="15" fill="rgb(214,203,32)" fg:x="12070004" fg:w="4060"/><text x="85.7613%" y="735.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,518 samples, 0.01%)</title><rect x="85.5463%" y="725" width="0.0108%" height="15" fill="rgb(207,58,43)" fg:x="12074946" fg:w="1518"/><text x="85.7963%" y="735.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (11,704 samples, 0.08%)</title><rect x="85.5571%" y="725" width="0.0829%" height="15" fill="rgb(215,193,15)" fg:x="12076464" fg:w="11704"/><text x="85.8071%" y="735.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (73,287 samples, 0.52%)</title><rect x="85.6400%" y="725" width="0.5192%" height="15" fill="rgb(232,15,44)" fg:x="12088168" fg:w="73287"/><text x="85.8900%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (90,320 samples, 0.64%)</title><rect x="86.1702%" y="725" width="0.6399%" height="15" fill="rgb(212,3,48)" fg:x="12163009" fg:w="90320"/><text x="86.4202%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_free (125,241 samples, 0.89%)</title><rect x="86.8107%" y="725" width="0.8873%" height="15" fill="rgb(218,128,7)" fg:x="12253409" fg:w="125241"/><text x="87.0607%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20,102 samples, 0.14%)</title><rect x="87.6980%" y="725" width="0.1424%" height="15" fill="rgb(226,216,39)" fg:x="12378650" fg:w="20102"/><text x="87.9480%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36,253 samples, 0.26%)</title><rect x="87.8404%" y="725" width="0.2568%" height="15" fill="rgb(243,47,51)" fg:x="12398752" fg:w="36253"/><text x="88.0904%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (16,089 samples, 0.11%)</title><rect x="88.0972%" y="725" width="0.1140%" height="15" fill="rgb(241,183,40)" fg:x="12435005" fg:w="16089"/><text x="88.3472%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (4,863 samples, 0.03%)</title><rect x="88.2112%" y="725" width="0.0345%" height="15" fill="rgb(231,217,32)" fg:x="12451094" fg:w="4863"/><text x="88.4612%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7,437 samples, 0.05%)</title><rect x="88.2471%" y="725" width="0.0527%" height="15" fill="rgb(229,61,38)" fg:x="12456167" fg:w="7437"/><text x="88.4971%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13,123 samples, 0.09%)</title><rect x="88.3241%" y="725" width="0.0930%" height="15" fill="rgb(225,210,5)" fg:x="12467028" fg:w="13123"/><text x="88.5741%" y="735.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::rule_solve (11,634,207 samples, 82.42%)</title><rect x="6.0001%" y="741" width="82.4239%" height="15" fill="rgb(231,79,45)" fg:x="846920" fg:w="11634207"/><text x="6.2501%" y="751.50">hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::rule_solve</text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,619 samples, 0.03%)</title><rect x="88.4240%" y="741" width="0.0256%" height="15" fill="rgb(224,100,7)" fg:x="12481127" fg:w="3619"/><text x="88.6740%" y="751.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (5,139 samples, 0.04%)</title><rect x="88.4496%" y="741" width="0.0364%" height="15" fill="rgb(241,198,18)" fg:x="12484746" fg:w="5139"/><text x="88.6996%" y="751.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,731 samples, 0.01%)</title><rect x="88.4873%" y="725" width="0.0123%" height="15" fill="rgb(252,97,53)" fg:x="12490060" fg:w="1731"/><text x="88.7373%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1,447 samples, 0.01%)</title><rect x="88.6139%" y="645" width="0.0103%" height="15" fill="rgb(220,88,7)" fg:x="12507937" fg:w="1447"/><text x="88.8639%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1,466 samples, 0.01%)</title><rect x="88.6138%" y="661" width="0.0104%" height="15" fill="rgb(213,176,14)" fg:x="12507923" fg:w="1466"/><text x="88.8638%" y="671.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::sync::mutex::Mutex::lock (3,263 samples, 0.02%)</title><rect x="88.6135%" y="677" width="0.0231%" height="15" fill="rgb(246,73,7)" fg:x="12507873" fg:w="3263"/><text x="88.8635%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1,739 samples, 0.01%)</title><rect x="88.6243%" y="661" width="0.0123%" height="15" fill="rgb(245,64,36)" fg:x="12509397" fg:w="1739"/><text x="88.8743%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (192,441 samples, 1.36%)</title><rect x="88.6366%" y="677" width="1.3634%" height="15" fill="rgb(245,80,10)" fg:x="12511136" fg:w="192441"/><text x="88.8866%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (1,709 samples, 0.01%)</title><rect x="90.0087%" y="677" width="0.0121%" height="15" fill="rgb(232,107,50)" fg:x="12704814" fg:w="1709"/><text x="90.2587%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (200,627 samples, 1.42%)</title><rect x="88.6005%" y="693" width="1.4214%" height="15" fill="rgb(253,3,0)" fg:x="12506043" fg:w="200627"/><text x="88.8505%" y="703.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (4,047 samples, 0.03%)</title><rect x="90.0256%" y="677" width="0.0287%" height="15" fill="rgb(212,99,53)" fg:x="12707202" fg:w="4047"/><text x="90.2756%" y="687.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (4,528 samples, 0.03%)</title><rect x="90.0224%" y="693" width="0.0321%" height="15" fill="rgb(249,111,54)" fg:x="12706751" fg:w="4528"/><text x="90.2724%" y="703.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (1,755 samples, 0.01%)</title><rect x="90.2077%" y="597" width="0.0124%" height="15" fill="rgb(249,55,30)" fg:x="12732900" fg:w="1755"/><text x="90.4577%" y="607.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,060 samples, 0.01%)</title><rect x="90.2059%" y="613" width="0.0146%" height="15" fill="rgb(237,47,42)" fg:x="12732643" fg:w="2060"/><text x="90.4559%" y="623.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (6,658 samples, 0.05%)</title><rect x="90.1838%" y="629" width="0.0472%" height="15" fill="rgb(211,20,18)" fg:x="12729523" fg:w="6658"/><text x="90.4338%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (9,565 samples, 0.07%)</title><rect x="90.1632%" y="645" width="0.0678%" height="15" fill="rgb(231,203,46)" fg:x="12726617" fg:w="9565"/><text x="90.4132%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (2,616 samples, 0.02%)</title><rect x="90.3003%" y="581" width="0.0185%" height="15" fill="rgb(237,142,3)" fg:x="12745969" fg:w="2616"/><text x="90.5503%" y="591.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4,150 samples, 0.03%)</title><rect x="90.2897%" y="597" width="0.0294%" height="15" fill="rgb(241,107,1)" fg:x="12744470" fg:w="4150"/><text x="90.5397%" y="607.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (1,455 samples, 0.01%)</title><rect x="90.3231%" y="581" width="0.0103%" height="15" fill="rgb(229,83,13)" fg:x="12749184" fg:w="1455"/><text x="90.5731%" y="591.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (1,464 samples, 0.01%)</title><rect x="90.3230%" y="597" width="0.0104%" height="15" fill="rgb(241,91,40)" fg:x="12749178" fg:w="1464"/><text x="90.5730%" y="607.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (13,790 samples, 0.10%)</title><rect x="90.2358%" y="629" width="0.0977%" height="15" fill="rgb(225,3,45)" fg:x="12736870" fg:w="13790"/><text x="90.4858%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (10,922 samples, 0.08%)</title><rect x="90.2561%" y="613" width="0.0774%" height="15" fill="rgb(244,223,14)" fg:x="12739738" fg:w="10922"/><text x="90.5061%" y="623.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14,832 samples, 0.11%)</title><rect x="90.2309%" y="645" width="0.1051%" height="15" fill="rgb(224,124,37)" fg:x="12736182" fg:w="14832"/><text x="90.4809%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (2,522 samples, 0.02%)</title><rect x="90.3501%" y="629" width="0.0179%" height="15" fill="rgb(251,171,30)" fg:x="12753003" fg:w="2522"/><text x="90.6001%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::wait_until_cold (4,477 samples, 0.03%)</title><rect x="90.3363%" y="645" width="0.0317%" height="15" fill="rgb(236,46,54)" fg:x="12751053" fg:w="4477"/><text x="90.5863%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3,049 samples, 0.02%)</title><rect x="90.3735%" y="613" width="0.0216%" height="15" fill="rgb(245,213,5)" fg:x="12756305" fg:w="3049"/><text x="90.6235%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1,730 samples, 0.01%)</title><rect x="90.3953%" y="597" width="0.0123%" height="15" fill="rgb(230,144,27)" fg:x="12759377" fg:w="1730"/><text x="90.6453%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1,744 samples, 0.01%)</title><rect x="90.3952%" y="613" width="0.0124%" height="15" fill="rgb(220,86,6)" fg:x="12759367" fg:w="1744"/><text x="90.6452%" y="623.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (5,636 samples, 0.04%)</title><rect x="90.3683%" y="629" width="0.0399%" height="15" fill="rgb(240,20,13)" fg:x="12755565" fg:w="5636"/><text x="90.6183%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (5,683 samples, 0.04%)</title><rect x="90.3680%" y="645" width="0.0403%" height="15" fill="rgb(217,89,34)" fg:x="12755530" fg:w="5683"/><text x="90.6180%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (41,362 samples, 0.29%)</title><rect x="90.1160%" y="661" width="0.2930%" height="15" fill="rgb(229,13,5)" fg:x="12719959" fg:w="41362"/><text x="90.3660%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (44,967 samples, 0.32%)</title><rect x="90.0923%" y="677" width="0.3186%" height="15" fill="rgb(244,67,35)" fg:x="12716614" fg:w="44967"/><text x="90.3423%" y="687.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (3,108 samples, 0.02%)</title><rect x="90.4414%" y="629" width="0.0220%" height="15" fill="rgb(221,40,2)" fg:x="12765891" fg:w="3108"/><text x="90.6914%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (1,947 samples, 0.01%)</title><rect x="90.4496%" y="613" width="0.0138%" height="15" fill="rgb(237,157,21)" fg:x="12767052" fg:w="1947"/><text x="90.6996%" y="623.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (2,125 samples, 0.02%)</title><rect x="90.4968%" y="565" width="0.0151%" height="15" fill="rgb(222,94,11)" fg:x="12773715" fg:w="2125"/><text x="90.7468%" y="575.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,588 samples, 0.02%)</title><rect x="90.4941%" y="581" width="0.0183%" height="15" fill="rgb(249,113,6)" fg:x="12773328" fg:w="2588"/><text x="90.7441%" y="591.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (6,272 samples, 0.04%)</title><rect x="90.4683%" y="613" width="0.0444%" height="15" fill="rgb(238,137,36)" fg:x="12769679" fg:w="6272"/><text x="90.7183%" y="623.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (5,121 samples, 0.04%)</title><rect x="90.4764%" y="597" width="0.0363%" height="15" fill="rgb(210,102,26)" fg:x="12770830" fg:w="5121"/><text x="90.7264%" y="607.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7,224 samples, 0.05%)</title><rect x="90.4634%" y="629" width="0.0512%" height="15" fill="rgb(218,30,30)" fg:x="12768999" fg:w="7224"/><text x="90.7134%" y="639.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (13,261 samples, 0.09%)</title><rect x="90.4251%" y="645" width="0.0939%" height="15" fill="rgb(214,67,26)" fg:x="12763583" fg:w="13261"/><text x="90.6751%" y="655.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (14,747 samples, 0.10%)</title><rect x="90.4158%" y="661" width="0.1045%" height="15" fill="rgb(251,9,53)" fg:x="12762279" fg:w="14747"/><text x="90.6658%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15,623 samples, 0.11%)</title><rect x="90.4114%" y="677" width="0.1107%" height="15" fill="rgb(228,204,25)" fg:x="12761649" fg:w="15623"/><text x="90.6614%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (1,606 samples, 0.01%)</title><rect x="90.5269%" y="629" width="0.0114%" height="15" fill="rgb(207,153,8)" fg:x="12777952" fg:w="1606"/><text x="90.7769%" y="639.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (1,676 samples, 0.01%)</title><rect x="90.5266%" y="645" width="0.0119%" height="15" fill="rgb(242,9,16)" fg:x="12777909" fg:w="1676"/><text x="90.7766%" y="655.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,843 samples, 0.02%)</title><rect x="90.5263%" y="661" width="0.0201%" height="15" fill="rgb(217,211,10)" fg:x="12777868" fg:w="2843"/><text x="90.7763%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::find_work (1,560 samples, 0.01%)</title><rect x="90.5471%" y="661" width="0.0111%" height="15" fill="rgb(219,228,52)" fg:x="12780805" fg:w="1560"/><text x="90.7971%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (9,291 samples, 0.07%)</title><rect x="90.5699%" y="661" width="0.0658%" height="15" fill="rgb(231,92,29)" fg:x="12784027" fg:w="9291"/><text x="90.8199%" y="671.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::wait_until_cold (15,754 samples, 0.11%)</title><rect x="90.5244%" y="677" width="0.1116%" height="15" fill="rgb(232,8,23)" fg:x="12777601" fg:w="15754"/><text x="90.7744%" y="687.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (82,291 samples, 0.58%)</title><rect x="90.0554%" y="693" width="0.5830%" height="15" fill="rgb(216,211,34)" fg:x="12711405" fg:w="82291"/><text x="90.3054%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (13,133 samples, 0.09%)</title><rect x="90.6402%" y="677" width="0.0930%" height="15" fill="rgb(236,151,0)" fg:x="12793943" fg:w="13133"/><text x="90.8902%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (13,278 samples, 0.09%)</title><rect x="90.6395%" y="693" width="0.0941%" height="15" fill="rgb(209,168,3)" fg:x="12793849" fg:w="13278"/><text x="90.8895%" y="703.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (304,522 samples, 2.16%)</title><rect x="88.5816%" y="709" width="2.1574%" height="15" fill="rgb(208,129,28)" fg:x="12503377" fg:w="304522"/><text x="88.8316%" y="719.50">h..</text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,616 samples, 0.02%)</title><rect x="90.7456%" y="709" width="0.0185%" height="15" fill="rgb(229,78,22)" fg:x="12808821" fg:w="2616"/><text x="90.9956%" y="719.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::internal::Global::try_advance (5,235 samples, 0.04%)</title><rect x="91.4242%" y="629" width="0.0371%" height="15" fill="rgb(228,187,13)" fg:x="12904606" fg:w="5235"/><text x="91.6742%" y="639.50"></text></g><g><title>hai606i_sudoku`&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,983 samples, 0.02%)</title><rect x="91.4401%" y="613" width="0.0211%" height="15" fill="rgb(240,119,24)" fg:x="12906858" fg:w="2983"/><text x="91.6901%" y="623.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::internal::Global::collect (13,322 samples, 0.09%)</title><rect x="91.4199%" y="645" width="0.0944%" height="15" fill="rgb(209,194,42)" fg:x="12903999" fg:w="13322"/><text x="91.6699%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7,151 samples, 0.05%)</title><rect x="91.4636%" y="629" width="0.0507%" height="15" fill="rgb(247,200,46)" fg:x="12910170" fg:w="7151"/><text x="91.7136%" y="639.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::default::with_handle (32,207 samples, 0.23%)</title><rect x="91.2872%" y="661" width="0.2282%" height="15" fill="rgb(218,76,16)" fg:x="12885275" fg:w="32207"/><text x="91.5372%" y="671.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (68,359 samples, 0.48%)</title><rect x="91.0509%" y="677" width="0.4843%" height="15" fill="rgb(225,21,48)" fg:x="12851925" fg:w="68359"/><text x="91.3009%" y="687.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2,690 samples, 0.02%)</title><rect x="91.5162%" y="661" width="0.0191%" height="15" fill="rgb(239,223,50)" fg:x="12917594" fg:w="2690"/><text x="91.7662%" y="671.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::default::with_handle (4,824 samples, 0.03%)</title><rect x="91.5352%" y="677" width="0.0342%" height="15" fill="rgb(244,45,21)" fg:x="12920284" fg:w="4824"/><text x="91.7852%" y="687.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (114,305 samples, 0.81%)</title><rect x="90.8018%" y="693" width="0.8098%" height="15" fill="rgb(232,33,43)" fg:x="12816762" fg:w="114305"/><text x="91.0518%" y="703.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5,959 samples, 0.04%)</title><rect x="91.5694%" y="677" width="0.0422%" height="15" fill="rgb(209,8,3)" fg:x="12925108" fg:w="5959"/><text x="91.8194%" y="687.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Injector&lt;T&gt;::steal (8,175 samples, 0.06%)</title><rect x="91.6117%" y="693" width="0.0579%" height="15" fill="rgb(214,25,53)" fg:x="12931078" fg:w="8175"/><text x="91.8617%" y="703.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::internal::Global::collect (1,948 samples, 0.01%)</title><rect x="91.7636%" y="661" width="0.0138%" height="15" fill="rgb(254,186,54)" fg:x="12952524" fg:w="1948"/><text x="92.0136%" y="671.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::default::with_handle (4,665 samples, 0.03%)</title><rect x="91.7445%" y="677" width="0.0330%" height="15" fill="rgb(208,174,49)" fg:x="12949825" fg:w="4665"/><text x="91.9945%" y="687.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (15,691 samples, 0.11%)</title><rect x="91.6696%" y="693" width="0.1112%" height="15" fill="rgb(233,191,51)" fg:x="12939253" fg:w="15691"/><text x="91.9196%" y="703.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Worker&lt;T&gt;::pop (4,549 samples, 0.03%)</title><rect x="91.7808%" y="693" width="0.0322%" height="15" fill="rgb(222,134,10)" fg:x="12954944" fg:w="4549"/><text x="92.0308%" y="703.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1,624 samples, 0.01%)</title><rect x="91.8155%" y="693" width="0.0115%" height="15" fill="rgb(230,226,20)" fg:x="12959848" fg:w="1624"/><text x="92.0655%" y="703.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::find_work (149,060 samples, 1.06%)</title><rect x="90.7714%" y="709" width="1.0560%" height="15" fill="rgb(251,111,25)" fg:x="12812468" fg:w="149060"/><text x="91.0214%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (42,227 samples, 0.30%)</title><rect x="91.8386%" y="693" width="0.2992%" height="15" fill="rgb(224,40,46)" fg:x="12963106" fg:w="42227"/><text x="92.0886%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2,998 samples, 0.02%)</title><rect x="92.1468%" y="661" width="0.0212%" height="15" fill="rgb(236,108,47)" fg:x="13006612" fg:w="2998"/><text x="92.3968%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3,048 samples, 0.02%)</title><rect x="92.1466%" y="677" width="0.0216%" height="15" fill="rgb(234,93,0)" fg:x="13006586" fg:w="3048"/><text x="92.3966%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (4,683 samples, 0.03%)</title><rect x="92.1378%" y="693" width="0.0332%" height="15" fill="rgb(224,213,32)" fg:x="13005336" fg:w="4683"/><text x="92.3878%" y="703.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::sleep (48,588 samples, 0.34%)</title><rect x="91.8274%" y="709" width="0.3442%" height="15" fill="rgb(251,11,48)" fg:x="12961528" fg:w="48588"/><text x="92.0774%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11,310 samples, 0.08%)</title><rect x="92.1767%" y="645" width="0.0801%" height="15" fill="rgb(236,173,5)" fg:x="13010826" fg:w="11310"/><text x="92.4267%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (11,458 samples, 0.08%)</title><rect x="92.1761%" y="661" width="0.0812%" height="15" fill="rgb(230,95,12)" fg:x="13010739" fg:w="11458"/><text x="92.4261%" y="671.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::sync::mutex::Mutex::lock (12,135 samples, 0.09%)</title><rect x="92.1758%" y="677" width="0.0860%" height="15" fill="rgb(232,209,1)" fg:x="13010700" fg:w="12135"/><text x="92.4258%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13,089 samples, 0.09%)</title><rect x="92.2618%" y="677" width="0.0927%" height="15" fill="rgb(232,6,1)" fg:x="13022839" fg:w="13089"/><text x="92.5118%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3,975 samples, 0.03%)</title><rect x="92.3553%" y="661" width="0.0282%" height="15" fill="rgb(210,224,50)" fg:x="13036038" fg:w="3975"/><text x="92.6053%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4,007 samples, 0.03%)</title><rect x="92.3551%" y="677" width="0.0284%" height="15" fill="rgb(228,127,35)" fg:x="13036010" fg:w="4007"/><text x="92.6051%" y="687.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (30,338 samples, 0.21%)</title><rect x="92.1727%" y="693" width="0.2149%" height="15" fill="rgb(245,102,45)" fg:x="13010265" fg:w="30338"/><text x="92.4227%" y="703.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (30,570 samples, 0.22%)</title><rect x="92.1717%" y="709" width="0.2166%" height="15" fill="rgb(214,1,49)" fg:x="13010116" fg:w="30570"/><text x="92.4217%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (819,540 samples, 5.81%)</title><rect x="92.3935%" y="709" width="5.8061%" height="15" fill="rgb(226,163,40)" fg:x="13041435" fg:w="819540"/><text x="92.6435%" y="719.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`cthread_yield (2,396 samples, 0.02%)</title><rect x="98.2085%" y="709" width="0.0170%" height="15" fill="rgb(239,212,28)" fg:x="13862229" fg:w="2396"/><text x="98.4585%" y="719.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::wait_until_cold (1,372,078 samples, 9.72%)</title><rect x="88.5069%" y="725" width="9.7206%" height="15" fill="rgb(220,20,13)" fg:x="12492833" fg:w="1372078"/><text x="88.7569%" y="735.50">hai606i_sudoku..</text></g><g><title>hai606i_sudoku`rayon_core::registry::ThreadBuilder::run (1,376,008 samples, 9.75%)</title><rect x="88.4873%" y="741" width="9.7485%" height="15" fill="rgb(210,164,35)" fg:x="12490060" fg:w="1376008"/><text x="88.7373%" y="751.50">hai606i_sudoku..</text></g><g><title>hai606i_sudoku`core::fmt::write (2,778 samples, 0.02%)</title><rect x="98.2379%" y="709" width="0.0197%" height="15" fill="rgb(248,109,41)" fg:x="13866370" fg:w="2778"/><text x="98.4879%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2,952 samples, 0.02%)</title><rect x="98.2587%" y="677" width="0.0209%" height="15" fill="rgb(238,23,50)" fg:x="13869304" fg:w="2952"/><text x="98.5087%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2,990 samples, 0.02%)</title><rect x="98.2585%" y="693" width="0.0212%" height="15" fill="rgb(211,48,49)" fg:x="13869281" fg:w="2990"/><text x="98.5085%" y="703.50"></text></g><g><title>hai606i_sudoku`std::io::stdio::Stderr::lock (3,228 samples, 0.02%)</title><rect x="98.2576%" y="709" width="0.0229%" height="15" fill="rgb(223,36,21)" fg:x="13869148" fg:w="3228"/><text x="98.5076%" y="719.50"></text></g><g><title>hai606i_sudoku`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,417 samples, 0.05%)</title><rect x="98.2363%" y="725" width="0.0455%" height="15" fill="rgb(207,123,46)" fg:x="13866141" fg:w="6417"/><text x="98.4863%" y="735.50"></text></g><g><title>hai606i_sudoku`std::io::stdio::_print (6,697 samples, 0.05%)</title><rect x="98.2357%" y="741" width="0.0474%" height="15" fill="rgb(240,218,32)" fg:x="13866068" fg:w="6697"/><text x="98.4857%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (95,676 samples, 0.68%)</title><rect x="98.2960%" y="709" width="0.6778%" height="15" fill="rgb(252,5,43)" fg:x="13874578" fg:w="95676"/><text x="98.5460%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (97,671 samples, 0.69%)</title><rect x="98.2875%" y="725" width="0.6920%" height="15" fill="rgb(252,84,19)" fg:x="13873377" fg:w="97671"/><text x="98.5375%" y="735.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::sync::mutex::Mutex::lock (104,158 samples, 0.74%)</title><rect x="98.2850%" y="741" width="0.7379%" height="15" fill="rgb(243,152,39)" fg:x="13873024" fg:w="104158"/><text x="98.5350%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6,088 samples, 0.04%)</title><rect x="98.9798%" y="725" width="0.0431%" height="15" fill="rgb(234,160,15)" fg:x="13971094" fg:w="6088"/><text x="99.2298%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2,562 samples, 0.02%)</title><rect x="99.0326%" y="741" width="0.0182%" height="15" fill="rgb(237,34,20)" fg:x="13978546" fg:w="2562"/><text x="99.2826%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_free (11,793 samples, 0.08%)</title><rect x="99.0510%" y="741" width="0.0835%" height="15" fill="rgb(229,97,13)" fg:x="13981147" fg:w="11793"/><text x="99.3010%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21,448 samples, 0.15%)</title><rect x="99.1436%" y="741" width="0.1520%" height="15" fill="rgb(234,71,50)" fg:x="13994219" fg:w="21448"/><text x="99.3936%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (2,120 samples, 0.02%)</title><rect x="99.3248%" y="725" width="0.0150%" height="15" fill="rgb(253,155,4)" fg:x="14019791" fg:w="2120"/><text x="99.5748%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3,739 samples, 0.03%)</title><rect x="99.3437%" y="725" width="0.0265%" height="15" fill="rgb(222,185,37)" fg:x="14022453" fg:w="3739"/><text x="99.5937%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9,409 samples, 0.07%)</title><rect x="99.3058%" y="741" width="0.0667%" height="15" fill="rgb(251,177,13)" fg:x="14017109" fg:w="9409"/><text x="99.5558%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6,534 samples, 0.05%)</title><rect x="99.3811%" y="741" width="0.0463%" height="15" fill="rgb(250,179,40)" fg:x="14027732" fg:w="6534"/><text x="99.6311%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,728 samples, 0.02%)</title><rect x="99.4447%" y="741" width="0.0193%" height="15" fill="rgb(242,44,2)" fg:x="14036706" fg:w="2728"/><text x="99.6947%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (62,577 samples, 0.44%)</title><rect x="99.4677%" y="725" width="0.4433%" height="15" fill="rgb(216,177,13)" fg:x="14039962" fg:w="62577"/><text x="99.7177%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (62,982 samples, 0.45%)</title><rect x="99.4655%" y="741" width="0.4462%" height="15" fill="rgb(216,106,43)" fg:x="14039650" fg:w="62982"/><text x="99.7155%" y="751.50"></text></g><g><title>hai606i_sudoku`std::sys::backtrace::__rust_begin_short_backtrace (13,842,839 samples, 98.07%)</title><rect x="1.8604%" y="757" width="98.0712%" height="15" fill="rgb(216,183,2)" fg:x="262604" fg:w="13842839"/><text x="2.1104%" y="767.50">hai606i_sudoku`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2,151 samples, 0.02%)</title><rect x="99.9164%" y="741" width="0.0152%" height="15" fill="rgb(249,75,3)" fg:x="14103292" fg:w="2151"/><text x="100.1664%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_free (3,949 samples, 0.03%)</title><rect x="99.9320%" y="757" width="0.0280%" height="15" fill="rgb(219,67,39)" fg:x="14105498" fg:w="3949"/><text x="100.1820%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,523 samples, 0.01%)</title><rect x="99.9690%" y="757" width="0.0108%" height="15" fill="rgb(253,228,2)" fg:x="14110719" fg:w="1523"/><text x="100.2190%" y="767.50"></text></g><g><title>hai606i_sudoku`core::ops::function::FnOnce::call_once{{vtable.shim}} (13,855,323 samples, 98.16%)</title><rect x="1.8360%" y="773" width="98.1596%" height="15" fill="rgb(235,138,27)" fg:x="259155" fg:w="13855323"/><text x="2.0860%" y="783.50">hai606i_sudoku`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>hai606i_sudoku`std::sys::pal::unix::thread::Thread::new::thread_start (13,855,516 samples, 98.16%)</title><rect x="1.8360%" y="789" width="98.1610%" height="15" fill="rgb(236,97,51)" fg:x="259154" fg:w="13855516"/><text x="2.0860%" y="799.50">hai606i_sudoku`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>all (14,115,094 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(240,80,30)" fg:x="0" fg:w="14115094"/><text x="0.2500%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (13,856,121 samples, 98.17%)</title><rect x="1.8347%" y="821" width="98.1653%" height="15" fill="rgb(230,178,19)" fg:x="258973" fg:w="13856121"/><text x="2.0847%" y="831.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (13,855,946 samples, 98.16%)</title><rect x="1.8360%" y="805" width="98.1640%" height="15" fill="rgb(210,190,27)" fg:x="259148" fg:w="13855946"/><text x="2.0860%" y="815.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>