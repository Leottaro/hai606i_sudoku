<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="4975926"><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (520 samples, 0.01%)</title><rect x="0.0072%" y="37" width="0.0105%" height="15" fill="rgb(227,0,7)" fg:x="358" fg:w="520"/><text x="0.2572%" y="47.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (686 samples, 0.01%)</title><rect x="0.0072%" y="53" width="0.0138%" height="15" fill="rgb(217,0,24)" fg:x="356" fg:w="686"/><text x="0.2572%" y="63.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (938 samples, 0.02%)</title><rect x="0.0071%" y="69" width="0.0189%" height="15" fill="rgb(221,193,54)" fg:x="352" fg:w="938"/><text x="0.2571%" y="79.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (1,227 samples, 0.02%)</title><rect x="0.0070%" y="85" width="0.0247%" height="15" fill="rgb(248,212,6)" fg:x="349" fg:w="1227"/><text x="0.2570%" y="95.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (1,557 samples, 0.03%)</title><rect x="0.0070%" y="101" width="0.0313%" height="15" fill="rgb(208,68,35)" fg:x="346" fg:w="1557"/><text x="0.2570%" y="111.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (1,991 samples, 0.04%)</title><rect x="0.0069%" y="117" width="0.0400%" height="15" fill="rgb(232,128,0)" fg:x="342" fg:w="1991"/><text x="0.2569%" y="127.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (2,495 samples, 0.05%)</title><rect x="0.0067%" y="133" width="0.0501%" height="15" fill="rgb(207,160,47)" fg:x="335" fg:w="2495"/><text x="0.2567%" y="143.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (2,985 samples, 0.06%)</title><rect x="0.0066%" y="149" width="0.0600%" height="15" fill="rgb(228,23,34)" fg:x="327" fg:w="2985"/><text x="0.2566%" y="159.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (3,317 samples, 0.07%)</title><rect x="0.0065%" y="165" width="0.0667%" height="15" fill="rgb(218,30,26)" fg:x="325" fg:w="3317"/><text x="0.2565%" y="175.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (3,567 samples, 0.07%)</title><rect x="0.0065%" y="181" width="0.0717%" height="15" fill="rgb(220,122,19)" fg:x="322" fg:w="3567"/><text x="0.2565%" y="191.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (3,761 samples, 0.08%)</title><rect x="0.0063%" y="197" width="0.0756%" height="15" fill="rgb(250,228,42)" fg:x="313" fg:w="3761"/><text x="0.2563%" y="207.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (3,896 samples, 0.08%)</title><rect x="0.0063%" y="213" width="0.0783%" height="15" fill="rgb(240,193,28)" fg:x="311" fg:w="3896"/><text x="0.2563%" y="223.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,004 samples, 0.08%)</title><rect x="0.0062%" y="229" width="0.0805%" height="15" fill="rgb(216,20,37)" fg:x="310" fg:w="4004"/><text x="0.2562%" y="239.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,113 samples, 0.08%)</title><rect x="0.0062%" y="245" width="0.0827%" height="15" fill="rgb(206,188,39)" fg:x="308" fg:w="4113"/><text x="0.2562%" y="255.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,210 samples, 0.08%)</title><rect x="0.0062%" y="261" width="0.0846%" height="15" fill="rgb(217,207,13)" fg:x="308" fg:w="4210"/><text x="0.2562%" y="271.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,294 samples, 0.09%)</title><rect x="0.0062%" y="277" width="0.0863%" height="15" fill="rgb(231,73,38)" fg:x="308" fg:w="4294"/><text x="0.2562%" y="287.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,403 samples, 0.09%)</title><rect x="0.0061%" y="293" width="0.0885%" height="15" fill="rgb(225,20,46)" fg:x="306" fg:w="4403"/><text x="0.2561%" y="303.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,528 samples, 0.09%)</title><rect x="0.0061%" y="309" width="0.0910%" height="15" fill="rgb(210,31,41)" fg:x="305" fg:w="4528"/><text x="0.2561%" y="319.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,675 samples, 0.09%)</title><rect x="0.0061%" y="325" width="0.0940%" height="15" fill="rgb(221,200,47)" fg:x="303" fg:w="4675"/><text x="0.2561%" y="335.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,797 samples, 0.10%)</title><rect x="0.0060%" y="341" width="0.0964%" height="15" fill="rgb(226,26,5)" fg:x="301" fg:w="4797"/><text x="0.2560%" y="351.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,893 samples, 0.10%)</title><rect x="0.0060%" y="357" width="0.0983%" height="15" fill="rgb(249,33,26)" fg:x="301" fg:w="4893"/><text x="0.2560%" y="367.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (4,960 samples, 0.10%)</title><rect x="0.0060%" y="373" width="0.0997%" height="15" fill="rgb(235,183,28)" fg:x="301" fg:w="4960"/><text x="0.2560%" y="383.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,020 samples, 0.10%)</title><rect x="0.0060%" y="389" width="0.1009%" height="15" fill="rgb(221,5,38)" fg:x="299" fg:w="5020"/><text x="0.2560%" y="399.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,070 samples, 0.10%)</title><rect x="0.0060%" y="405" width="0.1019%" height="15" fill="rgb(247,18,42)" fg:x="299" fg:w="5070"/><text x="0.2560%" y="415.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,108 samples, 0.10%)</title><rect x="0.0060%" y="421" width="0.1027%" height="15" fill="rgb(241,131,45)" fg:x="298" fg:w="5108"/><text x="0.2560%" y="431.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,147 samples, 0.10%)</title><rect x="0.0060%" y="437" width="0.1034%" height="15" fill="rgb(249,31,29)" fg:x="298" fg:w="5147"/><text x="0.2560%" y="447.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,168 samples, 0.10%)</title><rect x="0.0060%" y="453" width="0.1039%" height="15" fill="rgb(225,111,53)" fg:x="298" fg:w="5168"/><text x="0.2560%" y="463.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,180 samples, 0.10%)</title><rect x="0.0060%" y="469" width="0.1041%" height="15" fill="rgb(238,160,17)" fg:x="298" fg:w="5180"/><text x="0.2560%" y="479.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::count_solutions (5,187 samples, 0.10%)</title><rect x="0.0060%" y="485" width="0.1042%" height="15" fill="rgb(214,148,48)" fg:x="298" fg:w="5187"/><text x="0.2560%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::rule_solve (900 samples, 0.02%)</title><rect x="0.1102%" y="485" width="0.0181%" height="15" fill="rgb(232,36,49)" fg:x="5485" fg:w="900"/><text x="0.3602%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::generate_from (6,463 samples, 0.13%)</title><rect x="0.0000%" y="501" width="0.1299%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="6463"/><text x="0.2500%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::generate_new (6,574 samples, 0.13%)</title><rect x="0.0000%" y="517" width="0.1321%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="6574"/><text x="0.2500%" y="527.50"></text></g><g><title>dyld`start (6,581 samples, 0.13%)</title><rect x="0.0000%" y="613" width="0.1323%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="6581"/><text x="0.2500%" y="623.50"></text></g><g><title>hai606i_sudoku`main (6,581 samples, 0.13%)</title><rect x="0.0000%" y="597" width="0.1323%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="6581"/><text x="0.2500%" y="607.50"></text></g><g><title>hai606i_sudoku`std::rt::lang_start_internal (6,581 samples, 0.13%)</title><rect x="0.0000%" y="581" width="0.1323%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="6581"/><text x="0.2500%" y="591.50"></text></g><g><title>hai606i_sudoku`std::rt::lang_start::_{{closure}} (6,581 samples, 0.13%)</title><rect x="0.0000%" y="565" width="0.1323%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="6581"/><text x="0.2500%" y="575.50"></text></g><g><title>hai606i_sudoku`std::sys::backtrace::__rust_begin_short_backtrace (6,581 samples, 0.13%)</title><rect x="0.0000%" y="549" width="0.1323%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="6581"/><text x="0.2500%" y="559.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::main (6,581 samples, 0.13%)</title><rect x="0.0000%" y="533" width="0.1323%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="6581"/><text x="0.2500%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1,552 samples, 0.03%)</title><rect x="0.6785%" y="485" width="0.0312%" height="15" fill="rgb(238,167,29)" fg:x="33763" fg:w="1552"/><text x="0.9285%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1,448 samples, 0.03%)</title><rect x="0.6806%" y="469" width="0.0291%" height="15" fill="rgb(232,182,51)" fg:x="33867" fg:w="1448"/><text x="0.9306%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5,404 samples, 0.11%)</title><rect x="0.6013%" y="501" width="0.1086%" height="15" fill="rgb(231,60,39)" fg:x="29919" fg:w="5404"/><text x="0.8513%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (744 samples, 0.01%)</title><rect x="0.7237%" y="469" width="0.0150%" height="15" fill="rgb(208,69,12)" fg:x="36011" fg:w="744"/><text x="0.9737%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,227 samples, 0.02%)</title><rect x="0.7141%" y="485" width="0.0247%" height="15" fill="rgb(235,93,37)" fg:x="35532" fg:w="1227"/><text x="0.9641%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,439 samples, 0.03%)</title><rect x="0.7099%" y="501" width="0.0289%" height="15" fill="rgb(213,116,39)" fg:x="35323" fg:w="1439"/><text x="0.9599%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,775 samples, 0.18%)</title><rect x="0.5632%" y="517" width="0.1763%" height="15" fill="rgb(222,207,29)" fg:x="28023" fg:w="8775"/><text x="0.8132%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,559 samples, 0.03%)</title><rect x="0.7544%" y="517" width="0.0313%" height="15" fill="rgb(206,96,30)" fg:x="37539" fg:w="1559"/><text x="1.0044%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,008 samples, 0.02%)</title><rect x="0.7865%" y="517" width="0.0203%" height="15" fill="rgb(218,138,4)" fg:x="39138" fg:w="1008"/><text x="1.0365%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,815 samples, 0.28%)</title><rect x="0.5556%" y="533" width="0.2776%" height="15" fill="rgb(250,191,14)" fg:x="27647" fg:w="13815"/><text x="0.8056%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,282 samples, 0.03%)</title><rect x="0.8075%" y="517" width="0.0258%" height="15" fill="rgb(239,60,40)" fg:x="40180" fg:w="1282"/><text x="1.0575%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (991 samples, 0.02%)</title><rect x="0.9275%" y="501" width="0.0199%" height="15" fill="rgb(206,27,48)" fg:x="46152" fg:w="991"/><text x="1.1775%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (941 samples, 0.02%)</title><rect x="0.9285%" y="485" width="0.0189%" height="15" fill="rgb(225,35,8)" fg:x="46202" fg:w="941"/><text x="1.1785%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,075 samples, 0.10%)</title><rect x="0.8456%" y="533" width="0.1020%" height="15" fill="rgb(250,213,24)" fg:x="42075" fg:w="5075"/><text x="1.0956%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,246 samples, 0.09%)</title><rect x="0.8622%" y="517" width="0.0853%" height="15" fill="rgb(247,123,22)" fg:x="42904" fg:w="4246"/><text x="1.1122%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`write (16,164 samples, 0.32%)</title><rect x="0.9555%" y="501" width="0.3248%" height="15" fill="rgb(231,138,38)" fg:x="47544" fg:w="16164"/><text x="1.2055%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (16,497 samples, 0.33%)</title><rect x="0.9531%" y="517" width="0.3315%" height="15" fill="rgb(231,145,46)" fg:x="47427" fg:w="16497"/><text x="1.2031%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (16,517 samples, 0.33%)</title><rect x="0.9531%" y="533" width="0.3319%" height="15" fill="rgb(251,118,11)" fg:x="47424" fg:w="16517"/><text x="1.2031%" y="543.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$free (612 samples, 0.01%)</title><rect x="1.2850%" y="533" width="0.0123%" height="15" fill="rgb(217,147,25)" fg:x="63941" fg:w="612"/><text x="1.5350%" y="543.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (12,173 samples, 0.24%)</title><rect x="1.3163%" y="533" width="0.2446%" height="15" fill="rgb(247,81,37)" fg:x="65499" fg:w="12173"/><text x="1.5663%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (595 samples, 0.01%)</title><rect x="1.5869%" y="517" width="0.0120%" height="15" fill="rgb(209,12,38)" fg:x="78965" fg:w="595"/><text x="1.8369%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7,467 samples, 0.15%)</title><rect x="1.5995%" y="517" width="0.1501%" height="15" fill="rgb(227,1,9)" fg:x="79590" fg:w="7467"/><text x="1.8495%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (499 samples, 0.01%)</title><rect x="1.7881%" y="485" width="0.0100%" height="15" fill="rgb(248,47,43)" fg:x="88974" fg:w="499"/><text x="2.0381%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,747 samples, 0.04%)</title><rect x="1.7712%" y="501" width="0.0351%" height="15" fill="rgb(221,10,30)" fg:x="88133" fg:w="1747"/><text x="2.0212%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,659 samples, 0.05%)</title><rect x="1.7530%" y="517" width="0.0534%" height="15" fill="rgb(210,229,1)" fg:x="87228" fg:w="2659"/><text x="2.0030%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,896 samples, 0.04%)</title><rect x="1.8123%" y="517" width="0.0381%" height="15" fill="rgb(222,148,37)" fg:x="90177" fg:w="1896"/><text x="2.0623%" y="527.50"></text></g><g><title>hai606i_sudoku`core::ptr::drop_in_place&lt;hai606i_sudoku::simple_sudoku::Sudoku&gt; (14,406 samples, 0.29%)</title><rect x="1.5610%" y="533" width="0.2895%" height="15" fill="rgb(234,67,33)" fg:x="77672" fg:w="14406"/><text x="1.8110%" y="543.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (907 samples, 0.02%)</title><rect x="2.1719%" y="501" width="0.0182%" height="15" fill="rgb(247,98,35)" fg:x="108071" fg:w="907"/><text x="2.4219%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (623 samples, 0.01%)</title><rect x="2.1901%" y="501" width="0.0125%" height="15" fill="rgb(247,138,52)" fg:x="108978" fg:w="623"/><text x="2.4401%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (10,321 samples, 0.21%)</title><rect x="2.0178%" y="517" width="0.2074%" height="15" fill="rgb(213,79,30)" fg:x="100405" fg:w="10321"/><text x="2.2678%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,125 samples, 0.02%)</title><rect x="2.2026%" y="501" width="0.0226%" height="15" fill="rgb(246,177,23)" fg:x="109601" fg:w="1125"/><text x="2.4526%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,863 samples, 0.04%)</title><rect x="2.2252%" y="517" width="0.0374%" height="15" fill="rgb(230,62,27)" fg:x="110726" fg:w="1863"/><text x="2.4752%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (907 samples, 0.02%)</title><rect x="2.2723%" y="517" width="0.0182%" height="15" fill="rgb(216,154,8)" fg:x="113068" fg:w="907"/><text x="2.5223%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,045 samples, 0.02%)</title><rect x="2.2929%" y="517" width="0.0210%" height="15" fill="rgb(244,35,45)" fg:x="114094" fg:w="1045"/><text x="2.5429%" y="527.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::remove_value (22,428 samples, 0.45%)</title><rect x="1.8658%" y="533" width="0.4507%" height="15" fill="rgb(251,115,12)" fg:x="92840" fg:w="22428"/><text x="2.1158%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,656 samples, 0.03%)</title><rect x="2.7109%" y="437" width="0.0333%" height="15" fill="rgb(240,54,50)" fg:x="134891" fg:w="1656"/><text x="2.9609%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3,021 samples, 0.06%)</title><rect x="2.7564%" y="421" width="0.0607%" height="15" fill="rgb(233,84,52)" fg:x="137155" fg:w="3021"/><text x="3.0064%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,579 samples, 0.05%)</title><rect x="2.8171%" y="421" width="0.0518%" height="15" fill="rgb(207,117,47)" fg:x="140176" fg:w="2579"/><text x="3.0671%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (7,128 samples, 0.14%)</title><rect x="2.7442%" y="437" width="0.1432%" height="15" fill="rgb(249,43,39)" fg:x="136547" fg:w="7128"/><text x="2.9942%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (885 samples, 0.02%)</title><rect x="2.8696%" y="421" width="0.0178%" height="15" fill="rgb(209,38,44)" fg:x="142790" fg:w="885"/><text x="3.1196%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11,025 samples, 0.22%)</title><rect x="2.6857%" y="453" width="0.2216%" height="15" fill="rgb(236,212,23)" fg:x="133640" fg:w="11025"/><text x="2.9357%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (990 samples, 0.02%)</title><rect x="2.8874%" y="437" width="0.0199%" height="15" fill="rgb(242,79,21)" fg:x="143675" fg:w="990"/><text x="3.1374%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12,361 samples, 0.25%)</title><rect x="2.6683%" y="469" width="0.2484%" height="15" fill="rgb(211,96,35)" fg:x="132772" fg:w="12361"/><text x="2.9183%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (14,841 samples, 0.30%)</title><rect x="2.6555%" y="485" width="0.2983%" height="15" fill="rgb(253,215,40)" fg:x="132137" fg:w="14841"/><text x="2.9055%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1,845 samples, 0.04%)</title><rect x="2.9167%" y="469" width="0.0371%" height="15" fill="rgb(211,81,21)" fg:x="145133" fg:w="1845"/><text x="3.1667%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (17,866 samples, 0.36%)</title><rect x="2.6058%" y="501" width="0.3590%" height="15" fill="rgb(208,190,38)" fg:x="129662" fg:w="17866"/><text x="2.8558%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32,989 samples, 0.66%)</title><rect x="2.3354%" y="517" width="0.6630%" height="15" fill="rgb(235,213,38)" fg:x="116209" fg:w="32989"/><text x="2.5854%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,548 samples, 0.03%)</title><rect x="2.9673%" y="501" width="0.0311%" height="15" fill="rgb(237,122,38)" fg:x="147650" fg:w="1548"/><text x="3.2173%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,953 samples, 0.22%)</title><rect x="3.0004%" y="517" width="0.2201%" height="15" fill="rgb(244,218,35)" fg:x="149300" fg:w="10953"/><text x="3.2504%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (533 samples, 0.01%)</title><rect x="3.2206%" y="517" width="0.0107%" height="15" fill="rgb(240,68,47)" fg:x="160253" fg:w="533"/><text x="3.4706%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1,891 samples, 0.04%)</title><rect x="3.2313%" y="517" width="0.0380%" height="15" fill="rgb(210,16,53)" fg:x="160786" fg:w="1891"/><text x="3.4813%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,774 samples, 0.18%)</title><rect x="3.2693%" y="517" width="0.1763%" height="15" fill="rgb(235,124,12)" fg:x="162677" fg:w="8774"/><text x="3.5193%" y="527.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$free (12,382 samples, 0.25%)</title><rect x="3.4578%" y="517" width="0.2488%" height="15" fill="rgb(224,169,11)" fg:x="172060" fg:w="12382"/><text x="3.7078%" y="527.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$malloc (921 samples, 0.02%)</title><rect x="3.7067%" y="517" width="0.0185%" height="15" fill="rgb(250,166,2)" fg:x="184442" fg:w="921"/><text x="3.9567%" y="527.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (698 samples, 0.01%)</title><rect x="3.7252%" y="517" width="0.0140%" height="15" fill="rgb(242,216,29)" fg:x="185363" fg:w="698"/><text x="3.9752%" y="527.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (1,898 samples, 0.04%)</title><rect x="3.7392%" y="517" width="0.0381%" height="15" fill="rgb(230,116,27)" fg:x="186061" fg:w="1898"/><text x="3.9892%" y="527.50"></text></g><g><title>hai606i_sudoku`__rdl_dealloc (1,732 samples, 0.03%)</title><rect x="3.7774%" y="517" width="0.0348%" height="15" fill="rgb(228,99,48)" fg:x="187959" fg:w="1732"/><text x="4.0274%" y="527.50"></text></g><g><title>hai606i_sudoku`__rust_dealloc (705 samples, 0.01%)</title><rect x="3.8170%" y="517" width="0.0142%" height="15" fill="rgb(253,11,6)" fg:x="189932" fg:w="705"/><text x="4.0670%" y="527.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (959 samples, 0.02%)</title><rect x="3.8312%" y="517" width="0.0193%" height="15" fill="rgb(247,143,39)" fg:x="190637" fg:w="959"/><text x="4.0812%" y="527.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,937 samples, 0.06%)</title><rect x="3.8579%" y="517" width="0.0590%" height="15" fill="rgb(236,97,10)" fg:x="191965" fg:w="2937"/><text x="4.1079%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,245 samples, 0.07%)</title><rect x="5.2302%" y="469" width="0.0652%" height="15" fill="rgb(233,208,19)" fg:x="260252" fg:w="3245"/><text x="5.4802%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (56,437 samples, 1.13%)</title><rect x="4.2602%" y="485" width="1.1342%" height="15" fill="rgb(216,164,2)" fg:x="211984" fg:w="56437"/><text x="4.5102%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,924 samples, 0.10%)</title><rect x="5.2954%" y="469" width="0.0990%" height="15" fill="rgb(220,129,5)" fg:x="263497" fg:w="4924"/><text x="5.5454%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67,254 samples, 1.35%)</title><rect x="4.0737%" y="501" width="1.3516%" height="15" fill="rgb(242,17,10)" fg:x="202704" fg:w="67254"/><text x="4.3237%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,537 samples, 0.03%)</title><rect x="5.3944%" y="485" width="0.0309%" height="15" fill="rgb(242,107,0)" fg:x="268421" fg:w="1537"/><text x="5.6444%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,115 samples, 0.02%)</title><rect x="5.4406%" y="501" width="0.0224%" height="15" fill="rgb(251,28,31)" fg:x="270720" fg:w="1115"/><text x="5.6906%" y="511.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,391 samples, 0.03%)</title><rect x="5.4630%" y="501" width="0.0280%" height="15" fill="rgb(233,223,10)" fg:x="271835" fg:w="1391"/><text x="5.7130%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (505 samples, 0.01%)</title><rect x="5.5751%" y="485" width="0.0101%" height="15" fill="rgb(215,21,27)" fg:x="277412" fg:w="505"/><text x="5.8251%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (5,627 samples, 0.11%)</title><rect x="5.4910%" y="501" width="0.1131%" height="15" fill="rgb(232,23,21)" fg:x="273226" fg:w="5627"/><text x="5.7410%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (625 samples, 0.01%)</title><rect x="5.5915%" y="485" width="0.0126%" height="15" fill="rgb(244,5,23)" fg:x="278228" fg:w="625"/><text x="5.8415%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,061 samples, 0.02%)</title><rect x="5.6150%" y="485" width="0.0213%" height="15" fill="rgb(226,81,46)" fg:x="279398" fg:w="1061"/><text x="5.8650%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (2,287 samples, 0.05%)</title><rect x="5.6040%" y="501" width="0.0460%" height="15" fill="rgb(247,70,30)" fg:x="278853" fg:w="2287"/><text x="5.8540%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (534 samples, 0.01%)</title><rect x="5.6510%" y="501" width="0.0107%" height="15" fill="rgb(212,68,19)" fg:x="281190" fg:w="534"/><text x="5.9010%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2,747 samples, 0.06%)</title><rect x="5.6617%" y="501" width="0.0552%" height="15" fill="rgb(240,187,13)" fg:x="281724" fg:w="2747"/><text x="5.9117%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (866 samples, 0.02%)</title><rect x="5.7240%" y="501" width="0.0174%" height="15" fill="rgb(223,113,26)" fg:x="284824" fg:w="866"/><text x="5.9740%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::box_reduction (90,203 samples, 1.81%)</title><rect x="3.9411%" y="517" width="1.8128%" height="15" fill="rgb(206,192,2)" fg:x="196105" fg:w="90203"/><text x="4.1911%" y="527.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memset (618 samples, 0.01%)</title><rect x="5.7414%" y="501" width="0.0124%" height="15" fill="rgb(241,108,4)" fg:x="285690" fg:w="618"/><text x="5.9914%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5,564 samples, 0.11%)</title><rect x="6.2829%" y="501" width="0.1118%" height="15" fill="rgb(247,173,49)" fg:x="312633" fg:w="5564"/><text x="6.5329%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (638 samples, 0.01%)</title><rect x="6.3819%" y="485" width="0.0128%" height="15" fill="rgb(224,114,35)" fg:x="317559" fg:w="638"/><text x="6.6319%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (727 samples, 0.01%)</title><rect x="6.5097%" y="469" width="0.0146%" height="15" fill="rgb(245,159,27)" fg:x="323917" fg:w="727"/><text x="6.7597%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,326 samples, 0.03%)</title><rect x="6.5243%" y="469" width="0.0266%" height="15" fill="rgb(245,172,44)" fg:x="324645" fg:w="1326"/><text x="6.7743%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7,127 samples, 0.14%)</title><rect x="6.4093%" y="485" width="0.1432%" height="15" fill="rgb(236,23,11)" fg:x="318924" fg:w="7127"/><text x="6.6593%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (589 samples, 0.01%)</title><rect x="6.6197%" y="469" width="0.0118%" height="15" fill="rgb(205,117,38)" fg:x="329390" fg:w="589"/><text x="6.8697%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (5,179 samples, 0.10%)</title><rect x="6.5526%" y="485" width="0.1041%" height="15" fill="rgb(237,72,25)" fg:x="326051" fg:w="5179"/><text x="6.8026%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,251 samples, 0.03%)</title><rect x="6.6315%" y="469" width="0.0251%" height="15" fill="rgb(244,70,9)" fg:x="329979" fg:w="1251"/><text x="6.8815%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,034 samples, 0.26%)</title><rect x="6.3947%" y="501" width="0.2619%" height="15" fill="rgb(217,125,39)" fg:x="318197" fg:w="13034"/><text x="6.6447%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18,744 samples, 0.38%)</title><rect x="9.8709%" y="485" width="0.3767%" height="15" fill="rgb(235,36,10)" fg:x="491169" fg:w="18744"/><text x="10.1209%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (35,485 samples, 0.71%)</title><rect x="10.2476%" y="485" width="0.7131%" height="15" fill="rgb(251,123,47)" fg:x="509913" fg:w="35485"/><text x="10.4976%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,262 samples, 0.11%)</title><rect x="11.3786%" y="469" width="0.1057%" height="15" fill="rgb(221,13,13)" fg:x="566193" fg:w="5262"/><text x="11.6286%" y="479.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (760 samples, 0.02%)</title><rect x="11.4992%" y="469" width="0.0153%" height="15" fill="rgb(238,131,9)" fg:x="572191" fg:w="760"/><text x="11.7492%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,845 samples, 0.22%)</title><rect x="11.5149%" y="469" width="0.2179%" height="15" fill="rgb(211,50,8)" fg:x="572971" fg:w="10845"/><text x="11.7649%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (753 samples, 0.02%)</title><rect x="11.9718%" y="453" width="0.0151%" height="15" fill="rgb(245,182,24)" fg:x="595707" fg:w="753"/><text x="12.2218%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,870 samples, 0.04%)</title><rect x="11.9869%" y="453" width="0.0376%" height="15" fill="rgb(242,14,37)" fg:x="596460" fg:w="1870"/><text x="12.2369%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,503 samples, 0.03%)</title><rect x="12.0251%" y="453" width="0.0302%" height="15" fill="rgb(246,228,12)" fg:x="598361" fg:w="1503"/><text x="12.2751%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (15,856 samples, 0.32%)</title><rect x="12.0553%" y="453" width="0.3187%" height="15" fill="rgb(213,55,15)" fg:x="599864" fg:w="15856"/><text x="12.3053%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (32,096 samples, 0.65%)</title><rect x="11.7328%" y="469" width="0.6450%" height="15" fill="rgb(209,9,3)" fg:x="583816" fg:w="32096"/><text x="11.9828%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,132 samples, 0.06%)</title><rect x="12.3844%" y="469" width="0.0629%" height="15" fill="rgb(230,59,30)" fg:x="616240" fg:w="3132"/><text x="12.6344%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (76,952 samples, 1.55%)</title><rect x="10.9607%" y="485" width="1.5465%" height="15" fill="rgb(209,121,21)" fg:x="545398" fg:w="76952"/><text x="11.2107%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,603 samples, 0.05%)</title><rect x="12.4549%" y="469" width="0.0523%" height="15" fill="rgb(220,109,13)" fg:x="619747" fg:w="2603"/><text x="12.7049%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292,336 samples, 5.88%)</title><rect x="6.6567%" y="501" width="5.8750%" height="15" fill="rgb(232,18,1)" fg:x="331231" fg:w="292336"/><text x="6.9067%" y="511.50">hai606i..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,217 samples, 0.02%)</title><rect x="12.5072%" y="485" width="0.0245%" height="15" fill="rgb(215,41,42)" fg:x="622350" fg:w="1217"/><text x="12.7572%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,507 samples, 0.05%)</title><rect x="12.5446%" y="501" width="0.0504%" height="15" fill="rgb(224,123,36)" fg:x="624208" fg:w="2507"/><text x="12.7946%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,459 samples, 0.05%)</title><rect x="12.5949%" y="501" width="0.0494%" height="15" fill="rgb(240,125,3)" fg:x="626715" fg:w="2459"/><text x="12.8449%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,306 samples, 0.03%)</title><rect x="12.6451%" y="501" width="0.0262%" height="15" fill="rgb(205,98,50)" fg:x="629210" fg:w="1306"/><text x="12.8951%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,002 samples, 0.02%)</title><rect x="12.6512%" y="485" width="0.0201%" height="15" fill="rgb(205,185,37)" fg:x="629514" fg:w="1002"/><text x="12.9012%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16,157 samples, 0.32%)</title><rect x="12.6809%" y="501" width="0.3247%" height="15" fill="rgb(238,207,15)" fg:x="630994" fg:w="16157"/><text x="12.9309%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (843 samples, 0.02%)</title><rect x="13.0059%" y="501" width="0.0169%" height="15" fill="rgb(213,199,42)" fg:x="647162" fg:w="843"/><text x="13.2559%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::finned_swordfish (363,716 samples, 7.31%)</title><rect x="5.7539%" y="517" width="7.3095%" height="15" fill="rgb(235,201,11)" fg:x="286308" fg:w="363716"/><text x="6.0039%" y="527.50">hai606i_su..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1,696 samples, 0.03%)</title><rect x="13.0293%" y="501" width="0.0341%" height="15" fill="rgb(207,46,11)" fg:x="648328" fg:w="1696"/><text x="13.2793%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (581 samples, 0.01%)</title><rect x="13.3546%" y="501" width="0.0117%" height="15" fill="rgb(241,35,35)" fg:x="664513" fg:w="581"/><text x="13.6046%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,905 samples, 0.16%)</title><rect x="14.9061%" y="485" width="0.1589%" height="15" fill="rgb(243,32,47)" fg:x="741715" fg:w="7905"/><text x="15.1561%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (13,493 samples, 0.27%)</title><rect x="15.0649%" y="485" width="0.2712%" height="15" fill="rgb(247,202,23)" fg:x="749620" fg:w="13493"/><text x="15.3149%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,130 samples, 0.04%)</title><rect x="15.5213%" y="469" width="0.0428%" height="15" fill="rgb(219,102,11)" fg:x="772328" fg:w="2130"/><text x="15.7713%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,919 samples, 0.08%)</title><rect x="15.5766%" y="469" width="0.0788%" height="15" fill="rgb(243,110,44)" fg:x="775081" fg:w="3919"/><text x="15.8266%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (763 samples, 0.02%)</title><rect x="15.7595%" y="453" width="0.0153%" height="15" fill="rgb(222,74,54)" fg:x="784181" fg:w="763"/><text x="16.0095%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (641 samples, 0.01%)</title><rect x="15.7752%" y="453" width="0.0129%" height="15" fill="rgb(216,99,12)" fg:x="784960" fg:w="641"/><text x="16.0252%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6,450 samples, 0.13%)</title><rect x="15.7880%" y="453" width="0.1296%" height="15" fill="rgb(226,22,26)" fg:x="785601" fg:w="6450"/><text x="16.0380%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13,114 samples, 0.26%)</title><rect x="15.6554%" y="469" width="0.2635%" height="15" fill="rgb(217,163,10)" fg:x="779000" fg:w="13114"/><text x="15.9054%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,151 samples, 0.02%)</title><rect x="15.9217%" y="469" width="0.0231%" height="15" fill="rgb(213,25,53)" fg:x="792253" fg:w="1151"/><text x="16.1717%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (31,546 samples, 0.63%)</title><rect x="15.3361%" y="485" width="0.6340%" height="15" fill="rgb(252,105,26)" fg:x="763113" fg:w="31546"/><text x="15.5861%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,092 samples, 0.02%)</title><rect x="15.9481%" y="469" width="0.0219%" height="15" fill="rgb(220,39,43)" fg:x="793567" fg:w="1092"/><text x="16.1981%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129,914 samples, 2.61%)</title><rect x="13.3690%" y="501" width="2.6109%" height="15" fill="rgb(229,68,48)" fg:x="665230" fg:w="129914"/><text x="13.6190%" y="511.50">ha..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,190 samples, 0.02%)</title><rect x="15.9828%" y="501" width="0.0239%" height="15" fill="rgb(252,8,32)" fg:x="795292" fg:w="1190"/><text x="16.2328%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,035 samples, 0.02%)</title><rect x="16.0153%" y="501" width="0.0208%" height="15" fill="rgb(223,20,43)" fg:x="796911" fg:w="1035"/><text x="16.2653%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6,055 samples, 0.12%)</title><rect x="16.0391%" y="501" width="0.1217%" height="15" fill="rgb(229,81,49)" fg:x="798094" fg:w="6055"/><text x="16.2891%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::finned_x_wing (154,915 samples, 3.11%)</title><rect x="13.0634%" y="517" width="3.1133%" height="15" fill="rgb(236,28,36)" fg:x="650024" fg:w="154915"/><text x="13.3134%" y="527.50">hai..</text></g><g><title>libsystem_platform.dylib`_platform_memset (613 samples, 0.01%)</title><rect x="16.1643%" y="501" width="0.0123%" height="15" fill="rgb(249,185,26)" fg:x="804326" fg:w="613"/><text x="16.4143%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,861 samples, 0.04%)</title><rect x="17.0738%" y="469" width="0.0374%" height="15" fill="rgb(249,174,33)" fg:x="849578" fg:w="1861"/><text x="17.3238%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30,784 samples, 0.62%)</title><rect x="16.5439%" y="485" width="0.6187%" height="15" fill="rgb(233,201,37)" fg:x="823211" fg:w="30784"/><text x="16.7939%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,556 samples, 0.05%)</title><rect x="17.1112%" y="469" width="0.0514%" height="15" fill="rgb(221,78,26)" fg:x="851439" fg:w="2556"/><text x="17.3612%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37,974 samples, 0.76%)</title><rect x="16.4161%" y="501" width="0.7632%" height="15" fill="rgb(250,127,30)" fg:x="816855" fg:w="37974"/><text x="16.6661%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (834 samples, 0.02%)</title><rect x="17.1625%" y="485" width="0.0168%" height="15" fill="rgb(230,49,44)" fg:x="853995" fg:w="834"/><text x="17.4125%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,852 samples, 0.06%)</title><rect x="17.1793%" y="501" width="0.0573%" height="15" fill="rgb(229,67,23)" fg:x="854829" fg:w="2852"/><text x="17.4293%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (8,014 samples, 0.16%)</title><rect x="17.2505%" y="501" width="0.1611%" height="15" fill="rgb(249,83,47)" fg:x="858372" fg:w="8014"/><text x="17.5005%" y="511.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (858 samples, 0.02%)</title><rect x="17.4116%" y="501" width="0.0172%" height="15" fill="rgb(215,43,3)" fg:x="866386" fg:w="858"/><text x="17.6616%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,039 samples, 0.06%)</title><rect x="17.8287%" y="485" width="0.0611%" height="15" fill="rgb(238,154,13)" fg:x="887145" fg:w="3039"/><text x="18.0787%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,966 samples, 0.04%)</title><rect x="17.8898%" y="485" width="0.0395%" height="15" fill="rgb(219,56,2)" fg:x="890184" fg:w="1966"/><text x="18.1398%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (27,019 samples, 0.54%)</title><rect x="17.4288%" y="501" width="0.5430%" height="15" fill="rgb(233,0,4)" fg:x="867244" fg:w="27019"/><text x="17.6788%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,113 samples, 0.04%)</title><rect x="17.9293%" y="485" width="0.0425%" height="15" fill="rgb(235,30,7)" fg:x="892150" fg:w="2113"/><text x="18.1793%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,910 samples, 0.06%)</title><rect x="18.0628%" y="469" width="0.0585%" height="15" fill="rgb(250,79,13)" fg:x="898792" fg:w="2910"/><text x="18.3128%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (609 samples, 0.01%)</title><rect x="18.1327%" y="437" width="0.0122%" height="15" fill="rgb(211,146,34)" fg:x="902269" fg:w="609"/><text x="18.3827%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,889 samples, 0.04%)</title><rect x="18.1284%" y="453" width="0.0380%" height="15" fill="rgb(228,22,38)" fg:x="902055" fg:w="1889"/><text x="18.3784%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1,066 samples, 0.02%)</title><rect x="18.1449%" y="437" width="0.0214%" height="15" fill="rgb(235,168,5)" fg:x="902878" fg:w="1066"/><text x="18.3949%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,243 samples, 0.05%)</title><rect x="18.1213%" y="469" width="0.0451%" height="15" fill="rgb(221,155,16)" fg:x="901702" fg:w="2243"/><text x="18.3713%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,187 samples, 0.14%)</title><rect x="18.0226%" y="485" width="0.1444%" height="15" fill="rgb(215,215,53)" fg:x="896790" fg:w="7187"/><text x="18.2726%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,679 samples, 0.03%)</title><rect x="18.1972%" y="485" width="0.0337%" height="15" fill="rgb(223,4,10)" fg:x="905480" fg:w="1679"/><text x="18.4472%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (15,373 samples, 0.31%)</title><rect x="17.9718%" y="501" width="0.3089%" height="15" fill="rgb(234,103,6)" fg:x="894263" fg:w="15373"/><text x="18.2218%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,195 samples, 0.04%)</title><rect x="18.2366%" y="485" width="0.0441%" height="15" fill="rgb(227,97,0)" fg:x="907441" fg:w="2195"/><text x="18.4866%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,538 samples, 0.21%)</title><rect x="19.1533%" y="485" width="0.2118%" height="15" fill="rgb(234,150,53)" fg:x="953055" fg:w="10538"/><text x="19.4033%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (60,280 samples, 1.21%)</title><rect x="18.2807%" y="501" width="1.2114%" height="15" fill="rgb(228,201,54)" fg:x="909636" fg:w="60280"/><text x="18.5307%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (6,323 samples, 0.13%)</title><rect x="19.3651%" y="485" width="0.1271%" height="15" fill="rgb(222,22,37)" fg:x="963593" fg:w="6323"/><text x="19.6151%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6,163 samples, 0.12%)</title><rect x="19.7660%" y="485" width="0.1239%" height="15" fill="rgb(237,53,32)" fg:x="983540" fg:w="6163"/><text x="20.0160%" y="495.50"></text></g><g><title>hai606i_sudoku`std::collections::hash::set::HashSet&lt;T,S&gt;::is_disjoint (22,573 samples, 0.45%)</title><rect x="19.4922%" y="501" width="0.4536%" height="15" fill="rgb(233,25,53)" fg:x="969916" fg:w="22573"/><text x="19.7422%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,786 samples, 0.06%)</title><rect x="19.8898%" y="485" width="0.0560%" height="15" fill="rgb(210,40,34)" fg:x="989703" fg:w="2786"/><text x="20.1398%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (505 samples, 0.01%)</title><rect x="19.9459%" y="501" width="0.0101%" height="15" fill="rgb(241,220,44)" fg:x="992495" fg:w="505"/><text x="20.1959%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (740 samples, 0.01%)</title><rect x="19.9563%" y="501" width="0.0149%" height="15" fill="rgb(235,28,35)" fg:x="993013" fg:w="740"/><text x="20.2063%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9,747 samples, 0.20%)</title><rect x="19.9712%" y="501" width="0.1959%" height="15" fill="rgb(210,56,17)" fg:x="993753" fg:w="9747"/><text x="20.2212%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (589 samples, 0.01%)</title><rect x="20.1798%" y="485" width="0.0118%" height="15" fill="rgb(224,130,29)" fg:x="1004132" fg:w="589"/><text x="20.4298%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,062 samples, 0.02%)</title><rect x="20.1703%" y="501" width="0.0213%" height="15" fill="rgb(235,212,8)" fg:x="1003660" fg:w="1062"/><text x="20.4203%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,306 samples, 0.05%)</title><rect x="20.1922%" y="501" width="0.0463%" height="15" fill="rgb(223,33,50)" fg:x="1004751" fg:w="2306"/><text x="20.4422%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3,673 samples, 0.07%)</title><rect x="20.2426%" y="501" width="0.0738%" height="15" fill="rgb(219,149,13)" fg:x="1007259" fg:w="3673"/><text x="20.4926%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::franken_x_wing (208,910 samples, 4.20%)</title><rect x="16.1767%" y="517" width="4.1984%" height="15" fill="rgb(250,156,29)" fg:x="804939" fg:w="208910"/><text x="16.4267%" y="527.50">hai60..</text></g><g><title>libsystem_platform.dylib`_platform_memset (2,917 samples, 0.06%)</title><rect x="20.3165%" y="501" width="0.0586%" height="15" fill="rgb(216,193,19)" fg:x="1010932" fg:w="2917"/><text x="20.5665%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (794 samples, 0.02%)</title><rect x="20.6546%" y="501" width="0.0160%" height="15" fill="rgb(216,135,14)" fg:x="1027756" fg:w="794"/><text x="20.9046%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,074 samples, 0.02%)</title><rect x="20.6711%" y="501" width="0.0216%" height="15" fill="rgb(241,47,5)" fg:x="1028577" fg:w="1074"/><text x="20.9211%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (534 samples, 0.01%)</title><rect x="20.7027%" y="469" width="0.0107%" height="15" fill="rgb(233,42,35)" fg:x="1030149" fg:w="534"/><text x="20.9527%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (903 samples, 0.02%)</title><rect x="20.6971%" y="485" width="0.0181%" height="15" fill="rgb(231,13,6)" fg:x="1029871" fg:w="903"/><text x="20.9471%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (2,000 samples, 0.04%)</title><rect x="20.6927%" y="501" width="0.0402%" height="15" fill="rgb(207,181,40)" fg:x="1029651" fg:w="2000"/><text x="20.9427%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,452 samples, 0.15%)</title><rect x="22.7045%" y="485" width="0.1498%" height="15" fill="rgb(254,173,49)" fg:x="1129757" fg:w="7452"/><text x="22.9545%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (13,348 samples, 0.27%)</title><rect x="22.8542%" y="485" width="0.2683%" height="15" fill="rgb(221,1,38)" fg:x="1137209" fg:w="13348"/><text x="23.1042%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,684 samples, 0.09%)</title><rect x="23.3033%" y="469" width="0.0941%" height="15" fill="rgb(206,124,46)" fg:x="1159556" fg:w="4684"/><text x="23.5533%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,455 samples, 0.05%)</title><rect x="23.4054%" y="469" width="0.0493%" height="15" fill="rgb(249,21,11)" fg:x="1164633" fg:w="2455"/><text x="23.6554%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (930 samples, 0.02%)</title><rect x="23.5423%" y="453" width="0.0187%" height="15" fill="rgb(222,201,40)" fg:x="1171447" fg:w="930"/><text x="23.7923%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (511 samples, 0.01%)</title><rect x="23.5689%" y="453" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="1172770" fg:w="511"/><text x="23.8189%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3,743 samples, 0.08%)</title><rect x="23.5791%" y="453" width="0.0752%" height="15" fill="rgb(219,207,3)" fg:x="1173281" fg:w="3743"/><text x="23.8291%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10,065 samples, 0.20%)</title><rect x="23.4547%" y="469" width="0.2023%" height="15" fill="rgb(222,56,46)" fg:x="1167088" fg:w="10065"/><text x="23.7047%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (984 samples, 0.02%)</title><rect x="23.6592%" y="469" width="0.0198%" height="15" fill="rgb(239,76,54)" fg:x="1177265" fg:w="984"/><text x="23.9092%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29,439 samples, 0.59%)</title><rect x="23.1225%" y="485" width="0.5916%" height="15" fill="rgb(231,124,27)" fg:x="1150557" fg:w="29439"/><text x="23.3725%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,621 samples, 0.03%)</title><rect x="23.6815%" y="469" width="0.0326%" height="15" fill="rgb(249,195,6)" fg:x="1178375" fg:w="1621"/><text x="23.9315%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (148,436 samples, 2.98%)</title><rect x="20.7404%" y="501" width="2.9831%" height="15" fill="rgb(237,174,47)" fg:x="1032025" fg:w="148436"/><text x="20.9904%" y="511.50">hai..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4,445 samples, 0.09%)</title><rect x="23.7253%" y="501" width="0.0893%" height="15" fill="rgb(206,201,31)" fg:x="1180554" fg:w="4445"/><text x="23.9753%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_pairs (172,569 samples, 3.47%)</title><rect x="20.3751%" y="517" width="3.4681%" height="15" fill="rgb(231,57,52)" fg:x="1013849" fg:w="172569"/><text x="20.6251%" y="527.50">hai..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1,144 samples, 0.02%)</title><rect x="23.8202%" y="501" width="0.0230%" height="15" fill="rgb(248,177,22)" fg:x="1185274" fg:w="1144"/><text x="24.0702%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,663 samples, 0.05%)</title><rect x="24.1994%" y="469" width="0.0535%" height="15" fill="rgb(215,211,37)" fg:x="1204142" fg:w="2663"/><text x="24.4494%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,179 samples, 0.10%)</title><rect x="24.4998%" y="453" width="0.1041%" height="15" fill="rgb(241,128,51)" fg:x="1219092" fg:w="5179"/><text x="24.7498%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,909 samples, 0.06%)</title><rect x="24.6039%" y="453" width="0.0585%" height="15" fill="rgb(227,165,31)" fg:x="1224274" fg:w="2909"/><text x="24.8539%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (508 samples, 0.01%)</title><rect x="24.6624%" y="453" width="0.0102%" height="15" fill="rgb(228,167,24)" fg:x="1227183" fg:w="508"/><text x="24.9124%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20,907 samples, 0.42%)</title><rect x="24.2529%" y="469" width="0.4202%" height="15" fill="rgb(228,143,12)" fg:x="1206805" fg:w="20907"/><text x="24.5029%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,461 samples, 0.07%)</title><rect x="24.9115%" y="453" width="0.0696%" height="15" fill="rgb(249,149,8)" fg:x="1239576" fg:w="3461"/><text x="25.1615%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,092 samples, 0.04%)</title><rect x="24.9810%" y="453" width="0.0420%" height="15" fill="rgb(243,35,44)" fg:x="1243037" fg:w="2092"/><text x="25.2310%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,381 samples, 0.03%)</title><rect x="25.1018%" y="437" width="0.0278%" height="15" fill="rgb(246,89,9)" fg:x="1249048" fg:w="1381"/><text x="25.3518%" y="447.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (754 samples, 0.02%)</title><rect x="25.1298%" y="437" width="0.0152%" height="15" fill="rgb(233,213,13)" fg:x="1250439" fg:w="754"/><text x="25.3798%" y="447.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (781 samples, 0.02%)</title><rect x="25.1449%" y="437" width="0.0157%" height="15" fill="rgb(233,141,41)" fg:x="1251193" fg:w="781"/><text x="25.3949%" y="447.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,879 samples, 0.14%)</title><rect x="25.0231%" y="453" width="0.1382%" height="15" fill="rgb(239,167,4)" fg:x="1245129" fg:w="6879"/><text x="25.2731%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (24,304 samples, 0.49%)</title><rect x="24.6730%" y="469" width="0.4884%" height="15" fill="rgb(209,217,16)" fg:x="1227712" fg:w="24304"/><text x="24.9230%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49,645 samples, 1.00%)</title><rect x="24.1638%" y="485" width="0.9977%" height="15" fill="rgb(219,88,35)" fg:x="1202375" fg:w="49645"/><text x="24.4138%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,171 samples, 0.02%)</title><rect x="25.1969%" y="469" width="0.0235%" height="15" fill="rgb(220,193,23)" fg:x="1253777" fg:w="1171"/><text x="25.4469%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,119 samples, 0.04%)</title><rect x="25.1778%" y="485" width="0.0426%" height="15" fill="rgb(230,90,52)" fg:x="1252831" fg:w="2119"/><text x="25.4278%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (54,337 samples, 1.09%)</title><rect x="24.1393%" y="501" width="1.0920%" height="15" fill="rgb(252,106,19)" fg:x="1201153" fg:w="54337"/><text x="24.3893%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,319 samples, 0.03%)</title><rect x="25.2322%" y="501" width="0.0265%" height="15" fill="rgb(206,74,20)" fg:x="1255537" fg:w="1319"/><text x="25.4822%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (603 samples, 0.01%)</title><rect x="25.2620%" y="485" width="0.0121%" height="15" fill="rgb(230,138,44)" fg:x="1257017" fg:w="603"/><text x="25.5120%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (1,376 samples, 0.03%)</title><rect x="25.2587%" y="501" width="0.0277%" height="15" fill="rgb(235,182,43)" fg:x="1256856" fg:w="1376"/><text x="25.5087%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (819 samples, 0.02%)</title><rect x="25.2864%" y="501" width="0.0165%" height="15" fill="rgb(242,16,51)" fg:x="1258232" fg:w="819"/><text x="25.5364%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,054 samples, 0.26%)</title><rect x="27.7847%" y="485" width="0.2623%" height="15" fill="rgb(248,9,4)" fg:x="1382548" fg:w="13054"/><text x="28.0347%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (26,735 samples, 0.54%)</title><rect x="28.0471%" y="485" width="0.5373%" height="15" fill="rgb(210,31,22)" fg:x="1395602" fg:w="26735"/><text x="28.2971%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,751 samples, 0.16%)</title><rect x="28.8739%" y="469" width="0.1558%" height="15" fill="rgb(239,54,39)" fg:x="1436743" fg:w="7751"/><text x="29.1239%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,883 samples, 0.10%)</title><rect x="29.0450%" y="469" width="0.0981%" height="15" fill="rgb(230,99,41)" fg:x="1445258" fg:w="4883"/><text x="29.2950%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,030 samples, 0.04%)</title><rect x="29.3061%" y="453" width="0.0408%" height="15" fill="rgb(253,106,12)" fg:x="1458251" fg:w="2030"/><text x="29.5561%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (989 samples, 0.02%)</title><rect x="29.3469%" y="453" width="0.0199%" height="15" fill="rgb(213,46,41)" fg:x="1460281" fg:w="989"/><text x="29.5969%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,167 samples, 0.02%)</title><rect x="29.3672%" y="453" width="0.0235%" height="15" fill="rgb(215,133,35)" fg:x="1461291" fg:w="1167"/><text x="29.6172%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6,078 samples, 0.12%)</title><rect x="29.3907%" y="453" width="0.1221%" height="15" fill="rgb(213,28,5)" fg:x="1462459" fg:w="6078"/><text x="29.6407%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18,641 samples, 0.37%)</title><rect x="29.1431%" y="469" width="0.3746%" height="15" fill="rgb(215,77,49)" fg:x="1450141" fg:w="18641"/><text x="29.3931%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,681 samples, 0.03%)</title><rect x="29.5231%" y="469" width="0.0338%" height="15" fill="rgb(248,100,22)" fg:x="1469048" fg:w="1681"/><text x="29.7731%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (50,757 samples, 1.02%)</title><rect x="28.5844%" y="485" width="1.0201%" height="15" fill="rgb(208,67,9)" fg:x="1422337" fg:w="50757"/><text x="28.8344%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,123 samples, 0.04%)</title><rect x="29.5618%" y="469" width="0.0427%" height="15" fill="rgb(219,133,21)" fg:x="1470971" fg:w="2123"/><text x="29.8118%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (214,801 samples, 4.32%)</title><rect x="25.3028%" y="501" width="4.3168%" height="15" fill="rgb(246,46,29)" fg:x="1259051" fg:w="214801"/><text x="25.5528%" y="511.50">hai60..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (758 samples, 0.02%)</title><rect x="29.6044%" y="485" width="0.0152%" height="15" fill="rgb(246,185,52)" fg:x="1473094" fg:w="758"/><text x="29.8544%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7,683 samples, 0.15%)</title><rect x="29.6289%" y="501" width="0.1544%" height="15" fill="rgb(252,136,11)" fg:x="1474312" fg:w="7683"/><text x="29.8789%" y="511.50"></text></g><g><title>libsystem_platform.dylib`__bzero (540 samples, 0.01%)</title><rect x="29.7852%" y="501" width="0.0109%" height="15" fill="rgb(219,138,53)" fg:x="1482088" fg:w="540"/><text x="30.0352%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_quads (298,246 samples, 5.99%)</title><rect x="23.8432%" y="517" width="5.9938%" height="15" fill="rgb(211,51,23)" fg:x="1186418" fg:w="298246"/><text x="24.0932%" y="527.50">hai606i_..</text></g><g><title>libsystem_platform.dylib`_platform_memset (2,036 samples, 0.04%)</title><rect x="29.7960%" y="501" width="0.0409%" height="15" fill="rgb(247,221,28)" fg:x="1482628" fg:w="2036"/><text x="30.0460%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,149 samples, 0.02%)</title><rect x="30.8038%" y="405" width="0.0231%" height="15" fill="rgb(251,222,45)" fg:x="1532775" fg:w="1149"/><text x="31.0538%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (701 samples, 0.01%)</title><rect x="30.8269%" y="405" width="0.0141%" height="15" fill="rgb(217,162,53)" fg:x="1533924" fg:w="701"/><text x="31.0769%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2,212 samples, 0.04%)</title><rect x="30.8007%" y="421" width="0.0445%" height="15" fill="rgb(229,93,14)" fg:x="1532621" fg:w="2212"/><text x="31.0507%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3,350 samples, 0.07%)</title><rect x="30.7814%" y="437" width="0.0673%" height="15" fill="rgb(209,67,49)" fg:x="1531661" fg:w="3350"/><text x="31.0314%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3,750 samples, 0.08%)</title><rect x="30.7773%" y="453" width="0.0754%" height="15" fill="rgb(213,87,29)" fg:x="1531454" fg:w="3750"/><text x="31.0273%" y="463.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (4,491 samples, 0.09%)</title><rect x="30.7748%" y="469" width="0.0903%" height="15" fill="rgb(205,151,52)" fg:x="1531330" fg:w="4491"/><text x="31.0248%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (617 samples, 0.01%)</title><rect x="30.8526%" y="453" width="0.0124%" height="15" fill="rgb(253,215,39)" fg:x="1535204" fg:w="617"/><text x="31.1026%" y="463.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5,040 samples, 0.10%)</title><rect x="30.7666%" y="485" width="0.1013%" height="15" fill="rgb(221,220,41)" fg:x="1530924" fg:w="5040"/><text x="31.0166%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,297 samples, 0.03%)</title><rect x="30.8684%" y="485" width="0.0261%" height="15" fill="rgb(218,133,21)" fg:x="1535991" fg:w="1297"/><text x="31.1184%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19,540 samples, 0.39%)</title><rect x="35.8031%" y="469" width="0.3927%" height="15" fill="rgb(221,193,43)" fg:x="1781538" fg:w="19540"/><text x="36.0531%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (295,140 samples, 5.93%)</title><rect x="30.8945%" y="485" width="5.9314%" height="15" fill="rgb(240,128,52)" fg:x="1537288" fg:w="295140"/><text x="31.1445%" y="495.50">hai606i_..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (31,350 samples, 0.63%)</title><rect x="36.1958%" y="469" width="0.6300%" height="15" fill="rgb(253,114,12)" fg:x="1801078" fg:w="31350"/><text x="36.4458%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (350,629 samples, 7.05%)</title><rect x="29.9733%" y="501" width="7.0465%" height="15" fill="rgb(215,223,47)" fg:x="1491448" fg:w="350629"/><text x="30.2233%" y="511.50">hai606i_s..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9,649 samples, 0.19%)</title><rect x="36.8259%" y="485" width="0.1939%" height="15" fill="rgb(248,225,23)" fg:x="1832428" fg:w="9649"/><text x="37.0759%" y="495.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7,060 samples, 0.14%)</title><rect x="37.0412%" y="501" width="0.1419%" height="15" fill="rgb(250,108,0)" fg:x="1843142" fg:w="7060"/><text x="37.2912%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5,414 samples, 0.11%)</title><rect x="37.2879%" y="469" width="0.1088%" height="15" fill="rgb(228,208,7)" fg:x="1855420" fg:w="5414"/><text x="37.5379%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,804 samples, 0.18%)</title><rect x="37.2309%" y="485" width="0.1769%" height="15" fill="rgb(244,45,10)" fg:x="1852582" fg:w="8804"/><text x="37.4809%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (521 samples, 0.01%)</title><rect x="37.3974%" y="469" width="0.0105%" height="15" fill="rgb(207,125,25)" fg:x="1860865" fg:w="521"/><text x="37.6474%" y="479.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (676 samples, 0.01%)</title><rect x="37.4152%" y="485" width="0.0136%" height="15" fill="rgb(210,195,18)" fg:x="1861755" fg:w="676"/><text x="37.6652%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,939 samples, 0.06%)</title><rect x="37.4422%" y="485" width="0.0591%" height="15" fill="rgb(249,80,12)" fg:x="1863096" fg:w="2939"/><text x="37.6922%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (19,669 samples, 0.40%)</title><rect x="37.1849%" y="501" width="0.3953%" height="15" fill="rgb(221,65,9)" fg:x="1850294" fg:w="19669"/><text x="37.4349%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3,387 samples, 0.07%)</title><rect x="37.5121%" y="485" width="0.0681%" height="15" fill="rgb(235,49,36)" fg:x="1866576" fg:w="3387"/><text x="37.7621%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (862 samples, 0.02%)</title><rect x="37.6880%" y="485" width="0.0173%" height="15" fill="rgb(225,32,20)" fg:x="1875325" fg:w="862"/><text x="37.9380%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,554 samples, 0.03%)</title><rect x="37.7069%" y="485" width="0.0312%" height="15" fill="rgb(215,141,46)" fg:x="1876269" fg:w="1554"/><text x="37.9569%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (3,456 samples, 0.07%)</title><rect x="37.7382%" y="485" width="0.0695%" height="15" fill="rgb(250,160,47)" fg:x="1877823" fg:w="3456"/><text x="37.9882%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (12,064 samples, 0.24%)</title><rect x="37.5802%" y="501" width="0.2424%" height="15" fill="rgb(216,222,40)" fg:x="1869963" fg:w="12064"/><text x="37.8302%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (4,164 samples, 0.08%)</title><rect x="37.8226%" y="501" width="0.0837%" height="15" fill="rgb(234,217,39)" fg:x="1882027" fg:w="4164"/><text x="38.0726%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,872 samples, 0.06%)</title><rect x="37.9173%" y="501" width="0.0577%" height="15" fill="rgb(207,178,40)" fg:x="1886736" fg:w="2872"/><text x="38.1673%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18,076 samples, 0.36%)</title><rect x="37.9750%" y="501" width="0.3633%" height="15" fill="rgb(221,136,13)" fg:x="1889608" fg:w="18076"/><text x="38.2250%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_singles (427,460 samples, 8.59%)</title><rect x="29.8369%" y="517" width="8.5906%" height="15" fill="rgb(249,199,10)" fg:x="1484664" fg:w="427460"/><text x="30.0869%" y="527.50">hai606i_sudo..</text></g><g><title>libsystem_platform.dylib`_platform_memset (3,373 samples, 0.07%)</title><rect x="38.3597%" y="501" width="0.0678%" height="15" fill="rgb(249,222,13)" fg:x="1908751" fg:w="3373"/><text x="38.6097%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,109 samples, 0.06%)</title><rect x="38.7908%" y="469" width="0.0625%" height="15" fill="rgb(244,185,38)" fg:x="1930203" fg:w="3109"/><text x="39.0408%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,300 samples, 0.15%)</title><rect x="39.2075%" y="453" width="0.1467%" height="15" fill="rgb(236,202,9)" fg:x="1950936" fg:w="7300"/><text x="39.4575%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,961 samples, 0.08%)</title><rect x="39.3543%" y="453" width="0.0796%" height="15" fill="rgb(250,229,37)" fg:x="1958243" fg:w="3961"/><text x="39.6043%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (693 samples, 0.01%)</title><rect x="39.4339%" y="453" width="0.0139%" height="15" fill="rgb(206,174,23)" fg:x="1962204" fg:w="693"/><text x="39.6839%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29,621 samples, 0.60%)</title><rect x="38.8533%" y="469" width="0.5953%" height="15" fill="rgb(211,33,43)" fg:x="1933312" fg:w="29621"/><text x="39.1033%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,021 samples, 0.06%)</title><rect x="39.6323%" y="453" width="0.0607%" height="15" fill="rgb(245,58,50)" fg:x="1972072" fg:w="3021"/><text x="39.8823%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,592 samples, 0.03%)</title><rect x="39.6930%" y="453" width="0.0320%" height="15" fill="rgb(244,68,36)" fg:x="1975093" fg:w="1592"/><text x="39.9430%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,043 samples, 0.02%)</title><rect x="39.7667%" y="437" width="0.0210%" height="15" fill="rgb(232,229,15)" fg:x="1978763" fg:w="1043"/><text x="40.0167%" y="447.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (545 samples, 0.01%)</title><rect x="39.7877%" y="437" width="0.0110%" height="15" fill="rgb(254,30,23)" fg:x="1979806" fg:w="545"/><text x="40.0377%" y="447.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (17,431 samples, 0.35%)</title><rect x="39.4486%" y="469" width="0.3503%" height="15" fill="rgb(235,160,14)" fg:x="1962933" fg:w="17431"/><text x="39.6986%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,679 samples, 0.07%)</title><rect x="39.7250%" y="453" width="0.0739%" height="15" fill="rgb(212,155,44)" fg:x="1976685" fg:w="3679"/><text x="39.9750%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52,917 samples, 1.06%)</title><rect x="38.7356%" y="485" width="1.0635%" height="15" fill="rgb(226,2,50)" fg:x="1927455" fg:w="52917"/><text x="38.9856%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (644 samples, 0.01%)</title><rect x="39.8030%" y="485" width="0.0129%" height="15" fill="rgb(234,177,6)" fg:x="1980570" fg:w="644"/><text x="40.0530%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,770 samples, 0.04%)</title><rect x="39.8466%" y="469" width="0.0356%" height="15" fill="rgb(217,24,9)" fg:x="1982739" fg:w="1770"/><text x="40.0966%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3,183 samples, 0.06%)</title><rect x="39.8183%" y="485" width="0.0640%" height="15" fill="rgb(220,13,46)" fg:x="1981328" fg:w="3183"/><text x="40.0683%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (59,938 samples, 1.20%)</title><rect x="38.6965%" y="501" width="1.2046%" height="15" fill="rgb(239,221,27)" fg:x="1925511" fg:w="59938"/><text x="38.9465%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,123 samples, 0.02%)</title><rect x="39.9024%" y="501" width="0.0226%" height="15" fill="rgb(222,198,25)" fg:x="1985515" fg:w="1123"/><text x="40.1524%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (746 samples, 0.01%)</title><rect x="39.9288%" y="485" width="0.0150%" height="15" fill="rgb(211,99,13)" fg:x="1986830" fg:w="746"/><text x="40.1788%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (1,626 samples, 0.03%)</title><rect x="39.9250%" y="501" width="0.0327%" height="15" fill="rgb(232,111,31)" fg:x="1986638" fg:w="1626"/><text x="40.1750%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (626 samples, 0.01%)</title><rect x="39.9577%" y="501" width="0.0126%" height="15" fill="rgb(245,82,37)" fg:x="1988264" fg:w="626"/><text x="40.2077%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,850 samples, 0.22%)</title><rect x="42.3526%" y="485" width="0.2180%" height="15" fill="rgb(227,149,46)" fg:x="2107432" fg:w="10850"/><text x="42.6026%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (20,740 samples, 0.42%)</title><rect x="42.5706%" y="485" width="0.4168%" height="15" fill="rgb(218,36,50)" fg:x="2118282" fg:w="20740"/><text x="42.8206%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6,924 samples, 0.14%)</title><rect x="43.2530%" y="469" width="0.1391%" height="15" fill="rgb(226,80,48)" fg:x="2152236" fg:w="6924"/><text x="43.5030%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,106 samples, 0.08%)</title><rect x="43.4048%" y="469" width="0.0825%" height="15" fill="rgb(238,224,15)" fg:x="2159793" fg:w="4106"/><text x="43.6548%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,657 samples, 0.03%)</title><rect x="43.6303%" y="453" width="0.0333%" height="15" fill="rgb(241,136,10)" fg:x="2171009" fg:w="1657"/><text x="43.8803%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (782 samples, 0.02%)</title><rect x="43.6636%" y="453" width="0.0157%" height="15" fill="rgb(208,32,45)" fg:x="2172666" fg:w="782"/><text x="43.9136%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (975 samples, 0.02%)</title><rect x="43.6796%" y="453" width="0.0196%" height="15" fill="rgb(207,135,9)" fg:x="2173467" fg:w="975"/><text x="43.9296%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5,528 samples, 0.11%)</title><rect x="43.6993%" y="453" width="0.1111%" height="15" fill="rgb(206,86,44)" fg:x="2174443" fg:w="5528"/><text x="43.9493%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16,282 samples, 0.33%)</title><rect x="43.4874%" y="469" width="0.3272%" height="15" fill="rgb(245,177,15)" fg:x="2163899" fg:w="16282"/><text x="43.7374%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,433 samples, 0.03%)</title><rect x="43.8189%" y="469" width="0.0288%" height="15" fill="rgb(206,64,50)" fg:x="2180396" fg:w="1433"/><text x="44.0689%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44,976 samples, 0.90%)</title><rect x="42.9874%" y="485" width="0.9039%" height="15" fill="rgb(234,36,40)" fg:x="2139022" fg:w="44976"/><text x="43.2374%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,947 samples, 0.04%)</title><rect x="43.8522%" y="469" width="0.0391%" height="15" fill="rgb(213,64,8)" fg:x="2182051" fg:w="1947"/><text x="44.1022%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (195,745 samples, 3.93%)</title><rect x="39.9702%" y="501" width="3.9338%" height="15" fill="rgb(210,75,36)" fg:x="1988890" fg:w="195745"/><text x="40.2202%" y="511.50">hai6..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (637 samples, 0.01%)</title><rect x="43.8913%" y="485" width="0.0128%" height="15" fill="rgb(229,88,21)" fg:x="2183998" fg:w="637"/><text x="44.1413%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7,754 samples, 0.16%)</title><rect x="43.9145%" y="501" width="0.1558%" height="15" fill="rgb(252,204,47)" fg:x="2185151" fg:w="7754"/><text x="44.1645%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::hidden_triples (283,179 samples, 5.69%)</title><rect x="38.4275%" y="517" width="5.6910%" height="15" fill="rgb(208,77,27)" fg:x="1912124" fg:w="283179"/><text x="38.6775%" y="527.50">hai606i..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1,864 samples, 0.04%)</title><rect x="44.0810%" y="501" width="0.0375%" height="15" fill="rgb(221,76,26)" fg:x="2193439" fg:w="1864"/><text x="44.3310%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,380 samples, 0.15%)</title><rect x="44.3931%" y="501" width="0.1483%" height="15" fill="rgb(225,139,18)" fg:x="2208970" fg:w="7380"/><text x="44.6431%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (785 samples, 0.02%)</title><rect x="44.5257%" y="485" width="0.0158%" height="15" fill="rgb(230,137,11)" fg:x="2215565" fg:w="785"/><text x="44.7757%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (762 samples, 0.02%)</title><rect x="44.5599%" y="469" width="0.0153%" height="15" fill="rgb(212,28,1)" fg:x="2217269" fg:w="762"/><text x="44.8099%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,268 samples, 0.03%)</title><rect x="44.5521%" y="485" width="0.0255%" height="15" fill="rgb(248,164,17)" fg:x="2216878" fg:w="1268"/><text x="44.8021%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (2,807 samples, 0.06%)</title><rect x="44.5456%" y="501" width="0.0564%" height="15" fill="rgb(222,171,42)" fg:x="2216555" fg:w="2807"/><text x="44.7956%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3,568 samples, 0.07%)</title><rect x="44.6098%" y="501" width="0.0717%" height="15" fill="rgb(243,84,45)" fg:x="2219749" fg:w="3568"/><text x="44.8598%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,562 samples, 0.03%)</title><rect x="44.6839%" y="501" width="0.0314%" height="15" fill="rgb(252,49,23)" fg:x="2223438" fg:w="1562"/><text x="44.9339%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_pairs (30,638 samples, 0.62%)</title><rect x="44.1185%" y="517" width="0.6157%" height="15" fill="rgb(215,19,7)" fg:x="2195303" fg:w="30638"/><text x="44.3685%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (868 samples, 0.02%)</title><rect x="44.7168%" y="501" width="0.0174%" height="15" fill="rgb(238,81,41)" fg:x="2225073" fg:w="868"/><text x="44.9668%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,305 samples, 0.09%)</title><rect x="44.8300%" y="501" width="0.0865%" height="15" fill="rgb(210,199,37)" fg:x="2230707" fg:w="4305"/><text x="45.0800%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,467 samples, 0.03%)</title><rect x="45.1183%" y="469" width="0.0295%" height="15" fill="rgb(244,192,49)" fg:x="2245053" fg:w="1467"/><text x="45.3683%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,332 samples, 0.05%)</title><rect x="45.1479%" y="469" width="0.0469%" height="15" fill="rgb(226,211,11)" fg:x="2246526" fg:w="2332"/><text x="45.3979%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12,226 samples, 0.25%)</title><rect x="44.9581%" y="485" width="0.2457%" height="15" fill="rgb(236,162,54)" fg:x="2237082" fg:w="12226"/><text x="45.2081%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,115 samples, 0.02%)</title><rect x="45.3875%" y="469" width="0.0224%" height="15" fill="rgb(220,229,9)" fg:x="2258446" fg:w="1115"/><text x="45.6375%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,699 samples, 0.03%)</title><rect x="45.4099%" y="469" width="0.0341%" height="15" fill="rgb(250,87,22)" fg:x="2259561" fg:w="1699"/><text x="45.6599%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (868 samples, 0.02%)</title><rect x="45.5140%" y="453" width="0.0174%" height="15" fill="rgb(239,43,17)" fg:x="2264745" fg:w="868"/><text x="45.7640%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (782 samples, 0.02%)</title><rect x="45.5315%" y="453" width="0.0157%" height="15" fill="rgb(231,177,25)" fg:x="2265613" fg:w="782"/><text x="45.7815%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,184 samples, 0.10%)</title><rect x="45.4440%" y="469" width="0.1042%" height="15" fill="rgb(219,179,1)" fg:x="2261260" fg:w="5184"/><text x="45.6940%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (17,145 samples, 0.34%)</title><rect x="45.2038%" y="485" width="0.3446%" height="15" fill="rgb(238,219,53)" fg:x="2249308" fg:w="17145"/><text x="45.4538%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31,443 samples, 0.63%)</title><rect x="44.9165%" y="501" width="0.6319%" height="15" fill="rgb(232,167,36)" fg:x="2235012" fg:w="31443"/><text x="45.1665%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (594 samples, 0.01%)</title><rect x="45.5549%" y="485" width="0.0119%" height="15" fill="rgb(244,19,51)" fg:x="2266776" fg:w="594"/><text x="45.8049%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (1,362 samples, 0.03%)</title><rect x="45.5514%" y="501" width="0.0274%" height="15" fill="rgb(224,6,22)" fg:x="2266605" fg:w="1362"/><text x="45.8014%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,345 samples, 0.03%)</title><rect x="45.5897%" y="501" width="0.0270%" height="15" fill="rgb(224,145,5)" fg:x="2268512" fg:w="1345"/><text x="45.8397%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (708 samples, 0.01%)</title><rect x="45.6025%" y="485" width="0.0142%" height="15" fill="rgb(234,130,49)" fg:x="2269149" fg:w="708"/><text x="45.8525%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,973 samples, 0.04%)</title><rect x="45.6232%" y="501" width="0.0397%" height="15" fill="rgb(254,6,2)" fg:x="2270178" fg:w="1973"/><text x="45.8732%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_quads (47,062 samples, 0.95%)</title><rect x="44.7342%" y="517" width="0.9458%" height="15" fill="rgb(208,96,46)" fg:x="2225941" fg:w="47062"/><text x="44.9842%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (697 samples, 0.01%)</title><rect x="45.6660%" y="501" width="0.0140%" height="15" fill="rgb(239,3,39)" fg:x="2272306" fg:w="697"/><text x="45.9160%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,453 samples, 0.07%)</title><rect x="46.1305%" y="485" width="0.0694%" height="15" fill="rgb(233,210,1)" fg:x="2295418" fg:w="3453"/><text x="46.3805%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (6,093 samples, 0.12%)</title><rect x="46.2048%" y="485" width="0.1224%" height="15" fill="rgb(244,137,37)" fg:x="2299118" fg:w="6093"/><text x="46.4548%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (906 samples, 0.02%)</title><rect x="46.4982%" y="469" width="0.0182%" height="15" fill="rgb(240,136,2)" fg:x="2313716" fg:w="906"/><text x="46.7482%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (576 samples, 0.01%)</title><rect x="46.5164%" y="469" width="0.0116%" height="15" fill="rgb(239,18,37)" fg:x="2314622" fg:w="576"/><text x="46.7664%" y="479.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (11,300 samples, 0.23%)</title><rect x="46.3273%" y="485" width="0.2271%" height="15" fill="rgb(218,185,22)" fg:x="2305211" fg:w="11300"/><text x="46.5773%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,313 samples, 0.03%)</title><rect x="46.5280%" y="469" width="0.0264%" height="15" fill="rgb(225,218,4)" fg:x="2315198" fg:w="1313"/><text x="46.7780%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (744 samples, 0.01%)</title><rect x="46.5579%" y="485" width="0.0150%" height="15" fill="rgb(230,182,32)" fg:x="2316685" fg:w="744"/><text x="46.8079%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,343 samples, 0.03%)</title><rect x="46.5743%" y="485" width="0.0270%" height="15" fill="rgb(242,56,43)" fg:x="2317504" fg:w="1343"/><text x="46.8243%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::set_value (39,570 samples, 0.80%)</title><rect x="45.8074%" y="501" width="0.7952%" height="15" fill="rgb(233,99,24)" fg:x="2279342" fg:w="39570"/><text x="46.0574%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (17,936 samples, 0.36%)</title><rect x="46.6026%" y="501" width="0.3605%" height="15" fill="rgb(234,209,42)" fg:x="2318912" fg:w="17936"/><text x="46.8526%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_singles (64,412 samples, 1.29%)</title><rect x="45.6800%" y="517" width="1.2945%" height="15" fill="rgb(227,7,12)" fg:x="2273003" fg:w="64412"/><text x="45.9300%" y="527.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (565 samples, 0.01%)</title><rect x="47.2886%" y="485" width="0.0114%" height="15" fill="rgb(245,203,43)" fg:x="2353048" fg:w="565"/><text x="47.5386%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,049 samples, 0.16%)</title><rect x="47.1512%" y="501" width="0.1618%" height="15" fill="rgb(238,205,33)" fg:x="2346207" fg:w="8049"/><text x="47.4012%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (640 samples, 0.01%)</title><rect x="47.3001%" y="485" width="0.0129%" height="15" fill="rgb(231,56,7)" fg:x="2353616" fg:w="640"/><text x="47.5501%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,726 samples, 0.05%)</title><rect x="47.7125%" y="469" width="0.0548%" height="15" fill="rgb(244,186,29)" fg:x="2374139" fg:w="2726"/><text x="47.9625%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,275 samples, 0.09%)</title><rect x="47.7673%" y="469" width="0.0859%" height="15" fill="rgb(234,111,31)" fg:x="2376867" fg:w="4275"/><text x="48.0173%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23,016 samples, 0.46%)</title><rect x="47.3947%" y="485" width="0.4625%" height="15" fill="rgb(241,149,10)" fg:x="2358325" fg:w="23016"/><text x="47.6447%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,236 samples, 0.02%)</title><rect x="48.0733%" y="469" width="0.0248%" height="15" fill="rgb(249,206,44)" fg:x="2392093" fg:w="1236"/><text x="48.3233%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,901 samples, 0.04%)</title><rect x="48.0982%" y="469" width="0.0382%" height="15" fill="rgb(251,153,30)" fg:x="2393329" fg:w="1901"/><text x="48.3482%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (541 samples, 0.01%)</title><rect x="48.1868%" y="453" width="0.0109%" height="15" fill="rgb(239,152,38)" fg:x="2397738" fg:w="541"/><text x="48.4368%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (17,935 samples, 0.36%)</title><rect x="47.8572%" y="485" width="0.3604%" height="15" fill="rgb(249,139,47)" fg:x="2381341" fg:w="17935"/><text x="48.1072%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,046 samples, 0.08%)</title><rect x="48.1364%" y="469" width="0.0813%" height="15" fill="rgb(244,64,35)" fg:x="2395230" fg:w="4046"/><text x="48.3864%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (997 samples, 0.02%)</title><rect x="48.1976%" y="453" width="0.0200%" height="15" fill="rgb(216,46,15)" fg:x="2398279" fg:w="997"/><text x="48.4476%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45,022 samples, 0.90%)</title><rect x="47.3129%" y="501" width="0.9048%" height="15" fill="rgb(250,74,19)" fg:x="2354256" fg:w="45022"/><text x="47.5629%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (639 samples, 0.01%)</title><rect x="48.2391%" y="469" width="0.0128%" height="15" fill="rgb(249,42,33)" fg:x="2400342" fg:w="639"/><text x="48.4891%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,098 samples, 0.02%)</title><rect x="48.2316%" y="485" width="0.0221%" height="15" fill="rgb(242,149,17)" fg:x="2399967" fg:w="1098"/><text x="48.4816%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (2,502 samples, 0.05%)</title><rect x="48.2253%" y="501" width="0.0503%" height="15" fill="rgb(244,29,21)" fg:x="2399653" fg:w="2502"/><text x="48.4753%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (780 samples, 0.02%)</title><rect x="48.2755%" y="501" width="0.0157%" height="15" fill="rgb(220,130,37)" fg:x="2402155" fg:w="780"/><text x="48.5255%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,966 samples, 0.06%)</title><rect x="48.2938%" y="501" width="0.0596%" height="15" fill="rgb(211,67,2)" fg:x="2403065" fg:w="2966"/><text x="48.5438%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,118 samples, 0.04%)</title><rect x="48.3109%" y="485" width="0.0426%" height="15" fill="rgb(235,68,52)" fg:x="2403913" fg:w="2118"/><text x="48.5609%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (716 samples, 0.01%)</title><rect x="48.3550%" y="501" width="0.0144%" height="15" fill="rgb(246,142,3)" fg:x="2406110" fg:w="716"/><text x="48.6050%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4,942 samples, 0.10%)</title><rect x="48.3694%" y="501" width="0.0993%" height="15" fill="rgb(241,25,7)" fg:x="2406826" fg:w="4942"/><text x="48.6194%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::naked_triples (75,788 samples, 1.52%)</title><rect x="46.9745%" y="517" width="1.5231%" height="15" fill="rgb(242,119,39)" fg:x="2337415" fg:w="75788"/><text x="47.2245%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,157 samples, 0.02%)</title><rect x="48.4743%" y="501" width="0.0233%" height="15" fill="rgb(241,98,45)" fg:x="2412046" fg:w="1157"/><text x="48.7243%" y="511.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (555 samples, 0.01%)</title><rect x="48.7219%" y="469" width="0.0112%" height="15" fill="rgb(254,28,30)" fg:x="2424364" fg:w="555"/><text x="48.9719%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (631 samples, 0.01%)</title><rect x="48.7207%" y="485" width="0.0127%" height="15" fill="rgb(241,142,54)" fg:x="2424304" fg:w="631"/><text x="48.9707%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,046 samples, 0.06%)</title><rect x="49.5363%" y="469" width="0.0612%" height="15" fill="rgb(222,85,15)" fg:x="2464888" fg:w="3046"/><text x="49.7863%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (47,273 samples, 0.95%)</title><rect x="48.7375%" y="485" width="0.9500%" height="15" fill="rgb(210,85,47)" fg:x="2425140" fg:w="47273"/><text x="48.9875%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,479 samples, 0.09%)</title><rect x="49.5975%" y="469" width="0.0900%" height="15" fill="rgb(224,206,25)" fg:x="2467934" fg:w="4479"/><text x="49.8475%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56,484 samples, 1.14%)</title><rect x="48.5816%" y="501" width="1.1351%" height="15" fill="rgb(243,201,19)" fg:x="2417386" fg:w="56484"/><text x="48.8316%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,457 samples, 0.03%)</title><rect x="49.6875%" y="485" width="0.0293%" height="15" fill="rgb(236,59,4)" fg:x="2472413" fg:w="1457"/><text x="49.9375%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (866 samples, 0.02%)</title><rect x="49.7168%" y="501" width="0.0174%" height="15" fill="rgb(254,179,45)" fg:x="2473870" fg:w="866"/><text x="49.9668%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,709 samples, 0.03%)</title><rect x="49.7366%" y="501" width="0.0343%" height="15" fill="rgb(226,14,10)" fg:x="2474858" fg:w="1709"/><text x="49.9866%" y="511.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,207 samples, 0.02%)</title><rect x="49.7710%" y="501" width="0.0243%" height="15" fill="rgb(244,27,41)" fg:x="2476567" fg:w="1207"/><text x="50.0210%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,072 samples, 0.02%)</title><rect x="49.8040%" y="485" width="0.0215%" height="15" fill="rgb(235,35,32)" fg:x="2478209" fg:w="1072"/><text x="50.0540%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (2,125 samples, 0.04%)</title><rect x="49.7952%" y="501" width="0.0427%" height="15" fill="rgb(218,68,31)" fg:x="2477774" fg:w="2125"/><text x="50.0452%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2,125 samples, 0.04%)</title><rect x="49.8473%" y="501" width="0.0427%" height="15" fill="rgb(207,120,37)" fg:x="2480366" fg:w="2125"/><text x="50.0973%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::pointing_pair (70,151 samples, 1.41%)</title><rect x="48.4976%" y="517" width="1.4098%" height="15" fill="rgb(227,98,0)" fg:x="2413203" fg:w="70151"/><text x="48.7476%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (510 samples, 0.01%)</title><rect x="49.8971%" y="501" width="0.0102%" height="15" fill="rgb(207,7,3)" fg:x="2482844" fg:w="510"/><text x="50.1471%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,628 samples, 0.03%)</title><rect x="50.5117%" y="469" width="0.0327%" height="15" fill="rgb(206,98,19)" fg:x="2513423" fg:w="1628"/><text x="50.7617%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28,459 samples, 0.57%)</title><rect x="50.0238%" y="485" width="0.5719%" height="15" fill="rgb(217,5,26)" fg:x="2489145" fg:w="28459"/><text x="50.2738%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,553 samples, 0.05%)</title><rect x="50.5444%" y="469" width="0.0513%" height="15" fill="rgb(235,190,38)" fg:x="2515051" fg:w="2553"/><text x="50.7944%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33,935 samples, 0.68%)</title><rect x="49.9299%" y="501" width="0.6820%" height="15" fill="rgb(247,86,24)" fg:x="2484476" fg:w="33935"/><text x="50.1799%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (807 samples, 0.02%)</title><rect x="50.5957%" y="485" width="0.0162%" height="15" fill="rgb(205,101,16)" fg:x="2517604" fg:w="807"/><text x="50.8457%" y="495.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (671 samples, 0.01%)</title><rect x="50.6155%" y="501" width="0.0135%" height="15" fill="rgb(246,168,33)" fg:x="2518589" fg:w="671"/><text x="50.8655%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (569 samples, 0.01%)</title><rect x="50.6342%" y="485" width="0.0114%" height="15" fill="rgb(231,114,1)" fg:x="2519520" fg:w="569"/><text x="50.8842%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (1,193 samples, 0.02%)</title><rect x="50.6290%" y="501" width="0.0240%" height="15" fill="rgb(207,184,53)" fg:x="2519260" fg:w="1193"/><text x="50.8790%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,107 samples, 0.02%)</title><rect x="50.6582%" y="501" width="0.0222%" height="15" fill="rgb(224,95,51)" fg:x="2520716" fg:w="1107"/><text x="50.9082%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::pointing_triple (38,931 samples, 0.78%)</title><rect x="49.9074%" y="517" width="0.7824%" height="15" fill="rgb(212,188,45)" fg:x="2483354" fg:w="38931"/><text x="50.1574%" y="527.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (960 samples, 0.02%)</title><rect x="51.6578%" y="501" width="0.0193%" height="15" fill="rgb(223,154,38)" fg:x="2570452" fg:w="960"/><text x="51.9078%" y="511.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$free (499 samples, 0.01%)</title><rect x="51.6804%" y="501" width="0.0100%" height="15" fill="rgb(251,22,52)" fg:x="2571576" fg:w="499"/><text x="51.9304%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,705 samples, 0.03%)</title><rect x="51.8404%" y="437" width="0.0343%" height="15" fill="rgb(229,209,22)" fg:x="2579539" fg:w="1705"/><text x="52.0904%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,474 samples, 0.03%)</title><rect x="51.8872%" y="421" width="0.0296%" height="15" fill="rgb(234,138,34)" fg:x="2581870" fg:w="1474"/><text x="52.1372%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,058 samples, 0.02%)</title><rect x="51.9168%" y="421" width="0.0213%" height="15" fill="rgb(212,95,11)" fg:x="2583344" fg:w="1058"/><text x="52.1668%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (501 samples, 0.01%)</title><rect x="51.9452%" y="389" width="0.0101%" height="15" fill="rgb(240,179,47)" fg:x="2584754" fg:w="501"/><text x="52.1952%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (854 samples, 0.02%)</title><rect x="51.9381%" y="421" width="0.0172%" height="15" fill="rgb(240,163,11)" fg:x="2584402" fg:w="854"/><text x="52.1881%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (721 samples, 0.01%)</title><rect x="51.9408%" y="405" width="0.0145%" height="15" fill="rgb(236,37,12)" fg:x="2584535" fg:w="721"/><text x="52.1908%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4,395 samples, 0.09%)</title><rect x="51.8746%" y="437" width="0.0883%" height="15" fill="rgb(232,164,16)" fg:x="2581244" fg:w="4395"/><text x="52.1246%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1,391 samples, 0.03%)</title><rect x="51.9646%" y="437" width="0.0280%" height="15" fill="rgb(244,205,15)" fg:x="2585720" fg:w="1391"/><text x="52.2146%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9,038 samples, 0.18%)</title><rect x="51.8214%" y="453" width="0.1816%" height="15" fill="rgb(223,117,47)" fg:x="2578596" fg:w="9038"/><text x="52.0714%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (10,642 samples, 0.21%)</title><rect x="51.8031%" y="469" width="0.2139%" height="15" fill="rgb(244,107,35)" fg:x="2577685" fg:w="10642"/><text x="52.0531%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7,738 samples, 0.16%)</title><rect x="52.0170%" y="469" width="0.1555%" height="15" fill="rgb(205,140,8)" fg:x="2588327" fg:w="7738"/><text x="52.2670%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2,242 samples, 0.05%)</title><rect x="52.1725%" y="469" width="0.0451%" height="15" fill="rgb(228,84,46)" fg:x="2596065" fg:w="2242"/><text x="52.4225%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (21,791 samples, 0.44%)</title><rect x="51.7809%" y="485" width="0.4379%" height="15" fill="rgb(254,188,9)" fg:x="2576577" fg:w="21791"/><text x="52.0309%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,295 samples, 0.05%)</title><rect x="52.2188%" y="485" width="0.0461%" height="15" fill="rgb(206,112,54)" fg:x="2598368" fg:w="2295"/><text x="52.4688%" y="495.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (28,738 samples, 0.58%)</title><rect x="51.7009%" y="501" width="0.5775%" height="15" fill="rgb(216,84,49)" fg:x="2572600" fg:w="28738"/><text x="51.9509%" y="511.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (656 samples, 0.01%)</title><rect x="52.2785%" y="501" width="0.0132%" height="15" fill="rgb(214,194,35)" fg:x="2601338" fg:w="656"/><text x="52.5285%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,289 samples, 0.07%)</title><rect x="52.6596%" y="437" width="0.0661%" height="15" fill="rgb(249,28,3)" fg:x="2620304" fg:w="3289"/><text x="52.9096%" y="447.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21,980 samples, 0.44%)</title><rect x="52.3832%" y="453" width="0.4417%" height="15" fill="rgb(222,56,52)" fg:x="2606549" fg:w="21980"/><text x="52.6332%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,936 samples, 0.10%)</title><rect x="52.7257%" y="437" width="0.0992%" height="15" fill="rgb(245,217,50)" fg:x="2623593" fg:w="4936"/><text x="52.9757%" y="447.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6,016 samples, 0.12%)</title><rect x="52.8249%" y="453" width="0.1209%" height="15" fill="rgb(213,201,24)" fg:x="2628529" fg:w="6016"/><text x="53.0749%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,114 samples, 0.08%)</title><rect x="52.8631%" y="437" width="0.0827%" height="15" fill="rgb(248,116,28)" fg:x="2630431" fg:w="4114"/><text x="53.1131%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (851 samples, 0.02%)</title><rect x="52.9458%" y="453" width="0.0171%" height="15" fill="rgb(219,72,43)" fg:x="2634545" fg:w="851"/><text x="53.1958%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (32,268 samples, 0.65%)</title><rect x="52.3355%" y="469" width="0.6485%" height="15" fill="rgb(209,138,14)" fg:x="2604175" fg:w="32268"/><text x="52.5855%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (834 samples, 0.02%)</title><rect x="52.9672%" y="453" width="0.0168%" height="15" fill="rgb(222,18,33)" fg:x="2635609" fg:w="834"/><text x="53.2172%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (901 samples, 0.02%)</title><rect x="52.9848%" y="469" width="0.0181%" height="15" fill="rgb(213,199,7)" fg:x="2636485" fg:w="901"/><text x="53.2348%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4,185 samples, 0.08%)</title><rect x="53.0103%" y="469" width="0.0841%" height="15" fill="rgb(250,110,10)" fg:x="2637753" fg:w="4185"/><text x="53.2603%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,779 samples, 0.06%)</title><rect x="53.1044%" y="469" width="0.0558%" height="15" fill="rgb(248,123,6)" fg:x="2642438" fg:w="2779"/><text x="53.3544%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43,237 samples, 0.87%)</title><rect x="52.2943%" y="485" width="0.8689%" height="15" fill="rgb(206,91,31)" fg:x="2602127" fg:w="43237"/><text x="52.5443%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1,245 samples, 0.03%)</title><rect x="53.1789%" y="485" width="0.0250%" height="15" fill="rgb(211,154,13)" fg:x="2646141" fg:w="1245"/><text x="53.4289%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (962 samples, 0.02%)</title><rect x="53.2039%" y="485" width="0.0193%" height="15" fill="rgb(225,148,7)" fg:x="2647386" fg:w="962"/><text x="53.4539%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,012 samples, 0.02%)</title><rect x="53.2232%" y="485" width="0.0203%" height="15" fill="rgb(220,160,43)" fg:x="2648348" fg:w="1012"/><text x="53.4732%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (568 samples, 0.01%)</title><rect x="53.2559%" y="469" width="0.0114%" height="15" fill="rgb(213,52,39)" fg:x="2649975" fg:w="568"/><text x="53.5059%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (830 samples, 0.02%)</title><rect x="53.2533%" y="485" width="0.0167%" height="15" fill="rgb(243,137,7)" fg:x="2649843" fg:w="830"/><text x="53.5033%" y="495.50"></text></g><g><title>hai606i_sudoku`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (50,487 samples, 1.01%)</title><rect x="52.2917%" y="501" width="1.0146%" height="15" fill="rgb(230,79,13)" fg:x="2601994" fg:w="50487"/><text x="52.5417%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,800 samples, 0.04%)</title><rect x="53.2701%" y="485" width="0.0362%" height="15" fill="rgb(247,105,23)" fg:x="2650681" fg:w="1800"/><text x="53.5201%" y="495.50"></text></g><g><title>hai606i_sudoku`core::ops::function::FnOnce::call_once (1,389 samples, 0.03%)</title><rect x="53.3152%" y="501" width="0.0279%" height="15" fill="rgb(223,179,41)" fg:x="2652925" fg:w="1389"/><text x="53.5652%" y="511.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::shared::smallsort::small_sort_general_with_scratch (3,602 samples, 0.07%)</title><rect x="53.3717%" y="453" width="0.0724%" height="15" fill="rgb(218,9,34)" fg:x="2655735" fg:w="3602"/><text x="53.6217%" y="463.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::quicksort::quicksort (774 samples, 0.02%)</title><rect x="53.4441%" y="453" width="0.0156%" height="15" fill="rgb(222,106,8)" fg:x="2659337" fg:w="774"/><text x="53.6941%" y="463.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::quicksort::quicksort (4,976 samples, 0.10%)</title><rect x="53.3606%" y="469" width="0.1000%" height="15" fill="rgb(211,220,0)" fg:x="2655185" fg:w="4976"/><text x="53.6106%" y="479.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::drift::sort (5,839 samples, 0.12%)</title><rect x="53.3448%" y="485" width="0.1173%" height="15" fill="rgb(229,52,16)" fg:x="2654399" fg:w="5839"/><text x="53.5948%" y="495.50"></text></g><g><title>hai606i_sudoku`core::slice::sort::stable::driftsort_main (6,060 samples, 0.12%)</title><rect x="53.3439%" y="501" width="0.1218%" height="15" fill="rgb(212,155,18)" fg:x="2654351" fg:w="6060"/><text x="53.5939%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (733 samples, 0.01%)</title><rect x="53.5061%" y="421" width="0.0147%" height="15" fill="rgb(242,21,14)" fg:x="2662425" fg:w="733"/><text x="53.7561%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1,036 samples, 0.02%)</title><rect x="53.5016%" y="437" width="0.0208%" height="15" fill="rgb(222,19,48)" fg:x="2662198" fg:w="1036"/><text x="53.7516%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1,186 samples, 0.02%)</title><rect x="53.4996%" y="453" width="0.0238%" height="15" fill="rgb(232,45,27)" fg:x="2662102" fg:w="1186"/><text x="53.7496%" y="463.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (1,508 samples, 0.03%)</title><rect x="53.4982%" y="469" width="0.0303%" height="15" fill="rgb(249,103,42)" fg:x="2662030" fg:w="1508"/><text x="53.7482%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,676 samples, 0.03%)</title><rect x="53.4960%" y="485" width="0.0337%" height="15" fill="rgb(246,81,33)" fg:x="2661922" fg:w="1676"/><text x="53.7460%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (67,226 samples, 1.35%)</title><rect x="53.5714%" y="421" width="1.3510%" height="15" fill="rgb(252,33,42)" fg:x="2665671" fg:w="67226"/><text x="53.8214%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1,788 samples, 0.04%)</title><rect x="54.9389%" y="405" width="0.0359%" height="15" fill="rgb(209,212,41)" fg:x="2733718" fg:w="1788"/><text x="55.1889%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3,523 samples, 0.07%)</title><rect x="54.9753%" y="389" width="0.0708%" height="15" fill="rgb(207,154,6)" fg:x="2735528" fg:w="3523"/><text x="55.2253%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3,565 samples, 0.07%)</title><rect x="54.9748%" y="405" width="0.0716%" height="15" fill="rgb(223,64,47)" fg:x="2735506" fg:w="3565"/><text x="55.2248%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (6,542 samples, 0.13%)</title><rect x="54.9225%" y="421" width="0.1315%" height="15" fill="rgb(211,161,38)" fg:x="2732901" fg:w="6542"/><text x="55.1725%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::latch::LockLatch::wait_and_reset (74,654 samples, 1.50%)</title><rect x="53.5558%" y="437" width="1.5003%" height="15" fill="rgb(219,138,40)" fg:x="2664899" fg:w="74654"/><text x="53.8058%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::inject (721 samples, 0.01%)</title><rect x="55.0561%" y="437" width="0.0145%" height="15" fill="rgb(241,228,46)" fg:x="2739553" fg:w="721"/><text x="55.3061%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (616 samples, 0.01%)</title><rect x="55.0707%" y="421" width="0.0124%" height="15" fill="rgb(223,209,38)" fg:x="2740277" fg:w="616"/><text x="55.3207%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (623 samples, 0.01%)</title><rect x="55.0706%" y="437" width="0.0125%" height="15" fill="rgb(236,164,45)" fg:x="2740274" fg:w="623"/><text x="55.3206%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::in_worker_cold (76,937 samples, 1.55%)</title><rect x="53.5432%" y="453" width="1.5462%" height="15" fill="rgb(231,15,5)" fg:x="2664270" fg:w="76937"/><text x="53.7932%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (77,658 samples, 1.56%)</title><rect x="53.5352%" y="469" width="1.5607%" height="15" fill="rgb(252,35,15)" fg:x="2663872" fg:w="77658"/><text x="53.7852%" y="479.50"></text></g><g><title>hai606i_sudoku`graph_builder::input::edgelist::Edges::degrees (78,849 samples, 1.58%)</title><rect x="53.5309%" y="485" width="1.5846%" height="15" fill="rgb(248,181,18)" fg:x="2663657" fg:w="78849"/><text x="53.7809%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (103,200 samples, 2.07%)</title><rect x="55.1714%" y="437" width="2.0740%" height="15" fill="rgb(233,39,42)" fg:x="2745290" fg:w="103200"/><text x="55.4214%" y="447.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (2,713 samples, 0.05%)</title><rect x="57.2698%" y="421" width="0.0545%" height="15" fill="rgb(238,110,33)" fg:x="2849705" fg:w="2713"/><text x="57.5198%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (5,539 samples, 0.11%)</title><rect x="57.3255%" y="405" width="0.1113%" height="15" fill="rgb(233,195,10)" fg:x="2852473" fg:w="5539"/><text x="57.5755%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5,629 samples, 0.11%)</title><rect x="57.3244%" y="421" width="0.1131%" height="15" fill="rgb(254,105,3)" fg:x="2852418" fg:w="5629"/><text x="57.5744%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (10,115 samples, 0.20%)</title><rect x="57.2456%" y="437" width="0.2033%" height="15" fill="rgb(221,225,9)" fg:x="2848497" fg:w="10115"/><text x="57.4956%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::latch::LockLatch::wait_and_reset (114,707 samples, 2.31%)</title><rect x="55.1471%" y="453" width="2.3052%" height="15" fill="rgb(224,227,45)" fg:x="2744078" fg:w="114707"/><text x="55.3971%" y="463.50">h..</text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Injector&lt;T&gt;::push (503 samples, 0.01%)</title><rect x="57.4614%" y="437" width="0.0101%" height="15" fill="rgb(229,198,43)" fg:x="2859235" fg:w="503"/><text x="57.7114%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::inject (994 samples, 0.02%)</title><rect x="57.4523%" y="453" width="0.0200%" height="15" fill="rgb(206,209,35)" fg:x="2858785" fg:w="994"/><text x="57.7023%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (876 samples, 0.02%)</title><rect x="57.4724%" y="437" width="0.0176%" height="15" fill="rgb(245,195,53)" fg:x="2859785" fg:w="876"/><text x="57.7224%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (886 samples, 0.02%)</title><rect x="57.4723%" y="453" width="0.0178%" height="15" fill="rgb(240,92,26)" fg:x="2859779" fg:w="886"/><text x="57.7223%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::Registry::in_worker_cold (117,912 samples, 2.37%)</title><rect x="55.1294%" y="469" width="2.3696%" height="15" fill="rgb(207,40,23)" fg:x="2743198" fg:w="117912"/><text x="55.3794%" y="479.50">ha..</text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (119,043 samples, 2.39%)</title><rect x="55.1155%" y="485" width="2.3924%" height="15" fill="rgb(223,111,35)" fg:x="2742506" fg:w="119043"/><text x="55.3655%" y="495.50">ha..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2,721 samples, 0.05%)</title><rect x="57.5391%" y="453" width="0.0547%" height="15" fill="rgb(229,147,28)" fg:x="2863101" fg:w="2721"/><text x="57.7891%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3,779 samples, 0.08%)</title><rect x="57.5196%" y="469" width="0.0759%" height="15" fill="rgb(211,29,28)" fg:x="2862131" fg:w="3779"/><text x="57.7696%" y="479.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::time::Timespec::now (4,021 samples, 0.08%)</title><rect x="57.5157%" y="485" width="0.0808%" height="15" fill="rgb(228,72,33)" fg:x="2861940" fg:w="4021"/><text x="57.7657%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (560 samples, 0.01%)</title><rect x="57.6127%" y="485" width="0.0113%" height="15" fill="rgb(205,214,31)" fg:x="2866767" fg:w="560"/><text x="57.8627%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (918 samples, 0.02%)</title><rect x="57.6317%" y="453" width="0.0184%" height="15" fill="rgb(224,111,15)" fg:x="2867710" fg:w="918"/><text x="57.8817%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1,324 samples, 0.03%)</title><rect x="57.6268%" y="469" width="0.0266%" height="15" fill="rgb(253,21,26)" fg:x="2867466" fg:w="1324"/><text x="57.8768%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1,511 samples, 0.03%)</title><rect x="57.6240%" y="485" width="0.0304%" height="15" fill="rgb(245,139,43)" fg:x="2867327" fg:w="1511"/><text x="57.8740%" y="495.50"></text></g><g><title>hai606i_sudoku`graph_builder::builder::GraphBuilder&lt;graph_builder::builder::FromEdges&lt;NI,Edges&gt;&gt;::build (209,359 samples, 4.21%)</title><rect x="53.4656%" y="501" width="4.2074%" height="15" fill="rgb(252,170,7)" fg:x="2660411" fg:w="209359"/><text x="53.7156%" y="511.50">hai60..</text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (2,142 samples, 0.04%)</title><rect x="57.6733%" y="501" width="0.0430%" height="15" fill="rgb(231,118,14)" fg:x="2869783" fg:w="2142"/><text x="57.9233%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,380 samples, 0.07%)</title><rect x="59.0012%" y="453" width="0.0679%" height="15" fill="rgb(238,83,0)" fg:x="2935855" fg:w="3380"/><text x="59.2512%" y="463.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (58,414 samples, 1.17%)</title><rect x="57.9823%" y="469" width="1.1739%" height="15" fill="rgb(221,39,39)" fg:x="2885156" fg:w="58414"/><text x="58.2323%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (4,335 samples, 0.09%)</title><rect x="59.0691%" y="453" width="0.0871%" height="15" fill="rgb(222,119,46)" fg:x="2939235" fg:w="4335"/><text x="59.3191%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71,208 samples, 1.43%)</title><rect x="57.7608%" y="485" width="1.4311%" height="15" fill="rgb(222,165,49)" fg:x="2874134" fg:w="71208"/><text x="58.0108%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,772 samples, 0.04%)</title><rect x="59.1562%" y="469" width="0.0356%" height="15" fill="rgb(219,113,52)" fg:x="2943570" fg:w="1772"/><text x="59.4062%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (661 samples, 0.01%)</title><rect x="59.2004%" y="437" width="0.0133%" height="15" fill="rgb(214,7,15)" fg:x="2945767" fg:w="661"/><text x="59.4504%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (754 samples, 0.02%)</title><rect x="59.1992%" y="453" width="0.0152%" height="15" fill="rgb(235,32,4)" fg:x="2945706" fg:w="754"/><text x="59.4492%" y="463.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (1,052 samples, 0.02%)</title><rect x="59.1981%" y="469" width="0.0211%" height="15" fill="rgb(238,90,54)" fg:x="2945652" fg:w="1052"/><text x="59.4481%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,330 samples, 0.03%)</title><rect x="59.1945%" y="485" width="0.0267%" height="15" fill="rgb(213,208,19)" fg:x="2945473" fg:w="1330"/><text x="59.4445%" y="495.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,283 samples, 0.03%)</title><rect x="59.2219%" y="485" width="0.0258%" height="15" fill="rgb(233,156,4)" fg:x="2946837" fg:w="1283"/><text x="59.4719%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,322 samples, 0.09%)</title><rect x="59.3165%" y="453" width="0.0869%" height="15" fill="rgb(207,194,5)" fg:x="2951546" fg:w="4322"/><text x="59.5665%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,829 samples, 0.14%)</title><rect x="59.2821%" y="469" width="0.1372%" height="15" fill="rgb(206,111,30)" fg:x="2949832" fg:w="6829"/><text x="59.5321%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (769 samples, 0.02%)</title><rect x="59.4039%" y="453" width="0.0155%" height="15" fill="rgb(243,70,54)" fg:x="2955892" fg:w="769"/><text x="59.6539%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (522 samples, 0.01%)</title><rect x="59.4088%" y="437" width="0.0105%" height="15" fill="rgb(242,28,8)" fg:x="2956139" fg:w="522"/><text x="59.6588%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,015 samples, 0.04%)</title><rect x="59.4446%" y="469" width="0.0405%" height="15" fill="rgb(219,106,18)" fg:x="2957919" fg:w="2015"/><text x="59.6946%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (619 samples, 0.01%)</title><rect x="59.4851%" y="469" width="0.0124%" height="15" fill="rgb(244,222,10)" fg:x="2959934" fg:w="619"/><text x="59.7351%" y="479.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_group (14,853 samples, 0.30%)</title><rect x="59.2477%" y="485" width="0.2985%" height="15" fill="rgb(236,179,52)" fg:x="2948120" fg:w="14853"/><text x="59.4977%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,326 samples, 0.05%)</title><rect x="59.4994%" y="469" width="0.0467%" height="15" fill="rgb(213,23,39)" fg:x="2960647" fg:w="2326"/><text x="59.7494%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5,905 samples, 0.12%)</title><rect x="59.5562%" y="485" width="0.1187%" height="15" fill="rgb(238,48,10)" fg:x="2963472" fg:w="5905"/><text x="59.8062%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_strong_links (99,586 samples, 2.00%)</title><rect x="57.7168%" y="501" width="2.0014%" height="15" fill="rgb(251,196,23)" fg:x="2871946" fg:w="99586"/><text x="57.9668%" y="511.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1,413 samples, 0.03%)</title><rect x="59.6898%" y="485" width="0.0284%" height="15" fill="rgb(250,152,24)" fg:x="2970119" fg:w="1413"/><text x="59.9398%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,451 samples, 0.07%)</title><rect x="59.8944%" y="485" width="0.0694%" height="15" fill="rgb(209,150,17)" fg:x="2980300" fg:w="3451"/><text x="60.1444%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,502 samples, 0.07%)</title><rect x="59.9788%" y="485" width="0.0704%" height="15" fill="rgb(234,202,34)" fg:x="2984502" fg:w="3502"/><text x="60.2288%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (617 samples, 0.01%)</title><rect x="60.1839%" y="469" width="0.0124%" height="15" fill="rgb(253,148,53)" fg:x="2994705" fg:w="617"/><text x="60.4339%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (580 samples, 0.01%)</title><rect x="60.1964%" y="469" width="0.0117%" height="15" fill="rgb(218,129,16)" fg:x="2995330" fg:w="580"/><text x="60.4464%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7,179 samples, 0.14%)</title><rect x="60.2081%" y="469" width="0.1443%" height="15" fill="rgb(216,85,19)" fg:x="2995910" fg:w="7179"/><text x="60.4581%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15,156 samples, 0.30%)</title><rect x="60.0492%" y="485" width="0.3046%" height="15" fill="rgb(235,228,7)" fg:x="2988004" fg:w="15156"/><text x="60.2992%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,244 samples, 0.03%)</title><rect x="60.3553%" y="485" width="0.0250%" height="15" fill="rgb(245,175,0)" fg:x="3003236" fg:w="1244"/><text x="60.6053%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34,610 samples, 0.70%)</title><rect x="59.7182%" y="501" width="0.6955%" height="15" fill="rgb(208,168,36)" fg:x="2971532" fg:w="34610"/><text x="59.9682%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,377 samples, 0.03%)</title><rect x="60.3860%" y="485" width="0.0277%" height="15" fill="rgb(246,171,24)" fg:x="3004765" fg:w="1377"/><text x="60.6360%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (750 samples, 0.02%)</title><rect x="60.4751%" y="485" width="0.0151%" height="15" fill="rgb(215,142,24)" fg:x="3009195" fg:w="750"/><text x="60.7251%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,069 samples, 0.04%)</title><rect x="60.5258%" y="469" width="0.0416%" height="15" fill="rgb(250,187,7)" fg:x="3011718" fg:w="2069"/><text x="60.7758%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,576 samples, 0.07%)</title><rect x="60.4988%" y="485" width="0.0719%" height="15" fill="rgb(228,66,33)" fg:x="3010374" fg:w="3576"/><text x="60.7488%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (7,841 samples, 0.16%)</title><rect x="60.4137%" y="501" width="0.1576%" height="15" fill="rgb(234,215,21)" fg:x="3006142" fg:w="7841"/><text x="60.6637%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (945 samples, 0.02%)</title><rect x="60.5713%" y="501" width="0.0190%" height="15" fill="rgb(222,191,20)" fg:x="3013983" fg:w="945"/><text x="60.8213%" y="511.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1,698 samples, 0.03%)</title><rect x="60.5973%" y="501" width="0.0341%" height="15" fill="rgb(245,79,54)" fg:x="3015278" fg:w="1698"/><text x="60.8473%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (714 samples, 0.01%)</title><rect x="60.6314%" y="501" width="0.0143%" height="15" fill="rgb(240,10,37)" fg:x="3016976" fg:w="714"/><text x="60.8814%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (2,205 samples, 0.04%)</title><rect x="60.6458%" y="501" width="0.0443%" height="15" fill="rgb(214,192,32)" fg:x="3017691" fg:w="2205"/><text x="60.8958%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (35,768 samples, 0.72%)</title><rect x="60.6930%" y="501" width="0.7188%" height="15" fill="rgb(209,36,54)" fg:x="3020041" fg:w="35768"/><text x="60.9430%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13,012 samples, 0.26%)</title><rect x="61.4296%" y="501" width="0.2615%" height="15" fill="rgb(220,10,11)" fg:x="3056690" fg:w="13012"/><text x="61.6796%" y="511.50"></text></g><g><title>libsystem_platform.dylib`__bzero (590 samples, 0.01%)</title><rect x="61.6935%" y="501" width="0.0119%" height="15" fill="rgb(221,106,17)" fg:x="3069822" fg:w="590"/><text x="61.9435%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::simple_coloring (551,172 samples, 11.08%)</title><rect x="50.6898%" y="517" width="11.0768%" height="15" fill="rgb(251,142,44)" fg:x="2522285" fg:w="551172"/><text x="50.9398%" y="527.50">hai606i_sudoku`h..</text></g><g><title>libsystem_platform.dylib`_platform_memset (2,859 samples, 0.06%)</title><rect x="61.7091%" y="501" width="0.0575%" height="15" fill="rgb(238,13,15)" fg:x="3070598" fg:w="2859"/><text x="61.9591%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9,120 samples, 0.18%)</title><rect x="64.1249%" y="469" width="0.1833%" height="15" fill="rgb(208,107,27)" fg:x="3190806" fg:w="9120"/><text x="64.3749%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (118,727 samples, 2.39%)</title><rect x="62.2100%" y="485" width="2.3860%" height="15" fill="rgb(205,136,37)" fg:x="3095525" fg:w="118727"/><text x="62.4600%" y="495.50">ha..</text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (14,326 samples, 0.29%)</title><rect x="64.3082%" y="469" width="0.2879%" height="15" fill="rgb(250,205,27)" fg:x="3199926" fg:w="14326"/><text x="64.5582%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (135,735 samples, 2.73%)</title><rect x="61.9445%" y="501" width="2.7278%" height="15" fill="rgb(210,80,43)" fg:x="3082313" fg:w="135735"/><text x="62.1945%" y="511.50">ha..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3,796 samples, 0.08%)</title><rect x="64.5961%" y="485" width="0.0763%" height="15" fill="rgb(247,160,36)" fg:x="3214252" fg:w="3796"/><text x="64.8461%" y="495.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (512 samples, 0.01%)</title><rect x="64.6840%" y="501" width="0.0103%" height="15" fill="rgb(234,13,49)" fg:x="3218630" fg:w="512"/><text x="64.9340%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (798 samples, 0.02%)</title><rect x="64.6946%" y="501" width="0.0160%" height="15" fill="rgb(234,122,0)" fg:x="3219156" fg:w="798"/><text x="64.9446%" y="511.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5,583 samples, 0.11%)</title><rect x="64.7106%" y="501" width="0.1122%" height="15" fill="rgb(207,146,38)" fg:x="3219954" fg:w="5583"/><text x="64.9606%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (570 samples, 0.01%)</title><rect x="64.9061%" y="485" width="0.0115%" height="15" fill="rgb(207,177,25)" fg:x="3229681" fg:w="570"/><text x="65.1561%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (5,537 samples, 0.11%)</title><rect x="64.8228%" y="501" width="0.1113%" height="15" fill="rgb(211,178,42)" fg:x="3225537" fg:w="5537"/><text x="65.0728%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,305 samples, 0.05%)</title><rect x="65.1295%" y="485" width="0.0463%" height="15" fill="rgb(230,69,54)" fg:x="3240798" fg:w="2305"/><text x="65.3795%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,527 samples, 0.03%)</title><rect x="65.1759%" y="485" width="0.0307%" height="15" fill="rgb(214,135,41)" fg:x="3243103" fg:w="1527"/><text x="65.4259%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (861 samples, 0.02%)</title><rect x="65.2484%" y="469" width="0.0173%" height="15" fill="rgb(237,67,25)" fg:x="3246714" fg:w="861"/><text x="65.4984%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (845 samples, 0.02%)</title><rect x="65.2678%" y="469" width="0.0170%" height="15" fill="rgb(222,189,50)" fg:x="3247675" fg:w="845"/><text x="65.5178%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,091 samples, 0.02%)</title><rect x="65.3315%" y="453" width="0.0219%" height="15" fill="rgb(245,148,34)" fg:x="3250849" fg:w="1091"/><text x="65.5815%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (717 samples, 0.01%)</title><rect x="65.3686%" y="453" width="0.0144%" height="15" fill="rgb(222,29,6)" fg:x="3252695" fg:w="717"/><text x="65.6186%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5,235 samples, 0.11%)</title><rect x="65.2847%" y="469" width="0.1052%" height="15" fill="rgb(221,189,43)" fg:x="3248520" fg:w="5235"/><text x="65.5347%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9,525 samples, 0.19%)</title><rect x="65.2066%" y="485" width="0.1914%" height="15" fill="rgb(207,36,27)" fg:x="3244630" fg:w="9525"/><text x="65.4566%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (23,080 samples, 0.46%)</title><rect x="64.9355%" y="501" width="0.4638%" height="15" fill="rgb(217,90,24)" fg:x="3231142" fg:w="23080"/><text x="65.1855%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,286 samples, 0.03%)</title><rect x="65.3997%" y="501" width="0.0258%" height="15" fill="rgb(224,66,35)" fg:x="3254243" fg:w="1286"/><text x="65.6497%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5,514 samples, 0.11%)</title><rect x="65.4256%" y="501" width="0.1108%" height="15" fill="rgb(221,13,50)" fg:x="3255529" fg:w="5514"/><text x="65.6756%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (618 samples, 0.01%)</title><rect x="65.5438%" y="501" width="0.0124%" height="15" fill="rgb(236,68,49)" fg:x="3261412" fg:w="618"/><text x="65.7938%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::skyscraper (188,828 samples, 3.79%)</title><rect x="61.7665%" y="517" width="3.7948%" height="15" fill="rgb(229,146,28)" fg:x="3073457" fg:w="188828"/><text x="62.0165%" y="527.50">hai6..</text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (690 samples, 0.01%)</title><rect x="66.1730%" y="469" width="0.0139%" height="15" fill="rgb(225,31,38)" fg:x="3292721" fg:w="690"/><text x="66.4230%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,188 samples, 0.02%)</title><rect x="66.1869%" y="469" width="0.0239%" height="15" fill="rgb(250,208,3)" fg:x="3293412" fg:w="1188"/><text x="66.4369%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,513 samples, 0.13%)</title><rect x="66.0813%" y="485" width="0.1309%" height="15" fill="rgb(246,54,23)" fg:x="3288155" fg:w="6513"/><text x="66.3313%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (524 samples, 0.01%)</title><rect x="66.2706%" y="469" width="0.0105%" height="15" fill="rgb(243,76,11)" fg:x="3297575" fg:w="524"/><text x="66.5206%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (4,624 samples, 0.09%)</title><rect x="66.2122%" y="485" width="0.0929%" height="15" fill="rgb(245,21,50)" fg:x="3294668" fg:w="4624"/><text x="66.4622%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,193 samples, 0.02%)</title><rect x="66.2811%" y="469" width="0.0240%" height="15" fill="rgb(228,9,43)" fg:x="3298099" fg:w="1193"/><text x="66.5311%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,886 samples, 0.24%)</title><rect x="66.0662%" y="501" width="0.2389%" height="15" fill="rgb(208,100,47)" fg:x="3287407" fg:w="11886"/><text x="66.3162%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17,270 samples, 0.35%)</title><rect x="69.2622%" y="485" width="0.3471%" height="15" fill="rgb(232,26,8)" fg:x="3446436" fg:w="17270"/><text x="69.5122%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (33,486 samples, 0.67%)</title><rect x="69.6093%" y="485" width="0.6730%" height="15" fill="rgb(216,166,38)" fg:x="3463706" fg:w="33486"/><text x="69.8593%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,057 samples, 0.10%)</title><rect x="70.6572%" y="469" width="0.1016%" height="15" fill="rgb(251,202,51)" fg:x="3515849" fg:w="5057"/><text x="70.9072%" y="479.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (767 samples, 0.02%)</title><rect x="70.7718%" y="469" width="0.0154%" height="15" fill="rgb(254,216,34)" fg:x="3521553" fg:w="767"/><text x="71.0218%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,272 samples, 0.21%)</title><rect x="70.7876%" y="469" width="0.2064%" height="15" fill="rgb(251,32,27)" fg:x="3522339" fg:w="10272"/><text x="71.0376%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (707 samples, 0.01%)</title><rect x="71.2172%" y="453" width="0.0142%" height="15" fill="rgb(208,127,28)" fg:x="3543715" fg:w="707"/><text x="71.4672%" y="463.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,639 samples, 0.03%)</title><rect x="71.2314%" y="453" width="0.0329%" height="15" fill="rgb(224,137,22)" fg:x="3544423" fg:w="1639"/><text x="71.4814%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,392 samples, 0.03%)</title><rect x="71.2648%" y="453" width="0.0280%" height="15" fill="rgb(254,70,32)" fg:x="3546085" fg:w="1392"/><text x="71.5148%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14,116 samples, 0.28%)</title><rect x="71.2928%" y="453" width="0.2837%" height="15" fill="rgb(229,75,37)" fg:x="3547477" fg:w="14116"/><text x="71.5428%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29,144 samples, 0.59%)</title><rect x="70.9940%" y="469" width="0.5857%" height="15" fill="rgb(252,64,23)" fg:x="3532611" fg:w="29144"/><text x="71.2440%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,939 samples, 0.06%)</title><rect x="71.5851%" y="469" width="0.0591%" height="15" fill="rgb(232,162,48)" fg:x="3562023" fg:w="2939"/><text x="71.8351%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (70,469 samples, 1.42%)</title><rect x="70.2822%" y="485" width="1.4162%" height="15" fill="rgb(246,160,12)" fg:x="3497192" fg:w="70469"/><text x="70.5322%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2,327 samples, 0.05%)</title><rect x="71.6517%" y="469" width="0.0468%" height="15" fill="rgb(247,166,0)" fg:x="3565334" fg:w="2327"/><text x="71.9017%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (269,456 samples, 5.42%)</title><rect x="66.3051%" y="501" width="5.4152%" height="15" fill="rgb(249,219,21)" fg:x="3299293" fg:w="269456"/><text x="66.5551%" y="511.50">hai606i..</text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,088 samples, 0.02%)</title><rect x="71.6984%" y="485" width="0.0219%" height="15" fill="rgb(205,209,3)" fg:x="3567661" fg:w="1088"/><text x="71.9484%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (548 samples, 0.01%)</title><rect x="71.7509%" y="453" width="0.0110%" height="15" fill="rgb(243,44,1)" fg:x="3570271" fg:w="548"/><text x="72.0009%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,797 samples, 0.04%)</title><rect x="71.7301%" y="469" width="0.0361%" height="15" fill="rgb(206,159,16)" fg:x="3569238" fg:w="1797"/><text x="71.9801%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,717 samples, 0.07%)</title><rect x="71.7215%" y="485" width="0.0747%" height="15" fill="rgb(244,77,30)" fg:x="3568809" fg:w="3717"/><text x="71.9715%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (1,491 samples, 0.03%)</title><rect x="71.7662%" y="469" width="0.0300%" height="15" fill="rgb(218,69,12)" fg:x="3571035" fg:w="1491"/><text x="72.0162%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (652 samples, 0.01%)</title><rect x="71.7831%" y="453" width="0.0131%" height="15" fill="rgb(212,87,7)" fg:x="3571874" fg:w="652"/><text x="72.0331%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,273 samples, 0.09%)</title><rect x="71.7203%" y="501" width="0.0859%" height="15" fill="rgb(245,114,25)" fg:x="3568749" fg:w="4273"/><text x="71.9703%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (2,339 samples, 0.05%)</title><rect x="71.8124%" y="501" width="0.0470%" height="15" fill="rgb(210,61,42)" fg:x="3573331" fg:w="2339"/><text x="72.0624%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (1,576 samples, 0.03%)</title><rect x="71.8594%" y="501" width="0.0317%" height="15" fill="rgb(211,52,33)" fg:x="3575670" fg:w="1576"/><text x="72.1094%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,197 samples, 0.04%)</title><rect x="71.8911%" y="501" width="0.0442%" height="15" fill="rgb(234,58,33)" fg:x="3577246" fg:w="2197"/><text x="72.1411%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,075 samples, 0.02%)</title><rect x="71.9360%" y="501" width="0.0216%" height="15" fill="rgb(220,115,36)" fg:x="3579482" fg:w="1075"/><text x="72.1860%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (824 samples, 0.02%)</title><rect x="71.9410%" y="485" width="0.0166%" height="15" fill="rgb(243,153,54)" fg:x="3579733" fg:w="824"/><text x="72.1910%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13,724 samples, 0.28%)</title><rect x="71.9667%" y="501" width="0.2758%" height="15" fill="rgb(251,47,18)" fg:x="3581010" fg:w="13724"/><text x="72.2167%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::swordfish (334,702 samples, 6.73%)</title><rect x="65.5614%" y="517" width="6.7264%" height="15" fill="rgb(242,102,42)" fg:x="3262285" fg:w="334702"/><text x="65.8114%" y="527.50">hai606i_s..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1,563 samples, 0.03%)</title><rect x="72.2564%" y="501" width="0.0314%" height="15" fill="rgb(234,31,38)" fg:x="3595424" fg:w="1563"/><text x="72.5064%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,643 samples, 0.03%)</title><rect x="74.2357%" y="501" width="0.0330%" height="15" fill="rgb(221,117,51)" fg:x="3693913" fg:w="1643"/><text x="74.4857%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,843 samples, 0.22%)</title><rect x="74.2687%" y="501" width="0.2179%" height="15" fill="rgb(212,20,18)" fg:x="3695556" fg:w="10843"/><text x="74.5187%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,325 samples, 0.07%)</title><rect x="75.6822%" y="485" width="0.0668%" height="15" fill="rgb(245,133,36)" fg:x="3765892" fg:w="3325"/><text x="75.9322%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (6,212 samples, 0.12%)</title><rect x="75.7491%" y="485" width="0.1248%" height="15" fill="rgb(212,6,19)" fg:x="3769217" fg:w="6212"/><text x="75.9991%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,062 samples, 0.06%)</title><rect x="76.0200%" y="469" width="0.0615%" height="15" fill="rgb(218,1,36)" fg:x="3782699" fg:w="3062"/><text x="76.2700%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,903 samples, 0.04%)</title><rect x="76.0909%" y="469" width="0.0382%" height="15" fill="rgb(246,84,54)" fg:x="3786228" fg:w="1903"/><text x="76.3409%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (535 samples, 0.01%)</title><rect x="76.2040%" y="453" width="0.0108%" height="15" fill="rgb(242,110,6)" fg:x="3791854" fg:w="535"/><text x="76.4540%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,801 samples, 0.10%)</title><rect x="76.2262%" y="453" width="0.0965%" height="15" fill="rgb(214,47,5)" fg:x="3792960" fg:w="4801"/><text x="76.4762%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9,672 samples, 0.19%)</title><rect x="76.1292%" y="469" width="0.1944%" height="15" fill="rgb(218,159,25)" fg:x="3788131" fg:w="9672"/><text x="76.3792%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (943 samples, 0.02%)</title><rect x="76.3251%" y="469" width="0.0190%" height="15" fill="rgb(215,211,28)" fg:x="3797882" fg:w="943"/><text x="76.5751%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24,498 samples, 0.49%)</title><rect x="75.8739%" y="485" width="0.4923%" height="15" fill="rgb(238,59,32)" fg:x="3775429" fg:w="24498"/><text x="76.1239%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (980 samples, 0.02%)</title><rect x="76.3465%" y="469" width="0.0197%" height="15" fill="rgb(226,82,3)" fg:x="3798947" fg:w="980"/><text x="76.5965%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93,989 samples, 1.89%)</title><rect x="74.4866%" y="501" width="1.8889%" height="15" fill="rgb(240,164,32)" fg:x="3706399" fg:w="93989"/><text x="74.7366%" y="511.50">h..</text></g><g><title>hai606i_sudoku`DYLD-STUB$$malloc (553 samples, 0.01%)</title><rect x="76.3759%" y="501" width="0.0111%" height="15" fill="rgb(232,46,7)" fg:x="3800407" fg:w="553"/><text x="76.6259%" y="511.50"></text></g><g><title>hai606i_sudoku`DYLD-STUB$$memcpy (2,013 samples, 0.04%)</title><rect x="76.3870%" y="501" width="0.0405%" height="15" fill="rgb(229,129,53)" fg:x="3800960" fg:w="2013"/><text x="76.6370%" y="511.50"></text></g><g><title>hai606i_sudoku`__rdl_alloc (1,016 samples, 0.02%)</title><rect x="76.4274%" y="501" width="0.0204%" height="15" fill="rgb(234,188,29)" fg:x="3802973" fg:w="1016"/><text x="76.6774%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (6,813 samples, 0.14%)</title><rect x="76.4638%" y="501" width="0.1369%" height="15" fill="rgb(246,141,4)" fg:x="3804780" fg:w="6813"/><text x="76.7138%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15,814 samples, 0.32%)</title><rect x="78.7942%" y="485" width="0.3178%" height="15" fill="rgb(229,23,39)" fg:x="3920742" fg:w="15814"/><text x="79.0442%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,215 samples, 0.21%)</title><rect x="79.1120%" y="485" width="0.2053%" height="15" fill="rgb(206,12,3)" fg:x="3936556" fg:w="10215"/><text x="79.3620%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (146,193 samples, 2.94%)</title><rect x="76.6007%" y="501" width="2.9380%" height="15" fill="rgb(252,226,20)" fg:x="3811593" fg:w="146193"/><text x="76.8507%" y="511.50">ha..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (11,015 samples, 0.22%)</title><rect x="79.3173%" y="485" width="0.2214%" height="15" fill="rgb(216,123,35)" fg:x="3946771" fg:w="11015"/><text x="79.5673%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,256 samples, 0.03%)</title><rect x="79.5387%" y="501" width="0.0252%" height="15" fill="rgb(212,68,40)" fg:x="3957786" fg:w="1256"/><text x="79.7887%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,535 samples, 0.07%)</title><rect x="79.5759%" y="501" width="0.0710%" height="15" fill="rgb(254,125,32)" fg:x="3959638" fg:w="3535"/><text x="79.8259%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27,465 samples, 0.55%)</title><rect x="79.6469%" y="501" width="0.5520%" height="15" fill="rgb(253,97,22)" fg:x="3963173" fg:w="27465"/><text x="79.8969%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8,400 samples, 0.17%)</title><rect x="80.2063%" y="501" width="0.1688%" height="15" fill="rgb(241,101,14)" fg:x="3991005" fg:w="8400"/><text x="80.4563%" y="511.50"></text></g><g><title>libsystem_platform.dylib`__bzero (499 samples, 0.01%)</title><rect x="80.3751%" y="501" width="0.0100%" height="15" fill="rgb(238,103,29)" fg:x="3999405" fg:w="499"/><text x="80.6251%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16,313 samples, 0.33%)</title><rect x="80.3851%" y="501" width="0.3278%" height="15" fill="rgb(233,195,47)" fg:x="3999904" fg:w="16313"/><text x="80.6351%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::w_wing (423,595 samples, 8.51%)</title><rect x="72.2878%" y="517" width="8.5129%" height="15" fill="rgb(246,218,30)" fg:x="3596987" fg:w="423595"/><text x="72.5378%" y="527.50">hai606i_sudo..</text></g><g><title>libsystem_platform.dylib`_platform_memset (4,365 samples, 0.09%)</title><rect x="80.7130%" y="501" width="0.0877%" height="15" fill="rgb(219,145,47)" fg:x="4016217" fg:w="4365"/><text x="80.9630%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,693 samples, 0.11%)</title><rect x="82.1517%" y="485" width="0.1144%" height="15" fill="rgb(243,12,26)" fg:x="4087810" fg:w="5693"/><text x="82.4017%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (10,135 samples, 0.20%)</title><rect x="82.2662%" y="485" width="0.2037%" height="15" fill="rgb(214,87,16)" fg:x="4093503" fg:w="10135"/><text x="82.5162%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,526 samples, 0.03%)</title><rect x="82.5942%" y="469" width="0.0307%" height="15" fill="rgb(208,99,42)" fg:x="4109825" fg:w="1526"/><text x="82.8442%" y="479.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (3,006 samples, 0.06%)</title><rect x="82.6328%" y="469" width="0.0604%" height="15" fill="rgb(253,99,2)" fg:x="4111749" fg:w="3006"/><text x="82.8828%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4,764 samples, 0.10%)</title><rect x="82.7830%" y="453" width="0.0957%" height="15" fill="rgb(220,168,23)" fg:x="4119222" fg:w="4764"/><text x="83.0330%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9,286 samples, 0.19%)</title><rect x="82.6933%" y="469" width="0.1866%" height="15" fill="rgb(242,38,24)" fg:x="4114755" fg:w="9286"/><text x="82.9433%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (820 samples, 0.02%)</title><rect x="82.8816%" y="469" width="0.0165%" height="15" fill="rgb(225,182,9)" fg:x="4124126" fg:w="820"/><text x="83.1316%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22,165 samples, 0.45%)</title><rect x="82.4698%" y="485" width="0.4454%" height="15" fill="rgb(243,178,37)" fg:x="4103638" fg:w="22165"/><text x="82.7198%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (755 samples, 0.02%)</title><rect x="82.9001%" y="469" width="0.0152%" height="15" fill="rgb(232,139,19)" fg:x="4125048" fg:w="755"/><text x="83.1501%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93,665 samples, 1.88%)</title><rect x="81.0397%" y="501" width="1.8824%" height="15" fill="rgb(225,201,24)" fg:x="4032474" fg:w="93665"/><text x="81.2897%" y="511.50">h..</text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (543 samples, 0.01%)</title><rect x="82.9311%" y="437" width="0.0109%" height="15" fill="rgb(221,47,46)" fg:x="4126588" fg:w="543"/><text x="83.1811%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (762 samples, 0.02%)</title><rect x="82.9278%" y="453" width="0.0153%" height="15" fill="rgb(249,23,13)" fg:x="4126426" fg:w="762"/><text x="83.1778%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (832 samples, 0.02%)</title><rect x="82.9269%" y="469" width="0.0167%" height="15" fill="rgb(219,9,5)" fg:x="4126381" fg:w="832"/><text x="83.1769%" y="479.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::finish_grow (1,092 samples, 0.02%)</title><rect x="82.9258%" y="485" width="0.0219%" height="15" fill="rgb(254,171,16)" fg:x="4126324" fg:w="1092"/><text x="83.1758%" y="495.50"></text></g><g><title>hai606i_sudoku`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,289 samples, 0.03%)</title><rect x="82.9234%" y="501" width="0.0259%" height="15" fill="rgb(230,171,20)" fg:x="4126206" fg:w="1289"/><text x="83.1734%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (1,051 samples, 0.02%)</title><rect x="82.9496%" y="501" width="0.0211%" height="15" fill="rgb(210,71,41)" fg:x="4127513" fg:w="1051"/><text x="83.1996%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (1,830 samples, 0.04%)</title><rect x="82.9708%" y="501" width="0.0368%" height="15" fill="rgb(206,173,20)" fg:x="4128564" fg:w="1830"/><text x="83.2208%" y="511.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (608 samples, 0.01%)</title><rect x="83.0075%" y="501" width="0.0122%" height="15" fill="rgb(233,88,34)" fg:x="4130394" fg:w="608"/><text x="83.2575%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4,783 samples, 0.10%)</title><rect x="83.0232%" y="501" width="0.0961%" height="15" fill="rgb(223,209,46)" fg:x="4131174" fg:w="4783"/><text x="83.2732%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::x_wing (116,730 samples, 2.35%)</title><rect x="80.8007%" y="517" width="2.3459%" height="15" fill="rgb(250,43,18)" fg:x="4020582" fg:w="116730"/><text x="81.0507%" y="527.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memset (633 samples, 0.01%)</title><rect x="83.1339%" y="501" width="0.0127%" height="15" fill="rgb(208,13,10)" fg:x="4136679" fg:w="633"/><text x="83.3839%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (597 samples, 0.01%)</title><rect x="83.4675%" y="469" width="0.0120%" height="15" fill="rgb(212,200,36)" fg:x="4153282" fg:w="597"/><text x="83.7175%" y="479.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10,545 samples, 0.21%)</title><rect x="83.2844%" y="485" width="0.2119%" height="15" fill="rgb(225,90,30)" fg:x="4144170" fg:w="10545"/><text x="83.5344%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (836 samples, 0.02%)</title><rect x="83.4795%" y="469" width="0.0168%" height="15" fill="rgb(236,182,39)" fg:x="4153879" fg:w="836"/><text x="83.7295%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,197 samples, 0.27%)</title><rect x="83.2417%" y="501" width="0.2652%" height="15" fill="rgb(212,144,35)" fg:x="4142043" fg:w="13197"/><text x="83.4917%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (525 samples, 0.01%)</title><rect x="83.4963%" y="485" width="0.0106%" height="15" fill="rgb(228,63,44)" fg:x="4154715" fg:w="525"/><text x="83.7463%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (584 samples, 0.01%)</title><rect x="83.7001%" y="485" width="0.0117%" height="15" fill="rgb(228,109,6)" fg:x="4164857" fg:w="584"/><text x="83.9501%" y="495.50"></text></g><g><title>hai606i_sudoku`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10,240 samples, 0.21%)</title><rect x="83.5225%" y="501" width="0.2058%" height="15" fill="rgb(238,117,24)" fg:x="4156019" fg:w="10240"/><text x="83.7725%" y="511.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (818 samples, 0.02%)</title><rect x="83.7119%" y="485" width="0.0164%" height="15" fill="rgb(242,26,26)" fg:x="4165441" fg:w="818"/><text x="83.9619%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (532 samples, 0.01%)</title><rect x="83.8174%" y="485" width="0.0107%" height="15" fill="rgb(221,92,48)" fg:x="4170690" fg:w="532"/><text x="84.0674%" y="495.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (6,044 samples, 0.12%)</title><rect x="83.7283%" y="501" width="0.1215%" height="15" fill="rgb(209,209,32)" fg:x="4166259" fg:w="6044"/><text x="83.9783%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (690 samples, 0.01%)</title><rect x="83.8359%" y="485" width="0.0139%" height="15" fill="rgb(221,70,22)" fg:x="4171613" fg:w="690"/><text x="84.0859%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (950 samples, 0.02%)</title><rect x="83.9327%" y="485" width="0.0191%" height="15" fill="rgb(248,145,5)" fg:x="4176431" fg:w="950"/><text x="84.1827%" y="495.50"></text></g><g><title>hai606i_sudoku`core::hash::BuildHasher::hash_one (671 samples, 0.01%)</title><rect x="83.9518%" y="485" width="0.0135%" height="15" fill="rgb(226,116,26)" fg:x="4177381" fg:w="671"/><text x="84.2018%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (677 samples, 0.01%)</title><rect x="84.0325%" y="453" width="0.0136%" height="15" fill="rgb(244,5,17)" fg:x="4181396" fg:w="677"/><text x="84.2825%" y="463.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3,057 samples, 0.06%)</title><rect x="84.0055%" y="469" width="0.0614%" height="15" fill="rgb(252,159,33)" fg:x="4180050" fg:w="3057"/><text x="84.2555%" y="479.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,295 samples, 0.11%)</title><rect x="83.9653%" y="485" width="0.1064%" height="15" fill="rgb(206,71,0)" fg:x="4178052" fg:w="5295"/><text x="84.2153%" y="495.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (11,031 samples, 0.22%)</title><rect x="83.8507%" y="501" width="0.2217%" height="15" fill="rgb(233,118,54)" fg:x="4172349" fg:w="11031"/><text x="84.1007%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,149 samples, 0.02%)</title><rect x="84.0774%" y="501" width="0.0231%" height="15" fill="rgb(234,83,48)" fg:x="4183628" fg:w="1149"/><text x="84.3274%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (663 samples, 0.01%)</title><rect x="84.1060%" y="501" width="0.0133%" height="15" fill="rgb(228,3,54)" fg:x="4185054" fg:w="663"/><text x="84.3560%" y="511.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::rules::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::y_wing (48,705 samples, 0.98%)</title><rect x="83.1466%" y="517" width="0.9788%" height="15" fill="rgb(226,155,13)" fg:x="4137312" fg:w="48705"/><text x="83.3966%" y="527.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::get_cell_group (2,646 samples, 0.05%)</title><rect x="84.1254%" y="517" width="0.0532%" height="15" fill="rgb(241,28,37)" fg:x="4186017" fg:w="2646"/><text x="84.3754%" y="527.50"></text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (862 samples, 0.02%)</title><rect x="84.1830%" y="517" width="0.0173%" height="15" fill="rgb(233,93,10)" fg:x="4188882" fg:w="862"/><text x="84.4330%" y="527.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (4,489 samples, 0.09%)</title><rect x="84.2003%" y="517" width="0.0902%" height="15" fill="rgb(225,113,19)" fg:x="4189744" fg:w="4489"/><text x="84.4503%" y="527.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (25,633 samples, 0.52%)</title><rect x="84.2905%" y="517" width="0.5151%" height="15" fill="rgb(241,2,18)" fg:x="4194233" fg:w="25633"/><text x="84.5405%" y="527.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (519 samples, 0.01%)</title><rect x="84.8056%" y="517" width="0.0104%" height="15" fill="rgb(228,207,21)" fg:x="4219866" fg:w="519"/><text x="85.0556%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (39,217 samples, 0.79%)</title><rect x="84.8210%" y="517" width="0.7881%" height="15" fill="rgb(213,211,35)" fg:x="4220630" fg:w="39217"/><text x="85.0710%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (52,877 samples, 1.06%)</title><rect x="85.6096%" y="517" width="1.0627%" height="15" fill="rgb(209,83,10)" fg:x="4259871" fg:w="52877"/><text x="85.8596%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8,548 samples, 0.17%)</title><rect x="86.6723%" y="517" width="0.1718%" height="15" fill="rgb(209,164,1)" fg:x="4312748" fg:w="8548"/><text x="86.9223%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12,711 samples, 0.26%)</title><rect x="86.8441%" y="517" width="0.2554%" height="15" fill="rgb(213,184,43)" fg:x="4321296" fg:w="12711"/><text x="87.0941%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (1,948 samples, 0.04%)</title><rect x="87.1040%" y="517" width="0.0391%" height="15" fill="rgb(231,61,34)" fg:x="4334232" fg:w="1948"/><text x="87.3540%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc (664 samples, 0.01%)</title><rect x="87.1453%" y="517" width="0.0133%" height="15" fill="rgb(235,75,3)" fg:x="4336284" fg:w="664"/><text x="87.3953%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4,168 samples, 0.08%)</title><rect x="87.1704%" y="517" width="0.0838%" height="15" fill="rgb(220,106,47)" fg:x="4337535" fg:w="4168"/><text x="87.4204%" y="527.50"></text></g><g><title>hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::rule_solve (4,226,638 samples, 84.94%)</title><rect x="2.3165%" y="533" width="84.9417%" height="15" fill="rgb(210,196,33)" fg:x="115268" fg:w="4226638"/><text x="2.5665%" y="543.50">hai606i_sudoku`hai606i_sudoku::simple_sudoku::sudoku::_&lt;impl hai606i_sudoku::simple_sudoku::Sudoku&gt;::rule_solve</text></g><g><title>hai606i_sudoku`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (777 samples, 0.02%)</title><rect x="87.2583%" y="533" width="0.0156%" height="15" fill="rgb(229,154,42)" fg:x="4341906" fg:w="777"/><text x="87.5083%" y="543.50"></text></g><g><title>hai606i_sudoku`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (901 samples, 0.02%)</title><rect x="87.2739%" y="533" width="0.0181%" height="15" fill="rgb(228,114,26)" fg:x="4342683" fg:w="901"/><text x="87.5239%" y="543.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (693 samples, 0.01%)</title><rect x="87.2925%" y="517" width="0.0139%" height="15" fill="rgb(208,144,1)" fg:x="4343609" fg:w="693"/><text x="87.5425%" y="527.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::sync::mutex::Mutex::lock (1,208 samples, 0.02%)</title><rect x="87.4396%" y="469" width="0.0243%" height="15" fill="rgb(239,112,37)" fg:x="4350932" fg:w="1208"/><text x="87.6896%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (905 samples, 0.02%)</title><rect x="87.4457%" y="453" width="0.0182%" height="15" fill="rgb(210,96,50)" fg:x="4351235" fg:w="905"/><text x="87.6957%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (86,207 samples, 1.73%)</title><rect x="87.4639%" y="469" width="1.7325%" height="15" fill="rgb(222,178,2)" fg:x="4352140" fg:w="86207"/><text x="87.7139%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (731 samples, 0.01%)</title><rect x="89.2074%" y="469" width="0.0147%" height="15" fill="rgb(226,74,18)" fg:x="4438894" fg:w="731"/><text x="89.4574%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (89,635 samples, 1.80%)</title><rect x="87.4220%" y="485" width="1.8014%" height="15" fill="rgb(225,67,54)" fg:x="4350054" fg:w="89635"/><text x="87.6720%" y="495.50">h..</text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (607 samples, 0.01%)</title><rect x="89.2308%" y="453" width="0.0122%" height="15" fill="rgb(251,92,32)" fg:x="4440059" fg:w="607"/><text x="89.4808%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (1,555 samples, 0.03%)</title><rect x="89.2275%" y="469" width="0.0313%" height="15" fill="rgb(228,149,22)" fg:x="4439895" fg:w="1555"/><text x="89.4775%" y="479.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (1,701 samples, 0.03%)</title><rect x="89.2247%" y="485" width="0.0342%" height="15" fill="rgb(243,54,13)" fg:x="4439753" fg:w="1701"/><text x="89.4747%" y="495.50"></text></g><g><title>hai606i_sudoku`rayon_core::current_num_threads (629 samples, 0.01%)</title><rect x="89.3222%" y="453" width="0.0126%" height="15" fill="rgb(243,180,28)" fg:x="4444606" fg:w="629"/><text x="89.5722%" y="463.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Worker&lt;T&gt;::pop (648 samples, 0.01%)</title><rect x="89.3882%" y="437" width="0.0130%" height="15" fill="rgb(208,167,24)" fg:x="4447892" fg:w="648"/><text x="89.6382%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (546 samples, 0.01%)</title><rect x="89.4509%" y="405" width="0.0110%" height="15" fill="rgb(245,73,45)" fg:x="4451013" fg:w="546"/><text x="89.7009%" y="415.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (839 samples, 0.02%)</title><rect x="89.4650%" y="389" width="0.0169%" height="15" fill="rgb(237,203,48)" fg:x="4451714" fg:w="839"/><text x="89.7150%" y="399.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,017 samples, 0.02%)</title><rect x="89.4619%" y="405" width="0.0204%" height="15" fill="rgb(211,197,16)" fg:x="4451559" fg:w="1017"/><text x="89.7119%" y="415.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (4,659 samples, 0.09%)</title><rect x="89.4012%" y="437" width="0.0936%" height="15" fill="rgb(243,99,51)" fg:x="4448540" fg:w="4659"/><text x="89.6512%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (3,310 samples, 0.07%)</title><rect x="89.4284%" y="421" width="0.0665%" height="15" fill="rgb(215,123,29)" fg:x="4449889" fg:w="3310"/><text x="89.6784%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (722 samples, 0.01%)</title><rect x="89.5746%" y="373" width="0.0145%" height="15" fill="rgb(239,186,37)" fg:x="4457165" fg:w="722"/><text x="89.8246%" y="383.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,211 samples, 0.02%)</title><rect x="89.5652%" y="389" width="0.0243%" height="15" fill="rgb(252,136,39)" fg:x="4456700" fg:w="1211"/><text x="89.8152%" y="399.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (552 samples, 0.01%)</title><rect x="89.5941%" y="389" width="0.0111%" height="15" fill="rgb(223,213,32)" fg:x="4458138" fg:w="552"/><text x="89.8441%" y="399.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (545 samples, 0.01%)</title><rect x="89.5943%" y="373" width="0.0110%" height="15" fill="rgb(233,115,5)" fg:x="4458145" fg:w="545"/><text x="89.8443%" y="383.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (4,137 samples, 0.08%)</title><rect x="89.5222%" y="405" width="0.0831%" height="15" fill="rgb(207,226,44)" fg:x="4454557" fg:w="4137"/><text x="89.7722%" y="415.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (5,247 samples, 0.11%)</title><rect x="89.4999%" y="421" width="0.1054%" height="15" fill="rgb(208,126,0)" fg:x="4453448" fg:w="5247"/><text x="89.7499%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5,648 samples, 0.11%)</title><rect x="89.4949%" y="437" width="0.1135%" height="15" fill="rgb(244,66,21)" fg:x="4453199" fg:w="5648"/><text x="89.7449%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1,157 samples, 0.02%)</title><rect x="89.6256%" y="421" width="0.0233%" height="15" fill="rgb(222,97,12)" fg:x="4459702" fg:w="1157"/><text x="89.8756%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::wait_until_cold (1,991 samples, 0.04%)</title><rect x="89.6089%" y="437" width="0.0400%" height="15" fill="rgb(219,213,19)" fg:x="4458875" fg:w="1991"/><text x="89.8589%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1,264 samples, 0.03%)</title><rect x="89.6565%" y="405" width="0.0254%" height="15" fill="rgb(252,169,30)" fg:x="4461240" fg:w="1264"/><text x="89.9065%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (786 samples, 0.02%)</title><rect x="89.6821%" y="389" width="0.0158%" height="15" fill="rgb(206,32,51)" fg:x="4462514" fg:w="786"/><text x="89.9321%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (795 samples, 0.02%)</title><rect x="89.6819%" y="405" width="0.0160%" height="15" fill="rgb(250,172,42)" fg:x="4462507" fg:w="795"/><text x="89.9319%" y="415.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (2,475 samples, 0.05%)</title><rect x="89.6492%" y="421" width="0.0497%" height="15" fill="rgb(209,34,43)" fg:x="4460878" fg:w="2475"/><text x="89.8992%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (2,493 samples, 0.05%)</title><rect x="89.6490%" y="437" width="0.0501%" height="15" fill="rgb(223,11,35)" fg:x="4460866" fg:w="2493"/><text x="89.8990%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (18,078 samples, 0.36%)</title><rect x="89.3372%" y="453" width="0.3633%" height="15" fill="rgb(251,219,26)" fg:x="4445352" fg:w="18078"/><text x="89.5872%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (19,768 samples, 0.40%)</title><rect x="89.3056%" y="469" width="0.3973%" height="15" fill="rgb(231,119,3)" fg:x="4443780" fg:w="19768"/><text x="89.5556%" y="479.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Worker&lt;T&gt;::pop (563 samples, 0.01%)</title><rect x="89.7307%" y="421" width="0.0113%" height="15" fill="rgb(216,97,11)" fg:x="4464935" fg:w="563"/><text x="89.9807%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (1,243 samples, 0.02%)</title><rect x="89.7421%" y="421" width="0.0250%" height="15" fill="rgb(223,59,9)" fg:x="4465498" fg:w="1243"/><text x="89.9921%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (802 samples, 0.02%)</title><rect x="89.7509%" y="405" width="0.0161%" height="15" fill="rgb(233,93,31)" fg:x="4465939" fg:w="802"/><text x="90.0009%" y="415.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (951 samples, 0.02%)</title><rect x="89.8039%" y="357" width="0.0191%" height="15" fill="rgb(239,81,33)" fg:x="4468577" fg:w="951"/><text x="90.0539%" y="367.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (552 samples, 0.01%)</title><rect x="89.8119%" y="341" width="0.0111%" height="15" fill="rgb(213,120,34)" fg:x="4468976" fg:w="552"/><text x="90.0619%" y="351.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,136 samples, 0.02%)</title><rect x="89.8010%" y="373" width="0.0228%" height="15" fill="rgb(243,49,53)" fg:x="4468432" fg:w="1136"/><text x="90.0510%" y="383.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (2,605 samples, 0.05%)</title><rect x="89.7719%" y="405" width="0.0524%" height="15" fill="rgb(247,216,33)" fg:x="4466983" fg:w="2605"/><text x="90.0219%" y="415.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (2,216 samples, 0.04%)</title><rect x="89.7797%" y="389" width="0.0445%" height="15" fill="rgb(226,26,14)" fg:x="4467372" fg:w="2216"/><text x="90.0297%" y="399.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,948 samples, 0.06%)</title><rect x="89.7670%" y="421" width="0.0592%" height="15" fill="rgb(215,49,53)" fg:x="4466741" fg:w="2948"/><text x="90.0170%" y="431.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (5,496 samples, 0.11%)</title><rect x="89.7218%" y="437" width="0.1105%" height="15" fill="rgb(245,162,40)" fg:x="4464490" fg:w="5496"/><text x="89.9718%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon::iter::plumbing::bridge_producer_consumer::helper (6,144 samples, 0.12%)</title><rect x="89.7098%" y="453" width="0.1235%" height="15" fill="rgb(229,68,17)" fg:x="4463893" fg:w="6144"/><text x="89.9598%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6,587 samples, 0.13%)</title><rect x="89.7034%" y="469" width="0.1324%" height="15" fill="rgb(213,182,10)" fg:x="4463577" fg:w="6587"/><text x="89.9534%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (678 samples, 0.01%)</title><rect x="89.8415%" y="421" width="0.0136%" height="15" fill="rgb(245,125,30)" fg:x="4470445" fg:w="678"/><text x="90.0915%" y="431.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::latch::LatchRef&lt;L&gt; as rayon_core::latch::Latch&gt;::set (699 samples, 0.01%)</title><rect x="89.8412%" y="437" width="0.0140%" height="15" fill="rgb(232,202,2)" fg:x="4470432" fg:w="699"/><text x="90.0912%" y="447.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,247 samples, 0.03%)</title><rect x="89.8408%" y="453" width="0.0251%" height="15" fill="rgb(237,140,51)" fg:x="4470410" fg:w="1247"/><text x="90.0908%" y="463.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (522 samples, 0.01%)</title><rect x="89.8676%" y="437" width="0.0105%" height="15" fill="rgb(236,157,25)" fg:x="4471745" fg:w="522"/><text x="90.1176%" y="447.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::find_work (680 samples, 0.01%)</title><rect x="89.8672%" y="453" width="0.0137%" height="15" fill="rgb(219,209,0)" fg:x="4471725" fg:w="680"/><text x="90.1172%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (3,961 samples, 0.08%)</title><rect x="89.8929%" y="453" width="0.0796%" height="15" fill="rgb(240,116,54)" fg:x="4473006" fg:w="3961"/><text x="90.1429%" y="463.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::wait_until_cold (6,673 samples, 0.13%)</title><rect x="89.8387%" y="469" width="0.1341%" height="15" fill="rgb(216,10,36)" fg:x="4470306" fg:w="6673"/><text x="90.0887%" y="479.50"></text></g><g><title>hai606i_sudoku`rayon_core::join::join_context::_{{closure}} (35,649 samples, 0.72%)</title><rect x="89.2596%" y="485" width="0.7164%" height="15" fill="rgb(222,72,44)" fg:x="4441493" fg:w="35649"/><text x="89.5096%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (6,330 samples, 0.13%)</title><rect x="89.9785%" y="469" width="0.1272%" height="15" fill="rgb(232,159,9)" fg:x="4477266" fg:w="6330"/><text x="90.2285%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (6,398 samples, 0.13%)</title><rect x="89.9774%" y="485" width="0.1286%" height="15" fill="rgb(210,39,32)" fg:x="4477210" fg:w="6398"/><text x="90.2274%" y="495.50"></text></g><g><title>hai606i_sudoku`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (135,131 samples, 2.72%)</title><rect x="87.3984%" y="501" width="2.7157%" height="15" fill="rgb(216,194,45)" fg:x="4348882" fg:w="135131"/><text x="87.6484%" y="511.50">ha..</text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1,148 samples, 0.02%)</title><rect x="90.1228%" y="501" width="0.0231%" height="15" fill="rgb(218,18,35)" fg:x="4484442" fg:w="1148"/><text x="90.3728%" y="511.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::internal::Global::try_advance (2,151 samples, 0.04%)</title><rect x="90.9112%" y="421" width="0.0432%" height="15" fill="rgb(207,83,51)" fg:x="4523675" fg:w="2151"/><text x="91.1612%" y="431.50"></text></g><g><title>hai606i_sudoku`&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,193 samples, 0.02%)</title><rect x="90.9305%" y="405" width="0.0240%" height="15" fill="rgb(225,63,43)" fg:x="4524633" fg:w="1193"/><text x="91.1805%" y="415.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::internal::Global::collect (5,594 samples, 0.11%)</title><rect x="90.9061%" y="437" width="0.1124%" height="15" fill="rgb(207,57,36)" fg:x="4523421" fg:w="5594"/><text x="91.1561%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,994 samples, 0.06%)</title><rect x="90.9584%" y="421" width="0.0602%" height="15" fill="rgb(216,99,33)" fg:x="4526021" fg:w="2994"/><text x="91.2084%" y="431.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::default::with_handle (13,255 samples, 0.27%)</title><rect x="90.7531%" y="453" width="0.2664%" height="15" fill="rgb(225,42,16)" fg:x="4515806" fg:w="13255"/><text x="91.0031%" y="463.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (28,029 samples, 0.56%)</title><rect x="90.4801%" y="469" width="0.5633%" height="15" fill="rgb(220,201,45)" fg:x="4502221" fg:w="28029"/><text x="90.7301%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1,136 samples, 0.02%)</title><rect x="91.0205%" y="453" width="0.0228%" height="15" fill="rgb(225,33,4)" fg:x="4529114" fg:w="1136"/><text x="91.2705%" y="463.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::default::with_handle (1,952 samples, 0.04%)</title><rect x="91.0434%" y="469" width="0.0392%" height="15" fill="rgb(224,33,50)" fg:x="4530250" fg:w="1952"/><text x="91.2934%" y="479.50"></text></g><g><title>hai606i_sudoku`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46,899 samples, 0.94%)</title><rect x="90.1892%" y="485" width="0.9425%" height="15" fill="rgb(246,198,51)" fg:x="4487747" fg:w="46899"/><text x="90.4392%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2,444 samples, 0.05%)</title><rect x="91.0826%" y="469" width="0.0491%" height="15" fill="rgb(205,22,4)" fg:x="4532202" fg:w="2444"/><text x="91.3326%" y="479.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Injector&lt;T&gt;::steal (3,879 samples, 0.08%)</title><rect x="91.1319%" y="485" width="0.0780%" height="15" fill="rgb(206,3,8)" fg:x="4534656" fg:w="3879"/><text x="91.3819%" y="495.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::internal::Global::collect (806 samples, 0.02%)</title><rect x="91.3237%" y="453" width="0.0162%" height="15" fill="rgb(251,23,15)" fg:x="4544198" fg:w="806"/><text x="91.5737%" y="463.50"></text></g><g><title>hai606i_sudoku`crossbeam_epoch::default::with_handle (1,948 samples, 0.04%)</title><rect x="91.3008%" y="469" width="0.0391%" height="15" fill="rgb(252,88,28)" fg:x="4543058" fg:w="1948"/><text x="91.5508%" y="479.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6,696 samples, 0.13%)</title><rect x="91.2099%" y="485" width="0.1346%" height="15" fill="rgb(212,127,14)" fg:x="4538535" fg:w="6696"/><text x="91.4599%" y="495.50"></text></g><g><title>hai606i_sudoku`crossbeam_deque::deque::Worker&lt;T&gt;::pop (1,738 samples, 0.03%)</title><rect x="91.3444%" y="485" width="0.0349%" height="15" fill="rgb(247,145,37)" fg:x="4545231" fg:w="1738"/><text x="91.5944%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (698 samples, 0.01%)</title><rect x="91.3823%" y="485" width="0.0140%" height="15" fill="rgb(209,117,53)" fg:x="4547116" fg:w="698"/><text x="91.6323%" y="495.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::find_work (61,889 samples, 1.24%)</title><rect x="90.1530%" y="501" width="1.2438%" height="15" fill="rgb(212,90,42)" fg:x="4485948" fg:w="61889"/><text x="90.4030%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (17,099 samples, 0.34%)</title><rect x="91.4098%" y="485" width="0.3436%" height="15" fill="rgb(218,164,37)" fg:x="4548483" fg:w="17099"/><text x="91.6598%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1,103 samples, 0.02%)</title><rect x="91.7628%" y="453" width="0.0222%" height="15" fill="rgb(246,65,34)" fg:x="4566051" fg:w="1103"/><text x="92.0128%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1,123 samples, 0.02%)</title><rect x="91.7626%" y="469" width="0.0226%" height="15" fill="rgb(231,100,33)" fg:x="4566039" fg:w="1123"/><text x="92.0126%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1,733 samples, 0.03%)</title><rect x="91.7535%" y="485" width="0.0348%" height="15" fill="rgb(228,126,14)" fg:x="4565585" fg:w="1733"/><text x="92.0035%" y="495.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::sleep (19,516 samples, 0.39%)</title><rect x="91.3968%" y="501" width="0.3922%" height="15" fill="rgb(215,173,21)" fg:x="4547837" fg:w="19516"/><text x="91.6468%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (4,669 samples, 0.09%)</title><rect x="91.7948%" y="437" width="0.0938%" height="15" fill="rgb(210,6,40)" fg:x="4567641" fg:w="4669"/><text x="92.0448%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4,735 samples, 0.10%)</title><rect x="91.7939%" y="453" width="0.0952%" height="15" fill="rgb(212,48,18)" fg:x="4567595" fg:w="4735"/><text x="92.0439%" y="463.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::sync::mutex::Mutex::lock (5,053 samples, 0.10%)</title><rect x="91.7936%" y="469" width="0.1015%" height="15" fill="rgb(230,214,11)" fg:x="4567581" fg:w="5053"/><text x="92.0436%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5,433 samples, 0.11%)</title><rect x="91.8952%" y="469" width="0.1092%" height="15" fill="rgb(254,105,39)" fg:x="4572636" fg:w="5433"/><text x="92.1452%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1,807 samples, 0.04%)</title><rect x="92.0052%" y="453" width="0.0363%" height="15" fill="rgb(245,158,5)" fg:x="4578113" fg:w="1807"/><text x="92.2552%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1,816 samples, 0.04%)</title><rect x="92.0051%" y="469" width="0.0365%" height="15" fill="rgb(249,208,11)" fg:x="4578106" fg:w="1816"/><text x="92.2551%" y="479.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_specific_thread (12,757 samples, 0.26%)</title><rect x="91.7906%" y="485" width="0.2564%" height="15" fill="rgb(210,39,28)" fg:x="4567434" fg:w="12757"/><text x="92.0406%" y="495.50"></text></g><g><title>hai606i_sudoku`rayon_core::sleep::Sleep::wake_any_threads (12,887 samples, 0.26%)</title><rect x="91.7890%" y="501" width="0.2590%" height="15" fill="rgb(211,56,53)" fg:x="4567353" fg:w="12887"/><text x="92.0390%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (352,489 samples, 7.08%)</title><rect x="92.0553%" y="501" width="7.0839%" height="15" fill="rgb(226,201,30)" fg:x="4580606" fg:w="352489"/><text x="92.3053%" y="511.50">libsystem_..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (528 samples, 0.01%)</title><rect x="99.1399%" y="501" width="0.0106%" height="15" fill="rgb(239,101,34)" fg:x="4933127" fg:w="528"/><text x="99.3899%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (525 samples, 0.01%)</title><rect x="99.1399%" y="485" width="0.0106%" height="15" fill="rgb(226,209,5)" fg:x="4933130" fg:w="525"/><text x="99.3899%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (939 samples, 0.02%)</title><rect x="99.1505%" y="501" width="0.0189%" height="15" fill="rgb(250,105,47)" fg:x="4933655" fg:w="939"/><text x="99.4005%" y="511.50"></text></g><g><title>hai606i_sudoku`rayon_core::registry::WorkerThread::wait_until_cold (590,034 samples, 11.86%)</title><rect x="87.3143%" y="517" width="11.8578%" height="15" fill="rgb(230,72,3)" fg:x="4344695" fg:w="590034"/><text x="87.5643%" y="527.50">hai606i_sudoku`ray..</text></g><g><title>hai606i_sudoku`rayon_core::registry::ThreadBuilder::run (591,605 samples, 11.89%)</title><rect x="87.2925%" y="533" width="11.8893%" height="15" fill="rgb(232,218,39)" fg:x="4343609" fg:w="591605"/><text x="87.5425%" y="543.50">hai606i_sudoku`ray..</text></g><g><title>hai606i_sudoku`core::fmt::write (716 samples, 0.01%)</title><rect x="99.1834%" y="501" width="0.0144%" height="15" fill="rgb(248,166,6)" fg:x="4935293" fg:w="716"/><text x="99.4334%" y="511.50"></text></g><g><title>hai606i_sudoku`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,163 samples, 0.02%)</title><rect x="99.1820%" y="517" width="0.0234%" height="15" fill="rgb(247,89,20)" fg:x="4935224" fg:w="1163"/><text x="99.4320%" y="527.50"></text></g><g><title>hai606i_sudoku`std::io::stdio::_print (1,224 samples, 0.02%)</title><rect x="99.1818%" y="533" width="0.0246%" height="15" fill="rgb(248,130,54)" fg:x="4935214" fg:w="1224"/><text x="99.4318%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (9,571 samples, 0.19%)</title><rect x="99.2115%" y="501" width="0.1923%" height="15" fill="rgb(234,196,4)" fg:x="4936693" fg:w="9571"/><text x="99.4615%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (9,805 samples, 0.20%)</title><rect x="99.2087%" y="517" width="0.1970%" height="15" fill="rgb(250,143,31)" fg:x="4936553" fg:w="9805"/><text x="99.4587%" y="527.50"></text></g><g><title>hai606i_sudoku`std::sys::pal::unix::sync::mutex::Mutex::lock (11,254 samples, 0.23%)</title><rect x="99.2074%" y="533" width="0.2262%" height="15" fill="rgb(211,110,34)" fg:x="4936489" fg:w="11254"/><text x="99.4574%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1,381 samples, 0.03%)</title><rect x="99.4059%" y="517" width="0.0278%" height="15" fill="rgb(215,124,48)" fg:x="4946362" fg:w="1381"/><text x="99.6559%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (2,673 samples, 0.05%)</title><rect x="99.4435%" y="533" width="0.0537%" height="15" fill="rgb(216,46,13)" fg:x="4948233" fg:w="2673"/><text x="99.6935%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,322 samples, 0.03%)</title><rect x="99.4972%" y="533" width="0.0266%" height="15" fill="rgb(205,184,25)" fg:x="4950906" fg:w="1322"/><text x="99.7472%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4,805 samples, 0.10%)</title><rect x="99.5237%" y="533" width="0.0966%" height="15" fill="rgb(228,1,10)" fg:x="4952228" fg:w="4805"/><text x="99.7737%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (862 samples, 0.02%)</title><rect x="99.6368%" y="517" width="0.0173%" height="15" fill="rgb(213,116,27)" fg:x="4957851" fg:w="862"/><text x="99.8868%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,356 samples, 0.03%)</title><rect x="99.6269%" y="533" width="0.0273%" height="15" fill="rgb(241,95,50)" fg:x="4957359" fg:w="1356"/><text x="99.8769%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2,150 samples, 0.04%)</title><rect x="99.6566%" y="533" width="0.0432%" height="15" fill="rgb(238,48,32)" fg:x="4958839" fg:w="2150"/><text x="99.9066%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (723 samples, 0.01%)</title><rect x="99.7139%" y="501" width="0.0145%" height="15" fill="rgb(235,113,49)" fg:x="4961688" fg:w="723"/><text x="99.9639%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,208 samples, 0.02%)</title><rect x="99.7042%" y="517" width="0.0243%" height="15" fill="rgb(205,127,43)" fg:x="4961206" fg:w="1208"/><text x="99.9542%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,422 samples, 0.03%)</title><rect x="99.6999%" y="533" width="0.0286%" height="15" fill="rgb(250,162,2)" fg:x="4960995" fg:w="1422"/><text x="99.9499%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,715 samples, 0.03%)</title><rect x="99.7335%" y="533" width="0.0345%" height="15" fill="rgb(220,13,41)" fg:x="4962665" fg:w="1715"/><text x="99.9835%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1,222 samples, 0.02%)</title><rect x="99.7680%" y="533" width="0.0246%" height="15" fill="rgb(249,221,25)" fg:x="4964380" fg:w="1222"/><text x="100.0180%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7,319 samples, 0.15%)</title><rect x="99.7933%" y="517" width="0.1471%" height="15" fill="rgb(215,208,19)" fg:x="4965643" fg:w="7319"/><text x="100.0433%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (7,360 samples, 0.15%)</title><rect x="99.7927%" y="533" width="0.1479%" height="15" fill="rgb(236,175,2)" fg:x="4965609" fg:w="7360"/><text x="100.0427%" y="543.50"></text></g><g><title>hai606i_sudoku`std::sys::backtrace::__rust_begin_short_backtrace (4,965,756 samples, 99.80%)</title><rect x="0.1559%" y="549" width="99.7956%" height="15" fill="rgb(241,52,2)" fg:x="7757" fg:w="4965756"/><text x="0.4059%" y="559.50">hai606i_sudoku`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_malloc.dylib`_free (914 samples, 0.02%)</title><rect x="99.9521%" y="549" width="0.0184%" height="15" fill="rgb(248,140,14)" fg:x="4973544" fg:w="914"/><text x="100.2021%" y="559.50"></text></g><g><title>hai606i_sudoku`core::ops::function::FnOnce::call_once{{vtable.shim}} (4,969,234 samples, 99.87%)</title><rect x="0.1331%" y="565" width="99.8655%" height="15" fill="rgb(253,22,42)" fg:x="6622" fg:w="4969234"/><text x="0.3831%" y="575.50">hai606i_sudoku`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>hai606i_sudoku`std::sys::pal::unix::thread::Thread::new::thread_start (4,969,263 samples, 99.87%)</title><rect x="0.1331%" y="581" width="99.8661%" height="15" fill="rgb(234,61,47)" fg:x="6622" fg:w="4969263"/><text x="0.3831%" y="591.50">hai606i_sudoku`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>all (4,975,926 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(208,226,15)" fg:x="0" fg:w="4975926"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (4,969,334 samples, 99.87%)</title><rect x="0.1325%" y="613" width="99.8675%" height="15" fill="rgb(217,221,4)" fg:x="6592" fg:w="4969334"/><text x="0.3825%" y="623.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (4,969,306 samples, 99.87%)</title><rect x="0.1330%" y="597" width="99.8670%" height="15" fill="rgb(212,174,34)" fg:x="6620" fg:w="4969306"/><text x="0.3830%" y="607.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>